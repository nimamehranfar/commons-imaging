package org.apache.commons.imaging.randoop;

import org.junit.FixMethodOrder;
import org.junit.jupiter.api.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression3Test {

    public static boolean debug = false;

    @Test
    void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("Unknown Tag (0x8003)", 32809, tiffDirectoryType2);
    }

    @Test
    void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText60 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        tiffOutputDirectory16.add(tagInfoGpsText60, "K");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort63 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_OPIPROXY;
        tiffOutputDirectory16.add(tagInfoShort63, (short) 4096);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles66 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_DOUBLE_PARAMS_TAG;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles67 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory69 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter70 = null;
        int[] intArray76 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration83 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader85 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder86 = tiffReader85.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles87 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled88 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory69, photometricInterpreter70, 10, (int) (byte) 10, (-65281), intArray76, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration83, byteOrder86, tiles87);
        byte[] byteArray90 = tagInfoShort68.encodeValue(byteOrder86, (short) 4096);
        double[] doubleArray96 = new double[] { (-1.0f), 20, (-3), 0.0f, (byte) 10 };
        byte[] byteArray97 = tagInfoDoubles67.encodeValue(byteOrder86, doubleArray96);
        tiffOutputDirectory16.add(tagInfoDoubles66, doubleArray96);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoGpsText60);
        org.junit.Assert.assertNotNull(tagInfoShort63);
        org.junit.Assert.assertNotNull(tagInfoDoubles66);
        org.junit.Assert.assertNotNull(tagInfoDoubles67);
        org.junit.Assert.assertNotNull(tagInfoShort68);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration83 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration83.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[16, 0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray97), "[-65, -16, 0, 0, 0, 0, 0, 0, 64, 52, 0, 0, 0, 0, 0, 0, -64, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 36, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds21 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_PADDING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory24 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter25 = null;
        int[] intArray31 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration38 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader40 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder41 = tiffReader40.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles42 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled43 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory24, photometricInterpreter25, 10, (int) (byte) 10, (-65281), intArray31, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration38, byteOrder41, tiles42);
        byte[] byteArray45 = tagInfoShort23.encodeValue(byteOrder41, (short) 4096);
        double[] doubleArray51 = new double[] { (-1.0f), 20, (-3), 0.0f, (byte) 10 };
        byte[] byteArray52 = tagInfoDoubles22.encodeValue(byteOrder41, doubleArray51);
        byte[] byteArray57 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray52, 21, 0, true, 10);
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds21, byteArray52);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList59 = tiffOutputDirectory16.getFields();
        tiffOutputDirectory16.sortFields();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tagInfoUndefineds21);
        org.junit.Assert.assertNotNull(tagInfoDoubles22);
        org.junit.Assert.assertNotNull(tagInfoShort23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[16, 0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-65, -16, 0, 0, 0, 0, 0, 0, 64, 52, 0, 0, 0, 0, 0, 0, -64, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(tiffOutputFieldList59);
    }

    @Test
    void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray4 = photometricInterpreterFloat3.getMinXY();
        float float5 = photometricInterpreterFloat3.getMeanFound();
        float float6 = photometricInterpreterFloat3.getMaxFound();
        int[] intArray7 = photometricInterpreterFloat3.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray7, 25, 69, 65536, true);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder13 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong18 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray25 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray26 = tagInfoShortOrLong18.encodeValue(byteOrder19, intArray25);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr30 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(9, intArray25, 79, (int) (short) 100, 13);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt31 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(34712, 32895, 34713, intArray25);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterBiLevel12.interpretPixel(imageBuilder13, intArray25, (int) (short) -1, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + Float.NEGATIVE_INFINITY + "'", float6 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong18);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
    }

    @Test
    void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader9 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder10 = tiffReader9.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy11 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts14 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        short[] shortArray29 = new short[] {};
        byte[] byteArray30 = tagInfoShortOrLongOrRational15.encodeValue(byteOrder26, shortArray29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        short[] shortArray45 = new short[] {};
        byte[] byteArray46 = tagInfoShortOrLongOrRational31.encodeValue(byteOrder42, shortArray45);
        byte[] byteArray47 = tagInfoShorts14.encodeValue(byteOrder26, shortArray45);
        byte[] byteArray49 = tagInfoShort13.encodeValue(byteOrder26, (short) (byte) 10);
        short[] shortArray51 = new short[] { (byte) 0 };
        byte[] byteArray52 = tagInfoShortOrRational12.encodeValue(byteOrder26, shortArray51);
        byte[] byteArray53 = tagInfoByteOrShort7.encodeValue(byteOrder10, shortArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = tagInfoByteOrShort7.directoryType;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(tagInfoShorts14);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational31);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        java.lang.String str54 = tiffField50.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int55 = tiffField50.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str54, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
    }

    @Test
    void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        boolean boolean9 = tiffImagingParameters8.isSubImageSet();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters3.setPixelDensity(pixelDensity4);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters3.setT4Options((java.lang.Integer) (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage8 = tiffImageParser0.getBufferedImage(byteSource2, tiffImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
    }

    @Test
    void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int[] intArray3 = tiffRasterDataInt2.getIntData();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics((float) (-3));
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(23, 32908, (float) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (23, 32908)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType10);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = tagInfoByteOrShort11.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", (-16759808), abstractFieldTypeList12, 15, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (-3), (-1), tiffDirectoryType28, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("SByte", 0, abstractFieldTypeList12, 9, tiffDirectoryType28, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]", (-16776961), (-2), tiffDirectoryType28);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(65, "262 (0x106: PhotometricInterpretation): ");
    }

    @Test
    void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        java.lang.String str54 = tiffField50.getValueDescription();
        java.lang.String str55 = tiffField50.getFieldTypeName();
        tiffField50.dump();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray57 = tiffField50.getDoubleArrayValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@79e540e0 for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setReadThumbnails(false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setLzwCompressionBlockSize((java.lang.Integer) 2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setSubImage(0, (-3), 32946, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid sub-image specification: negative x and y values not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
    }

    @Test
    void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 37, 12);
        java.lang.String str3 = stub2.getElementDescription();
        java.lang.String str4 = stub2.getElementDescription();
        java.lang.String str5 = stub2.getElementDescription();
        java.lang.String str6 = stub2.getElementDescription();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Element, offset: 37, length: 12, last: 49" + "'", str3, "Element, offset: 37, length: 12, last: 49");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Element, offset: 37, length: 12, last: 49" + "'", str4, "Element, offset: 37, length: 12, last: 49");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Element, offset: 37, length: 12, last: 49" + "'", str5, "Element, offset: 37, length: 12, last: 49");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Element, offset: 37, length: 12, last: 49" + "'", str6, "Element, offset: 37, length: 12, last: 49");
    }

    @Test
    void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = tiffRasterDataInt2.getIntValue(34713, 34677, 34713);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (34713, 34677)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        int int73 = directory72.type;
        java.nio.ByteOrder byteOrder74 = null;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory75 = directory72.getOutputDirectory(byteOrder74);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = tiffOutputDirectory75.findField(tagInfo76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"tag\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 88 + "'", int73 == 88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory75);
    }

    @Test
    void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        java.awt.Color color2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 95, (float) 0L, color2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified values must be v0<v1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        int int52 = tiffField50.getSortHint();
        int int53 = tiffField50.getOffset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = tiffField50.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@7cb7ac2a");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9 + "'", int52 == 9);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
    }

    @Test
    void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType5);
        java.nio.ByteOrder byteOrder7 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_EMBED_POLICY;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts12 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        short[] shortArray27 = new short[] {};
        byte[] byteArray28 = tagInfoShortOrLongOrRational13.encodeValue(byteOrder24, shortArray27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational29 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        short[] shortArray43 = new short[] {};
        byte[] byteArray44 = tagInfoShortOrLongOrRational29.encodeValue(byteOrder40, shortArray43);
        byte[] byteArray45 = tagInfoShorts12.encodeValue(byteOrder24, shortArray43);
        byte[] byteArray47 = tagInfoShort11.encodeValue(byteOrder24, (short) (byte) 10);
        short[] shortArray49 = new short[] { (byte) 0 };
        byte[] byteArray50 = tagInfoShortOrRational10.encodeValue(byteOrder24, shortArray49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals51 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort52 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray75 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray70, 34713, (int) (byte) 0, false, (-65281));
        short short76 = tagInfoShort52.getValue(byteOrder63, byteArray75);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort81 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray82 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort81 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList83 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList83, abstractFieldTypeArray82);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList83, tiffDirectoryType85);
        java.nio.ByteOrder byteOrder87 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray89 = tagInfoByte86.encodeValue(byteOrder87, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray90 = tagInfoSRationals51.getValue(byteOrder63, byteArray89);
        byte[] byteArray91 = tagInfoSRationals9.encodeValue(byteOrder24, rationalNumberArray90);
        byte[] byteArray93 = tagInfoLong8.encodeValue(byteOrder24, 34676);
        float[] floatArray94 = tagInfoFloats6.getValue(byteOrder7, byteArray93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat95 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(4, 4, floatArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(tagInfoLong8);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(tagInfoShorts12);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals51);
        org.junit.Assert.assertNotNull(tagInfoShort52);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short76 + "' != '" + (short) 4096 + "'", short76 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[116, -121, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[4.8591E-41]");
    }

    @Test
    void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray33 = new int[] { (byte) 1, 14, 22 };
        int int34 = org.apache.commons.imaging.internal.SafeOperations.add(intArray33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray33, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray33, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration51 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader53 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder54 = tiffReader53.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray56 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray56, 32844);
        int int59 = strips58.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips60 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory23, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat26, (int) '4', intArray33, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration51, byteOrder54, 32844, strips58);
        java.awt.Rectangle rectangle61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageBuilder imageBuilder64 = dataReaderStrips60.readImageData(rectangle61, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 37 + "'", int34 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(dataElementArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str52 = tiffField50.getFieldTypeName();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        // The following exception was thrown during execution in test generation
        try {
            int int54 = tiffField50.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray33 = new int[] { (byte) 1, 14, 22 };
        int int34 = org.apache.commons.imaging.internal.SafeOperations.add(intArray33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray33, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray33, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration51 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader53 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder54 = tiffReader53.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray56 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray56, 32844);
        int int59 = strips58.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips60 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory23, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat26, (int) '4', intArray33, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration51, byteOrder54, 32844, strips58);
        java.awt.Rectangle rectangle61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageBuilder imageBuilder64 = dataReaderStrips60.readImageData(rectangle61, false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 37 + "'", int34 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(dataElementArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(65535, "262 (0x106: PhotometricInterpretation): ");
    }

    @Test
    void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        float[] floatArray6 = tiffRasterDataInt2.getData();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataInt2.getSimpleStatistics((float) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = tiffRasterDataInt2.getIntValue(7, 32908);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (7, 32908)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        int int0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.SATURATION_1_VALUE_HIGH;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList9 = tiffContents7.directories;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType23, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort19, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("hi!", (int) (short) 10, (int) (byte) -1, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("", 0, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField29 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSByte28);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (short) -1, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField47 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSRational46);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tiffDirectoryList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField29);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType41 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType41.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField47);
    }

    @Test
    void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray25 = tiffImageMetadata8.getFieldValue(tagInfoSLongs24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"tag\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement((long) (-5), 32897);
    }

    @Test
    void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType27);
        tiffOutputDirectory16.add(tagInfoSLong31, 89);
        tiffOutputDirectory16.removeField(88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts36 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_TRANSFER_FUNCTION;
        short[] shortArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoShorts36, shortArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts36);
    }

    @Test
    void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.awt.image.BufferedImage bufferedImage84 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs85 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_STRIP_ROW_COUNTS;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = tiffDirectory66.getFieldValue(tagInfoLongs85, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"StripRowCounts\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(bufferedImage84);
        org.junit.Assert.assertNotNull(tagInfoLongs85);
    }

    @Test
    void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor84 = tiffDirectory66.iterator();
        boolean boolean85 = tiffDirectory66.hasTiffRasterData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tiffFieldItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        boolean boolean82 = tiffDirectory66.hasTiffRasterData();
        boolean boolean83 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType87 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (-3), (-1), tiffDirectoryType87, true);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = tiffDirectory66.getFieldValue(tagInfoLongs89, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType87 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType87.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int int55 = tiffField51.getSortHint();
        java.lang.String str56 = tiffField51.getDescriptionWithoutValue();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 9 + "'", int55 == 9);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str56, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        java.nio.ByteOrder byteOrder6 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts7 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        short[] shortArray22 = new short[] {};
        byte[] byteArray23 = tagInfoShortOrLongOrRational8.encodeValue(byteOrder19, shortArray22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        short[] shortArray38 = new short[] {};
        byte[] byteArray39 = tagInfoShortOrLongOrRational24.encodeValue(byteOrder35, shortArray38);
        byte[] byteArray40 = tagInfoShorts7.encodeValue(byteOrder19, shortArray38);
        byte[] byteArray41 = tagInfoByteOrShort4.encodeValue(byteOrder6, shortArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed dataParserIndexed42 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed(byteArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertNotNull(tagInfoShorts7);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
    }

    @Test
    void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        byte[] byteArray6 = new byte[] { (byte) 10, (byte) 1, (byte) 100, (byte) 10, (byte) 0, (byte) 10 };
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless7 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray6);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 1, 100, 10, 0, 10]");
    }

    @Test
    void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd0 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_SUB_IFD;
        java.nio.ByteOrder byteOrder1 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals8 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder9 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        byte[] byteArray50 = tagInfoRationals8.encodeValue(byteOrder9, rationalNumberArray49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort51 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray74 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray69, 34713, (int) (byte) 0, false, (-65281));
        short short75 = tagInfoShort51.getValue(byteOrder62, byteArray74);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless76 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray74);
        short[] shortArray77 = tagInfoShorts7.getValue(byteOrder9, byteArray74);
        int[] intArray78 = new int[] {};
        byte[] byteArray79 = tagInfoShortOrLongOrRational6.encodeValue(byteOrder9, intArray78);
        byte[] byteArray80 = tagInfoLongOrIfd0.encodeValue(byteOrder1, intArray78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong81 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder82 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray88 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray89 = tagInfoShortOrLong81.encodeValue(byteOrder82, intArray88);
        int[] intArray95 = new int[] { 34892, 32, (short) 10, 11, 65000 };
        byte[] byteArray96 = tagInfoLongOrIfd0.encodeValue(byteOrder82, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray99 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressModifiedHuffman(byteArray96, 32768, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to decompress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongOrIfd0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts7);
        org.junit.Assert.assertNotNull(tagInfoRationals8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort51);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 4096 + "'", short75 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[4096]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong81);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[34892, 32, 10, 11, 65000]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[76, -120, 0, 0, 32, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, -24, -3, 0, 0]");
    }

    @Test
    void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents21 = tiffImageMetadata8.contents;
        tiffImageMetadata8.add("TIFF image data: 0 bytes", "hi!");
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tiffContents21);
    }

    @Test
    void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType19, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort15, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("M", 7, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("W", 32766, 7, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("N", 11, (-16776961), tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("", 3, (-1), tiffDirectoryType19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        tiffRasterDataFloat3.setValue(3, 5, (float) 12);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(32803, 258, 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32803, 258)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader13 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder14 = tiffReader13.getByteOrder();
        byte[] byteArray16 = tagInfoSLong11.encodeValue(byteOrder14, 1678379530);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray20 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray16, 7, 34677, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to compress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 10, 10, 10]");
    }

    @Test
    void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants.EXIF_TAG_OCE_IMAGE_LOGIC_CHARACTERISTICS;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList1 = tagInfoAscii0.dataTypes;
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(abstractFieldTypeList1);
    }

    @Test
    void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList20, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList20, 34905, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList20, 34712, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("A", 35, abstractFieldTypeList20, 32897, tiffDirectoryType54, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("ImageDataElement", 258, 5, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("", 48, 15, tiffDirectoryType54, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("306 (0x132: DateTime): ", 4, 32898, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", 34676, 0, tiffDirectoryType54, true);
        org.junit.Assert.assertNotNull(abstractFieldTypeList20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffOutputDirectory16.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData84 = tiffOutputDirectory16.getRawJpegImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor85 = tiffOutputDirectory16.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(jpegImageData84);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor85);
    }

    @Test
    void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        java.awt.Color color1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue paletteEntryForValue2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue((float) 31, color1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.getSortHint();
        tiffOutputField74.setSortHint(64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo80 = tiffOutputField74.tagInfo;
        int int81 = tiffOutputField74.count;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(tagInfo80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 32769 + "'", int81 == 32769);
    }

    @Test
    void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.imaging.internal.Debug.debug("TIFF Header");
    }

    @Test
    void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            float float9 = tiffRasterDataFloat3.getValue(50717, 89, 32898);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (50717, 89)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
    }

    @Test
    void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        int int9 = tiffRasterDataInt2.getWidth();
        float[] floatArray10 = tiffRasterDataInt2.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(5056, 34661, 77, (float) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (5056, 34661)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("MBad Type: \n\n", 277408, (int) '4', tiffDirectoryType3);
    }

    @Test
    void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        java.awt.Color color1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue paletteEntryForValue2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue((float) 0L, color1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        int int0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.ORIENTATION_VALUE_HORIZONTAL_NORMAL;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory9 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter10 = null;
        int[] intArray16 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration23 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader25 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder26 = tiffReader25.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles27 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled28 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory9, photometricInterpreter10, 10, (int) (byte) 10, (-65281), intArray16, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration23, byteOrder26, tiles27);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab32 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray16, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray16, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray16, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters43 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters45 = tiffImagingParameters0.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters47 = tiffImagingParameters45.setT4Options((java.lang.Integer) 79);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters49 = tiffImagingParameters47.setXmpXml("E");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters50 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity51 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters52 = tiffImagingParameters50.setPixelDensity(pixelDensity51);
        java.lang.Integer int53 = tiffImagingParameters50.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters55 = tiffImagingParameters50.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity56 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters57 = tiffImagingParameters50.setPixelDensity(pixelDensity56);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat60 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray61 = photometricInterpreterFloat60.getMinXY();
        float float62 = photometricInterpreterFloat60.getMeanFound();
        float float63 = photometricInterpreterFloat60.getMaxFound();
        float float64 = photometricInterpreterFloat60.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters65 = tiffImagingParameters50.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat60);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters66 = tiffImagingParameters47.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat60);
        int[] intArray67 = photometricInterpreterFloat60.getMinXY();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(tiffImagingParameters43);
        org.junit.Assert.assertNotNull(tiffImagingParameters45);
        org.junit.Assert.assertNotNull(tiffImagingParameters47);
        org.junit.Assert.assertNotNull(tiffImagingParameters49);
        org.junit.Assert.assertNotNull(tiffImagingParameters52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(tiffImagingParameters55);
        org.junit.Assert.assertNotNull(tiffImagingParameters57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 0.0f + "'", float62 == 0.0f);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + Float.NEGATIVE_INFINITY + "'", float63 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.0f + "'", float64 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters65);
        org.junit.Assert.assertNotNull(tiffImagingParameters66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
    }

    @Test
    void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_BITS_PER_RUN_LENGTH;
        org.junit.Assert.assertNotNull(tagInfoShort0);
    }

    @Test
    void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        int int87 = tiffDirectory66.type;
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 88 + "'", int87 == 88);
    }

    @Test
    void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension4 = tiffImageParser0.getImageSize(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        java.lang.String str58 = tiffHeader56.getElementDescription();
        int int59 = tiffHeader56.length;
        boolean boolean60 = tiffHeader56.bigTiff;
        java.nio.ByteOrder byteOrder61 = tiffHeader56.byteOrder;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "TIFF Header" + "'", str58, "TIFF Header");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
    }

    @Test
    void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        boolean boolean87 = tiffDirectory70.hasJpegImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList88 = tiffDirectory70.getDirectoryEntries();
        java.lang.String str89 = tiffDirectory70.getElementDescription();
        java.awt.image.BufferedImage bufferedImage90 = tiffDirectory70.getTiffImage();
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tiffFieldList88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNull(bufferedImage90);
    }

    @Test
    void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor27 = tiffOutputDirectory16.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor27);
    }

    @Test
    void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = tiffImageParser0.dumpImageFile(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader25 = tiffContents24.header;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd26 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_SUB_IFD;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField27 = tiffContents24.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLongOrIfd26);
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList28 = tiffContents24.getElements();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNull(tiffHeader25);
        org.junit.Assert.assertNotNull(tagInfoLongOrIfd26);
        org.junit.Assert.assertNull(tiffField27);
        org.junit.Assert.assertNotNull(abstractTiffElementList28);
    }

    @Test
    void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        long long75 = tiffDirectory66.getNextDirectoryOffset();
        boolean boolean76 = tiffDirectory66.hasTiffRasterData();
        int int77 = tiffDirectory66.length;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong78 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_CODING_METHODS;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = tiffDirectory66.getFieldValue(tagInfoLong78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"CodingMethods\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 9L + "'", long75 == 9L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 6 + "'", int77 == 6);
        org.junit.Assert.assertNotNull(tagInfoLong78);
    }

    @Test
    void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType18, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, 65536, tiffDirectoryType18, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, 65000, tiffDirectoryType32, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytes", 65000, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader52 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder53 = tiffReader52.getByteOrder();
        byte[] byteArray55 = tagInfoSLong50.encodeValue(byteOrder53, 1678379530);
        byte[] byteArray57 = tagInfoByte38.encodeValue(byteOrder53, (byte) 0);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 77, 32803, byteArray57);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType47 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType47.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0]");
    }

    @Test
    void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds68 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_FLASHPIX_VERSION;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds68, false);
        tiffImageMetadata8.add("32771 (0x8003: Unknown Tag): ", "TIFF image data: 0 bytesBad Type: \n\n");
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(tagInfoUndefineds68);
        org.junit.Assert.assertNull(tiffField70);
    }

    @Test
    void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort10, 5, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("TIFF Header", (int) (short) 1, 14, tiffDirectoryType12, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType1 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(15);
        org.junit.Assert.assertNull(tiffDirectoryType1);
    }

    @Test
    void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.nio.ByteOrder byteOrder84 = tiffDirectory66.getByteOrder();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator85 = tiffDirectory66.spliterator();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator85);
    }

    @Test
    void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType85);
        java.nio.ByteOrder byteOrder89 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray91 = tagInfoSByte88.encodeValue(byteOrder89, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory92 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder89);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData93 = tiffOutputDirectory92.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData94 = tiffOutputDirectory92.getRawJpegImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor95 = tiffOutputDirectory92.iterator();
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = tiffOutputDirectory16.getItemDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"privateName\" because \"dirType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder89);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData93);
        org.junit.Assert.assertNull(jpegImageData94);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor95);
    }

    @Test
    void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator87 = tiffOutputSet85.spliterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getGpsDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator87);
        org.junit.Assert.assertNull(tiffOutputDirectory88);
    }

    @Test
    void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        byte[] byteArray53 = tagInfoSByte11.encodeValue(byteOrder24, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader57 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder24, 23, (long) 64, true);
        long long58 = tiffHeader57.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder59 = tiffHeader57.byteOrder;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii60 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder61 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray69 = tagInfoAscii60.encodeValue(byteOrder61, strArray68);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless70 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteOrder59, byteArray69);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser71 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder72 = tiffImageParser71.getByteOrder();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray73 = fieldTypeAscii0.writeData((java.lang.Object) byteOrder59, byteOrder72);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown data type: LITTLE_ENDIAN");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeAscii0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(tagInfoAscii60);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(byteOrder72);
    }

    @Test
    void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational0 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_SPEED;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.nio.ByteOrder byteOrder68 = tiffDirectory67.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType75);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("TIFF image data: 0 bytes", (int) (byte) 1, 31, tiffDirectoryType75);
        short[] shortArray79 = tiffDirectory67.getFieldValue(tagInfoSShorts77, false);
        java.nio.ByteOrder byteOrder80 = tiffDirectory67.getByteOrder();
        byte[] byteArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber82 = tagInfoRational0.getValue(byteOrder80, byteArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from byte/boolean array because \"bytes\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRational0);
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType75 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType75.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray79);
        org.junit.Assert.assertNotNull(byteOrder80);
    }

    @Test
    void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii(32768, "Bad TypeUnknown Tag (0x8003): ");
    }

    @Test
    void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = tiffImageParser0.dumpImageFile(printWriter5, byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
    }

    @Test
    void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((int) (byte) 0, "Bad Type");
        org.apache.commons.imaging.formats.tiff.TiffField tiffField3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = fieldTypeAscii2.getValue(tiffField3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffField.getByteArrayValue()\" because \"entry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        java.lang.String str58 = tiffHeader56.getElementDescription();
        int int59 = tiffHeader56.length;
        boolean boolean60 = tiffHeader56.bigTiff;
        int int61 = tiffHeader56.tiffVersion;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "TIFF Header" + "'", str58, "TIFF Header");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 23 + "'", int61 == 23);
    }

    @Test
    void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = tiffImageParser0.dumpImageFile(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        int int5 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt2.getSimpleStatistics((float) 77);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue((-65536), 65536, (float) 80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-65536, 65536)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData92 = directory91.getJpegImageData();
        int int93 = directory91.type;
        int int94 = directory91.type;
        int int95 = directory91.type;
        java.lang.String str97 = directory91.toString("M");
        int int98 = directory91.type;
        java.awt.image.BufferedImage bufferedImage99 = directory91.getThumbnail();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNull(jpegImageData92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 88 + "'", int93 == 88);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 88 + "'", int94 == 88);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 88 + "'", int95 == 88);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "MBad Type: \n\n" + "'", str97, "MBad Type: \n\n");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 88 + "'", int98 == 88);
        org.junit.Assert.assertNull(bufferedImage99);
    }

    @Test
    void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator76 = tiffDirectory66.spliterator();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator76);
    }

    @Test
    void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        tiffImageMetadata8.add("TIFF image data: 0 bytes", "");
        tiffImageMetadata8.add("S", "TIFF image data: 0 bytes");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray47 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray42, 34713, (int) (byte) 0, false, (-65281));
        short short48 = tagInfoShort24.getValue(byteOrder35, byteArray47);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray62 = tagInfoSRationals23.getValue(byteOrder35, byteArray61);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless63 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray61);
        java.nio.ByteOrder byteOrder64 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField66 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_20, (long) 34676, (long) 7, byteArray61, byteOrder64, 9);
        long[] longArray67 = tiffField66.getLongArrayValue();
        long long68 = tiffField66.getCount();
        java.lang.String str69 = tiffField66.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem70 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField66);
        java.lang.String str71 = tiffMetadataItem70.getKeyword();
        tiffImageMetadata8.add((org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem) tiffMetadataItem70);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField73 = tiffMetadataItem70.getTiffField();
        // The following exception was thrown during execution in test generation
        try {
            long long74 = tiffField73.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tagInfoSRationals23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short48 + "' != '" + (short) 4096 + "'", short48 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray62);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 34676L + "'", long68 == 34676L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Unknown Tag (0x8003)" + "'", str71, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(tiffField73);
    }

    @Test
    void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters2.setFileName("Unknown Tag (0x8003)");
        org.apache.commons.imaging.PixelDensity pixelDensity10 = tiffImagingParameters2.getPixelDensity();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNull(pixelDensity10);
    }

    @Test
    void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort1 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_FOCAL_LENGTH_IN_35MM_FORMAT;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 6, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort21 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort26 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList28 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList28, abstractFieldTypeArray27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList28, tiffDirectoryType30);
        java.nio.ByteOrder byteOrder32 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray34 = tagInfoByte31.encodeValue(byteOrder32, (byte) 0);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray44 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray39, 34713, (int) (byte) 0, false, (-65281));
        short short45 = tagInfoShort21.getValue(byteOrder32, byteArray44);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort50 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList52 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, abstractFieldTypeArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, tiffDirectoryType54);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoByte55.encodeValue(byteOrder56, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray59 = tagInfoSRationals20.getValue(byteOrder32, byteArray58);
        byte[] byteArray60 = fieldTypeLong8_6.writeData((java.lang.Object) 6, byteOrder32);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField61 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((int) '4', (org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShort1, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational2, 4, byteArray60);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless62 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray60);
        org.junit.Assert.assertNotNull(tagInfoShort1);
        org.junit.Assert.assertNotNull(fieldTypeRational2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals20);
        org.junit.Assert.assertNotNull(tagInfoShort21);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short45 + "' != '" + (short) 4096 + "'", short45 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[6, 0, 0, 0]");
    }

    @Test
    void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = tiffRasterDataInt2.getIntValue(19, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (19, 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension3 = tiffImageParser0.getImageSize(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        java.awt.Color color1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue paletteEntryForValue2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue((float) '#', color1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray3 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT6(byteArray0, 25, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"buf\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter5 = tiffImagingParameters2.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT6Options((java.lang.Integer) (-5));
        org.apache.commons.imaging.PixelDensity pixelDensity10 = tiffImagingParameters7.getPixelDensity();
        org.apache.commons.imaging.PixelDensity pixelDensity11 = tiffImagingParameters7.getPixelDensity();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(photometricInterpreter5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNull(pixelDensity10);
        org.junit.Assert.assertNull(pixelDensity11);
    }

    @Test
    void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData23 = tiffOutputDirectory16.getRawJpegImageData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoSByte36.encodeValue(byteOrder37, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder37);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData41 = tiffOutputDirectory40.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory40.add(tagInfoByte42, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData45 = null;
        tiffOutputDirectory40.setJpegImageData(jpegImageData45);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList47 = tiffOutputDirectory40.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory40.add(tagInfoShort48, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds51 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_ICCPROFILE;
        tiffOutputDirectory40.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds51);
        byte[] byteArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds51, byteArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(jpegImageData23);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType33 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType33.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData41);
        org.junit.Assert.assertNotNull(tagInfoByte42);
        org.junit.Assert.assertNotNull(tiffOutputFieldList47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(tagInfoUndefineds51);
    }

    @Test
    void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        tiffDirectory66.dump();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii77 = org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants.EXIF_TAG_OCE_IDENTIFICATION_NUMBER;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray79 = tiffDirectory66.getFieldValue(tagInfoAscii77, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"Oce Identification Number\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(tagInfoAscii77);
    }

    @Test
    void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList5 = tiffImageParser0.getAllBufferedImages(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
    }

    @Test
    void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        int int5 = tiffRasterDataFloat3.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat3.getSimpleStatistics((float) 23);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue((int) (short) 0, 32908, (float) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 32908)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 6 + "'", int5 == 6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageDataElement", 32896, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, 10);
        java.lang.String str7 = fieldTypeShort4.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = tiffImageParser0.getFormatCompliance(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        org.apache.commons.imaging.PixelDensity pixelDensity9 = tiffImagingParameters5.getPixelDensity();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(pixelDensity9);
    }

    @Test
    void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        boolean boolean3 = strips2.stripsNotTiles();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray4 = strips2.getImageData();
        int int5 = strips2.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray6 = strips2.getImageData();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(dataElementArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(dataElementArray6);
    }

    @Test
    void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65536, tiffDirectoryType16, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65000, tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytes", 65000, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader50 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder51 = tiffReader50.getByteOrder();
        byte[] byteArray53 = tagInfoSLong48.encodeValue(byteOrder51, 1678379530);
        byte[] byteArray55 = tagInfoByte36.encodeValue(byteOrder51, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless56 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray55);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray61 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray55, (int) ' ', 95, true, 7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to compress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
    }

    @Test
    void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = directory72.getOutputDirectory(byteOrder91);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList95 = tiffOutputDirectory94.getFields();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertNotNull(tiffOutputFieldList95);
    }

    @Test
    void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        int int0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.COMPRESSION_VALUE_PACK_BITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 32773 + "'", int0 == 32773);
    }

    @Test
    void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = directory72.getOutputDirectory(byteOrder91);
        int int95 = tiffOutputDirectory94.getType();
        java.lang.String str96 = tiffOutputDirectory94.description();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 88 + "'", int95 == 88);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Bad Type" + "'", str96, "Bad Type");
    }

    @Test
    void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ORIGINAL_RAW_FILE_NAME;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii23 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_IMAGE_ID;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory24 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter25 = null;
        int[] intArray31 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration38 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader40 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder41 = tiffReader40.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles42 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled43 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory24, photometricInterpreter25, 10, (int) (byte) 10, (-65281), intArray31, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration38, byteOrder41, tiles42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals48 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals50 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort51 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray74 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray69, 34713, (int) (byte) 0, false, (-65281));
        short short75 = tagInfoShort51.getValue(byteOrder62, byteArray74);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort80 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray81 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort80 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList82 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList82, abstractFieldTypeArray81);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList82, tiffDirectoryType84);
        java.nio.ByteOrder byteOrder86 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray88 = tagInfoByte85.encodeValue(byteOrder86, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray89 = tagInfoSRationals50.getValue(byteOrder62, byteArray88);
        byte[] byteArray90 = tagInfoRationals48.encodeValue(byteOrder49, rationalNumberArray89);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data91 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray90);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data92 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray90);
        java.lang.String[] strArray93 = tagInfoAscii23.getValue(byteOrder41, byteArray90);
        tiffOutputDirectory16.add(tagInfoAsciiOrByte22, strArray93);
        boolean boolean95 = tagInfoAsciiOrByte22.isOffset();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tagInfoAsciiOrByte22);
        org.junit.Assert.assertNotNull(tagInfoAscii23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(tagInfoRationals48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(tagInfoSRationals50);
        org.junit.Assert.assertNotNull(tagInfoShort51);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 4096 + "'", short75 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[]");
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        int int54 = tiffField50.getOffset();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo55 = tiffField50.getTagInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = tiffField50.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@7446240");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(tagInfo55);
    }

    @Test
    void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement56 = tiffField53.getOversizeValueElement();
        java.lang.String str57 = tiffField53.toString();
        java.lang.Object obj58 = fieldTypeLong2.getValue(tiffField53);
        int int59 = tiffField53.getDirectoryType();
        // The following exception was thrown during execution in test generation
        try {
            double double60 = tiffField53.getDoubleValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(abstractTiffElement56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 31 + "'", int59 == 31);
    }

    @Test
    void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray87 = tiffDirectory66.getFieldValue(tagInfoRationals85, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        int int54 = tiffField50.getOffset();
        byte[] byteArray55 = tiffField50.getByteArrayValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
    }

//    @Test
//    void test1604() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest3.test1604");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getOrCreateRootDirectory();
//        tiffOutputSet85.removeField(65);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getGpsDirectory();
//        java.lang.String str91 = tiffOutputSet85.toString();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
//        org.junit.Assert.assertNull(tiffOutputDirectory90);
//        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n" + "'", str91, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n");
//    }

    @Test
    void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        directory72.add("SByte", "");
        java.awt.image.BufferedImage bufferedImage76 = directory72.getThumbnail();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(bufferedImage76);
    }

    @Test
    void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 5, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("N", (-2), 89, tiffDirectoryType20, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Tiff-Custom", 19, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType20);
        int int27 = fieldTypeShort6.getSize();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
    }

    @Test
    void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo88 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputSet85.removeField(tagInfo88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"tag\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
    }

    @Test
    void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 79);
        boolean boolean5 = tiffRasterStatistics4.isAnExcludedValueSet();
        int int6 = tiffRasterStatistics4.getCountOfSamples();
        int int7 = tiffRasterStatistics4.getCountOfSamples();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
    }

    @Test
    void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((-3), "A");
    }

    @Test
    void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray4 = photometricInterpreterFloat3.getMinXY();
        float float5 = photometricInterpreterFloat3.getMeanFound();
        int[] intArray6 = photometricInterpreterFloat3.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray13 = photometricInterpreterFloat12.getMinXY();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette14 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette((-16759808), intArray6, 13, 65536, 14, intArray13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingFormatException; message: bitsPerPixel 0 (maxI = 2) is too large or colorMap is too small 2");
        } catch (org.apache.commons.imaging.ImagingFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
    }

    @Test
    void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType83 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader88 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder89 = tiffReader88.getByteOrder();
        byte[] byteArray91 = tagInfoSLong86.encodeValue(byteOrder89, 1678379530);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = tiffDirectory66.getFieldValue(tagInfoSLong86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"E\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType83 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType83.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder89);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[100, 10, 10, 10]");
    }

    @Test
    void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        int int68 = tiffDirectory66.type;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int70 = tiffDirectory66.getSingleFieldValue(tagInfoShortOrLong69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 88 + "'", int68 == 88);
    }

    @Test
    void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters4.setPixelDensity(pixelDensity5);
        int int7 = tiffImagingParameters6.getSubImageY();
        java.lang.String str8 = tiffImagingParameters6.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters6.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setFileName("hi!");
        boolean boolean12 = tiffImagingParameters11.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setXmpXml("A");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters11.setSubImage(4, 64, 32895, 34712);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters21 = tiffImagingParameters11.setXmpXml("");
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage22 = tiffImageParser0.getBufferedImage(byteSource3, tiffImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
        org.junit.Assert.assertNotNull(tiffImagingParameters21);
    }

    @Test
    void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffOutputDirectory16.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData84 = tiffOutputDirectory16.getRawJpegImageData();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField86 = tiffOutputDirectory16.findField(5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(jpegImageData84);
        org.junit.Assert.assertNull(tiffOutputField86);
    }

    @Test
    void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.imaging.internal.Debug.debug(throwable0, 34713);
    }

    @Test
    void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = tiffImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
    }

    @Test
    void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList2 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SHORT_OR_LONG;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("M", 95, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("M", 20, 65536, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 3, abstractFieldTypeList2, tiffDirectoryType11);
        int int17 = tagInfoByte16.tag;
        org.junit.Assert.assertNotNull(abstractFieldTypeList2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
    }

    @Test
    void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 100, 34713);
    }

    @Test
    void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList6 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort18, 5, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: 37, length: 12, last: 49", 65536, abstractFieldTypeList6, 80, tiffDirectoryType20, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) 'a', abstractFieldTypeList6, 14, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType45, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("V", 32909, 32895, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("T", (int) (short) 10, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("ImageDataElement", 9, abstractFieldTypeList6, (int) (byte) 10, tiffDirectoryType45);
        org.junit.Assert.assertNotNull(abstractFieldTypeList6);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MODEL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder4 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray12 = tagInfoAscii3.encodeValue(byteOrder4, strArray11);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField13 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong1, 79, byteArray12);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless14 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray12);
        java.awt.image.BufferedImage bufferedImage15 = null;
        java.io.OutputStream outputStream16 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity18 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters17.setPixelDensity(pixelDensity18);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters21 = tiffImagingParameters19.setXmpXml("Bad Type");
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossless14.writeImage(bufferedImage15, outputStream16, tiffImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeLong1);
        org.junit.Assert.assertNotNull(tagInfoAscii3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
        org.junit.Assert.assertNotNull(tiffImagingParameters21);
    }

    @Test
    void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_OPTO_ELECTRIC_CONV_FACTOR;
        boolean boolean1 = tagInfoUndefineds0.isOffset();
        org.junit.Assert.assertNotNull(tagInfoUndefineds0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement56 = tiffField53.getOversizeValueElement();
        java.lang.String str57 = tiffField53.toString();
        java.lang.Object obj58 = fieldTypeLong2.getValue(tiffField53);
        int int59 = tiffField53.getDirectoryType();
        // The following exception was thrown during execution in test generation
        try {
            int int60 = tiffField53.getIntValueOrArraySum();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@671a365c for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(abstractTiffElement56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 31 + "'", int59 == 31);
    }

    @Test
    void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) (short) 4096);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType64 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType64);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoSByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType71 = tagInfoSByte67.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("306 (0x132: DateTime): ", 0, 34661, tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab97 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray81, (int) (short) 100, 77, 5);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoSLongs72, intArray81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 34661 value(s), not 2");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType64 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType64.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType71 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType71.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
    }

    @Test
    void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList20, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList20, 34905, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList20, 34712, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("A", 35, abstractFieldTypeList20, 32897, tiffDirectoryType54, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("ImageDataElement", 258, 5, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("", 48, 15, tiffDirectoryType54, true);
        boolean boolean62 = tiffDirectoryType54.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("13 (0xd: E): ", 5, 32768, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("E", 64, 18, tiffDirectoryType54);
        org.junit.Assert.assertNotNull(abstractFieldTypeList20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray33 = new int[] { (byte) 1, 14, 22 };
        int int34 = org.apache.commons.imaging.internal.SafeOperations.add(intArray33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray33, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray33, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration51 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader53 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder54 = tiffReader53.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray56 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray56, 32844);
        int int59 = strips58.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips60 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory23, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat26, (int) '4', intArray33, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration51, byteOrder54, 32844, strips58);
        java.awt.Rectangle rectangle61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageBuilder imageBuilder64 = dataReaderStrips60.readImageData(rectangle61, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 37 + "'", int34 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(dataElementArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt3.getSimpleStatistics();
        float[] floatArray6 = tiffRasterDataInt3.getData();
        int int7 = tiffRasterDataInt3.getSamplesPerPixel();
        int[] intArray8 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(80, intArray8, 65, (-2), 34676);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo9 = tiffImageParser0.getImageInfo(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        java.lang.String str93 = directory91.toString("Element, offset: 37, length: 12, last: 49");
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList94 = directory91.getAllFields();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Element, offset: 37, length: 12, last: 49Bad Type: \n\n" + "'", str93, "Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.junit.Assert.assertNotNull(tiffFieldList94);
    }

    @Test
    void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        float[] floatArray6 = tiffRasterDataInt2.getData();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(32946, 88, 34677);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32946, 88)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds61 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort62 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational63 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort68 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray69 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort68 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList70 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList70, abstractFieldTypeArray69);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList70, tiffDirectoryType72);
        java.nio.ByteOrder byteOrder74 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray76 = tagInfoByte73.encodeValue(byteOrder74, (byte) 0);
        short[] shortArray77 = new short[] {};
        byte[] byteArray78 = tagInfoShortOrLongOrRational63.encodeValue(byteOrder74, shortArray77);
        byte[] byteArray80 = tagInfoShort62.encodeValue(byteOrder74, (short) (byte) -1);
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds61, byteArray80);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertNotNull(tagInfoUndefineds61);
        org.junit.Assert.assertNotNull(tagInfoShort62);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational63);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-1, -1]");
    }

    @Test
    void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            float float8 = tiffRasterDataFloat3.getValue(93, 1678379530);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (93, 1678379530)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
    }

    @Test
    void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("Unknown Tag (0x8003)", (int) (short) -1, tiffDirectoryType2);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy23 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts26 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort32 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList34 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, abstractFieldTypeArray33);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder38 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray40 = tagInfoByte37.encodeValue(byteOrder38, (byte) 0);
        short[] shortArray41 = new short[] {};
        byte[] byteArray42 = tagInfoShortOrLongOrRational27.encodeValue(byteOrder38, shortArray41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational43 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort48 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList50 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, abstractFieldTypeArray49);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, tiffDirectoryType52);
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray56 = tagInfoByte53.encodeValue(byteOrder54, (byte) 0);
        short[] shortArray57 = new short[] {};
        byte[] byteArray58 = tagInfoShortOrLongOrRational43.encodeValue(byteOrder54, shortArray57);
        byte[] byteArray59 = tagInfoShorts26.encodeValue(byteOrder38, shortArray57);
        byte[] byteArray61 = tagInfoShort25.encodeValue(byteOrder38, (short) (byte) 10);
        short[] shortArray63 = new short[] { (byte) 0 };
        byte[] byteArray64 = tagInfoShortOrRational24.encodeValue(byteOrder38, shortArray63);
        byte[] byteArray65 = tagInfoByteOrShort19.encodeValue(byteOrder22, shortArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType74 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType74);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType74);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType74);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoSByte77.encodeValue(byteOrder78, (byte) 0);
        byte[] byteArray81 = tagInfoByteOrShort11.encodeValue(byteOrder22, byteArray80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii82 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder83 = null;
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray91 = tagInfoAscii82.encodeValue(byteOrder83, strArray90);
        int int92 = tagInfoDirectory3.getValue(byteOrder22, byteArray91);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType2 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType2.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(tagInfoShorts26);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational27);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational43);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType74 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType74.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0]");
        org.junit.Assert.assertNotNull(tagInfoAscii82);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1751720192 + "'", int92 == 1751720192);
    }

    @Test
    void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        float float3 = photometricInterpreterFloat2.getMaxFound();
        int[] intArray4 = photometricInterpreterFloat2.getMaxXY();
        int[] intArray5 = photometricInterpreterFloat2.getMinXY();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.NEGATIVE_INFINITY + "'", float3 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
    }

    @Test
    void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters4.setPixelDensity(pixelDensity5);
        java.lang.Integer int7 = tiffImagingParameters4.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters4.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setOutputSet(tiffOutputSet10);
        java.lang.String str12 = tiffImagingParameters9.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory13 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setBufferedImageFactory(bufferedImageFactory13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = tiffImageParser0.getXmpXml(byteSource3, (org.apache.commons.imaging.common.XmpImagingParameters<org.apache.commons.imaging.formats.tiff.TiffImagingParameters>) tiffImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "V" + "'", str12, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
    }

    @Test
    void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder1 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray7 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray8 = tagInfoShortOrLong0.encodeValue(byteOrder1, intArray7);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = null;
        float[] floatArray22 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray23 = tagInfoFloats17.encodeValue(byteOrder18, floatArray22);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField24 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat11, 32844, byteArray23);
        int int25 = tiffOutputField24.count;
        org.junit.Assert.assertNotNull(tagInfoShortOrLong0);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32844 + "'", int25 == 32844);
    }

    @Test
    void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        long long76 = tiffDirectory66.getNextDirectoryOffset();
        boolean boolean77 = tiffDirectory66.hasTiffRasterData();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage78 = tiffDirectory66.getTiffImage();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"ImageWidth\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 9L + "'", long76 == 9L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        int int36 = tiffOutputDirectory16.getItemLength();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator37 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType41);
        float[] floatArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoFloats42, floatArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator37);
    }

    @Test
    void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float float5 = tiffRasterStatistics4.getMinValue();
        float float6 = tiffRasterStatistics4.getExcludedValue();
        float float7 = tiffRasterStatistics4.getExcludedValue();
        float float8 = tiffRasterStatistics4.getMaxValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue(Float.isNaN(float6));
        org.junit.Assert.assertTrue(Float.isNaN(float7));
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
    }

    @Test
    void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("TIFF image data: 0 bytes", 25, 69, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("Unknown Tag (0x8003): ", 32895, 34713, tiffDirectoryType6);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            float float7 = tiffRasterDataFloat3.getValue(13, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (13, -1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        java.lang.String str76 = tiffDirectory66.getElementDescription();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        int int73 = directory72.type;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("M", 34892, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser86 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder87 = tiffImageParser86.getByteOrder();
        byte[] byteArray89 = tagInfoDouble85.encodeValue(byteOrder87, (double) 32771);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = directory72.getOutputDirectory(byteOrder87);
        java.lang.String str92 = directory72.toString("ImageLayer");
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 88 + "'", int73 == 88);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType82 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType82.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[64, -32, 0, 96, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ImageLayerBad Type: \n\n" + "'", str92, "ImageLayerBad Type: \n\n");
    }

    @Test
    void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory2 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter3 = null;
        int[] intArray9 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration16 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader18 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder19 = tiffReader18.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles20 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled21 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory2, photometricInterpreter3, 10, (int) (byte) 10, (-65281), intArray9, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration16, byteOrder19, tiles20);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray9, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(6, intArray9, 258, 65536, 73);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder30 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader34 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder35 = tiffReader34.getByteOrder();
        int[] intArray39 = new int[] { (byte) 1, 14, 22 };
        int int40 = org.apache.commons.imaging.internal.SafeOperations.add(intArray39);
        byte[] byteArray41 = tagInfoLongs32.encodeValue(byteOrder35, intArray39);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb45 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(95, intArray39, 18, 19, 29);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr29.interpretPixel(imageBuilder30, intArray39, 0, 93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(tagInfoLongs32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 37 + "'", int40 == 37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
    }

    @Test
    void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory15 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter16 = null;
        int[] intArray22 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration29 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader31 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder32 = tiffReader31.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles33 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled34 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory15, photometricInterpreter16, 10, (int) (byte) 10, (-65281), intArray22, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration29, byteOrder32, tiles33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray22, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray22, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel48 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray22, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters49 = tiffImagingParameters6.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel48);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters51 = tiffImagingParameters6.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters53 = tiffImagingParameters6.setLzwCompressionBlockSize((java.lang.Integer) 32);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension54 = tiffImageParser0.getImageSize(byteSource5, tiffImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration29 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration29.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(tiffImagingParameters49);
        org.junit.Assert.assertNotNull(tiffImagingParameters51);
        org.junit.Assert.assertNotNull(tiffImagingParameters53);
    }

    @Test
    void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        tiffImagingParameters11.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity15 = tiffImagingParameters11.getPixelDensity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = tiffImageParser0.getMetadata(byteSource5, tiffImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNull(pixelDensity15);
    }

    @Test
    void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        int int6 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray7 = tiles5.tiles;
        int int8 = tiles5.getTileHeight();
        boolean boolean9 = tiles5.stripsNotTiles();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray10 = tiles5.getImageData();
        int int11 = tiles5.getTileWidth();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(dataElementArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8 == 14);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(dataElementArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = tiffDirectory89.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        long long58 = tiffHeader56.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder59 = tiffHeader56.byteOrder;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader60 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray61 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, tiffDirectoryArray61);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray64 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList65 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList65, tiffFieldArray64);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents67 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader60, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList65);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader68 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray69 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList70 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList70, tiffDirectoryArray69);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray72 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73, tiffFieldArray72);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents75 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader68, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList70, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents76 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader56, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73);
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList77 = tiffContents76.getElements();
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader78 = tiffContents76.header;
        tiffContents76.dissect();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(tiffDirectoryArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(abstractTiffElementList77);
        org.junit.Assert.assertNotNull(tiffHeader78);
    }

    @Test
    void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = tiffRasterDataInt2.getIntValue(8, 65535);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (8, 65535)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals0 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder1 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals2 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort3 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort8 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, abstractFieldTypeArray9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, tiffDirectoryType12);
        java.nio.ByteOrder byteOrder14 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray16 = tagInfoByte13.encodeValue(byteOrder14, (byte) 0);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray26 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray21, 34713, (int) (byte) 0, false, (-65281));
        short short27 = tagInfoShort3.getValue(byteOrder14, byteArray26);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort32 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList34 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, abstractFieldTypeArray33);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder38 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray40 = tagInfoByte37.encodeValue(byteOrder38, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray41 = tagInfoSRationals2.getValue(byteOrder14, byteArray40);
        byte[] byteArray42 = tagInfoRationals0.encodeValue(byteOrder1, rationalNumberArray41);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray46 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_2D(byteArray42, (int) (byte) 0, 65000, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRationals0);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(tagInfoSRationals2);
        org.junit.Assert.assertNotNull(tagInfoShort3);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) 4096 + "'", short27 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
    }

    @Test
    void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("VBad Type: \n\n", (-1), tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte14 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort23 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort28 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, abstractFieldTypeArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoByte33.encodeValue(byteOrder34, (byte) 0);
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray46 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray41, 34713, (int) (byte) 0, false, (-65281));
        short short47 = tagInfoShort23.getValue(byteOrder34, byteArray46);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray61 = tagInfoSRationals22.getValue(byteOrder34, byteArray60);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless62 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray60);
        java.nio.ByteOrder byteOrder63 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField65 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_19, (long) 34676, (long) 7, byteArray60, byteOrder63, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType66 = tiffField65.getFieldType();
        boolean boolean67 = tiffField65.isLocalValue();
        java.lang.Object obj68 = fieldTypeByte14.getValue(tiffField65);
        java.lang.Object obj69 = fieldTypeFloat13.getValue(tiffField65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo70 = tiffField65.getTagInfo();
        java.lang.String str71 = tiffField65.getFieldTypeName();
        int int72 = tiffField65.getSortHint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = tagInfoXpString10.getValue(tiffField65);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(fieldTypeByte14);
        org.junit.Assert.assertNotNull(tagInfoSRationals22);
        org.junit.Assert.assertNotNull(tagInfoShort23);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short47 + "' != '" + (short) 4096 + "'", short47 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray61);
        org.junit.Assert.assertNotNull(abstractFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(tagInfo70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
    }

    @Test
    void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        float[] floatArray6 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics((float) (-2));
        float[] floatArray9 = tiffRasterDataInt2.getData();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = tiffRasterDataInt2.getIntValue(32768, (-5), 31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32768, -5)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int int6 = tiffRasterDataFloat3.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            float float10 = tiffRasterDataFloat3.getValue(32769, 0, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32769, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        long long76 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong77 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BAYER_GREEN_SPLIT;
        // The following exception was thrown during execution in test generation
        try {
            int int78 = tiffDirectory66.getFieldValue(tagInfoLong77);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"BayerGreenSplit\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 9L + "'", long76 == 9L);
        org.junit.Assert.assertNotNull(tagInfoLong77);
    }

    @Test
    void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(34677, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32766, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            float float5 = tiffRasterDataFloat2.getValue(77, 93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (77, 93)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str52 = tiffField50.getFieldTypeName();
        // The following exception was thrown during execution in test generation
        try {
            long long53 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.Object obj57 = fieldTypeByte3.getValue(tiffField54);
        java.lang.Object obj58 = fieldTypeFloat2.getValue(tiffField54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = tiffField54.getTagInfo();
        java.lang.String str60 = tiffField54.getFieldTypeName();
        int int61 = tiffField54.getBytesLength();
        tiffField54.dump();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray63 = tiffField54.getDoubleArrayValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@4c042ed4 for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(tagInfo59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 277408 + "'", int61 == 277408);
    }

    @Test
    void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setReadThumbnails(false);
        int int4 = tiffImagingParameters3.getSubImageY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat8 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray9 = photometricInterpreterFloat8.getMinXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(19, intArray9, 15, 1, 29);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters3.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterCmyk13);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
    }

    @Test
    void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters5.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters5.setBufferedImageFactory(bufferedImageFactory10);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters11.setFileName("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters11.setT4Options((java.lang.Integer) 29);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = tiffImageParser0.getIccProfileBytes(file4, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
    }

    @Test
    void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 37, 12);
        java.lang.String str3 = stub2.getElementDescription();
        long long4 = stub2.offset;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Element, offset: 37, length: 12, last: 49" + "'", str3, "Element, offset: 37, length: 12, last: 49");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 37L + "'", long4 == 37L);
    }

    @Test
    void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(88, "[TagInfo. tag: 48320 (0xbcc0, name: ImageOffset]");
    }

    @Test
    void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("", 32, 19, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader11 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder12 = tiffReader11.getByteOrder();
        int[] intArray16 = new int[] { (byte) 1, 14, 22 };
        int int17 = org.apache.commons.imaging.internal.SafeOperations.add(intArray16);
        byte[] byteArray18 = tagInfoLongs9.encodeValue(byteOrder12, intArray16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        short[] shortArray34 = new short[] {};
        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        short[] shortArray50 = new short[] {};
        byte[] byteArray51 = tagInfoShortOrLongOrRational36.encodeValue(byteOrder47, shortArray50);
        byte[] byteArray52 = tagInfoShorts19.encodeValue(byteOrder31, shortArray50);
        byte[] byteArray53 = tagInfoShortOrRational8.encodeValue(byteOrder12, shortArray50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed dataParserIndexed54 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed(byteArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLongs9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 37 + "'", int17 == 37);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tagInfoShorts19);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational36);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
    }

    @Test
    void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        byte[] byteArray4 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray9 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray4, 34713, (int) (byte) 0, false, (-65281));
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray9, 18, 30, true, 8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to compress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 16]");
    }

    @Test
    void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "N");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG8;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        byte[] byteArray56 = tiffField54.getByteArrayValue();
        java.lang.Object obj57 = fieldTypeLong8_3.getValue(tiffField54);
        long[] longArray58 = tiffField54.getLongArrayValue();
        int int59 = tiffField54.getTag();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem60 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField54);
        java.lang.Object obj61 = fieldTypeDouble2.getValue(tiffField54);
        org.junit.Assert.assertNotNull(fieldTypeLong8_3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32771 + "'", int59 == 32771);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts68 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_TRANSFER_FUNCTION;
        short[] shortArray70 = tiffDirectory66.getFieldValue(tagInfoShorts68, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = tiffDirectory66.getFieldValue(tagInfoSLong71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoShorts68);
        org.junit.Assert.assertNull(shortArray70);
    }

    @Test
    void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort16, 6, tiffDirectoryType21, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = fieldTypeLong8_11.writeData((java.lang.Object) 6, byteOrder37);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational66 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort71 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, abstractFieldTypeArray72);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, tiffDirectoryType75);
        java.nio.ByteOrder byteOrder77 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray79 = tagInfoByte76.encodeValue(byteOrder77, (byte) 0);
        short[] shortArray80 = new short[] {};
        byte[] byteArray81 = tagInfoShortOrLongOrRational66.encodeValue(byteOrder77, shortArray80);
        byte[] byteArray82 = tagInfoShortOrLongOrRational8.encodeValue(byteOrder37, shortArray80);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray85 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT6(byteArray82, 73, 32768);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading stream for huffman tree");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[6, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational66);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
    }

    @Test
    void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        byte[] byteArray52 = tiffField50.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType53 = tiffField50.getFieldType();
        java.io.PrintWriter printWriter54 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField50.dump(printWriter54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType53);
    }

    @Test
    void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        int int87 = tiffDirectory70.length;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii88 = org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants.EXIF_TAG_GDAL_METADATA;
        java.lang.String[] strArray90 = tiffDirectory70.getFieldValue(tagInfoAscii88, false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement> imageDataElementList91 = tiffDirectory70.getTiffRawImageDataElements();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 6 + "'", int87 == 6);
        org.junit.Assert.assertNotNull(tagInfoAscii88);
        org.junit.Assert.assertNull(strArray90);
    }

    @Test
    void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText79 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean80 = tagInfoGpsText79.isText();
        tiffOutputDirectory16.add(tagInfoGpsText79, "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ");
        boolean boolean83 = tagInfoGpsText79.isText();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoGpsText79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter5 = tiffImagingParameters2.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT4Options((java.lang.Integer) 30);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = tiffImagingParameters7.getBufferedImageFactory();
        int int11 = tiffImagingParameters7.getSubImageX();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters7.setSubImage(32897, 0, 32909, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid sub-image specification width and height must be greater than zero");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(photometricInterpreter5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNull(bufferedImageFactory10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong86 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_AFCP_IPTC;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLong86);
        tiffOutputSet85.dump();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoLong86);
    }

    @Test
    void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 5, tiffDirectoryType8);
        int int10 = fieldTypeShort6.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("[TagInfo. tag: 255 (0xff, name: TIFF Header]", (-1), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals68 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray69 = tiffImageMetadata8.getFieldValue(tagInfoRationals68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts70 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_SAMPLE_FORMAT;
        short[] shortArray71 = tiffImageMetadata8.getFieldValue(tagInfoShorts70);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("TIFF image data: 0 bytes", 4, 95, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("K", 32845, (-3), tiffDirectoryType84);
        float[] floatArray89 = tiffImageMetadata8.getFieldValue(tagInfoFloats88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats90 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_LOOK_TABLE_DATA;
        float[] floatArray91 = tiffImageMetadata8.getFieldValue(tagInfoFloats90);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(tagInfoRationals68);
        org.junit.Assert.assertNull(rationalNumberArray69);
        org.junit.Assert.assertNotNull(tagInfoShorts70);
        org.junit.Assert.assertNull(shortArray71);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType84 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType84.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(floatArray89);
        org.junit.Assert.assertNotNull(tagInfoFloats90);
        org.junit.Assert.assertNull(floatArray91);
    }

    @Test
    void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = tiffRasterDataInt2.getIntValue(23, 32769, 32773);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (23, 32769)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    }

    @Test
    void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader14 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder15 = tiffReader14.getByteOrder();
        byte[] byteArray17 = tagInfoSLong12.encodeValue(byteOrder15, 1678379530);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory18 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(32896, byteOrder15);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 10, 10, 10]");
    }

    @Test
    void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        int int23 = tiffOutputDirectory16.getType();
        java.lang.String str24 = tiffOutputDirectory16.description();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType31, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("ImageColorIndicator", 31, (-1), tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType41, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("ImageColorIndicator", 31, (-1), tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong45 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PREVIEW_IMAGE_LENGTH_SUB_IFD1;
        java.lang.String str46 = tagInfoLong45.name;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts49 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational50 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        short[] shortArray64 = new short[] {};
        byte[] byteArray65 = tagInfoShortOrLongOrRational50.encodeValue(byteOrder61, shortArray64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational66 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort71 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, abstractFieldTypeArray72);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, tiffDirectoryType75);
        java.nio.ByteOrder byteOrder77 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray79 = tagInfoByte76.encodeValue(byteOrder77, (byte) 0);
        short[] shortArray80 = new short[] {};
        byte[] byteArray81 = tagInfoShortOrLongOrRational66.encodeValue(byteOrder77, shortArray80);
        byte[] byteArray82 = tagInfoShorts49.encodeValue(byteOrder61, shortArray80);
        byte[] byteArray84 = tagInfoShort48.encodeValue(byteOrder61, (short) (byte) 10);
        short[] shortArray86 = new short[] { (byte) 0 };
        byte[] byteArray87 = tagInfoShortOrRational47.encodeValue(byteOrder61, shortArray86);
        byte[] byteArray89 = tagInfoLong45.encodeValue(byteOrder61, (-3));
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt92 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType93 = tiffRasterDataInt92.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics94 = tiffRasterDataInt92.getSimpleStatistics();
        float[] floatArray95 = tiffRasterDataInt92.getData();
        byte[] byteArray96 = tagInfoFloats44.encodeValue(byteOrder61, floatArray95);
        tiffOutputDirectory16.add(tagInfoFloats34, floatArray95);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Bad Type" + "'", str24, "Bad Type");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType31 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType31.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType41 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType41.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLong45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PreviewImageLength" + "'", str46, "PreviewImageLength");
        org.junit.Assert.assertNotNull(tagInfoShortOrRational47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(tagInfoShorts49);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational50);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational66);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[-3, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType93 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType93.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics94);
        org.junit.Assert.assertNotNull(floatArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray95), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder58 = tiffHeader56.byteOrder;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii59 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder60 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray68 = tagInfoAscii59.encodeValue(byteOrder60, strArray67);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless69 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteOrder58, byteArray68);
        java.io.OutputStream outputStream70 = null;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet71 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossless69.write(outputStream70, tiffOutputSet71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.write.TiffOutputSet.findField(org.apache.commons.imaging.formats.tiff.taginfos.TagInfo)\" because \"outputSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(tagInfoAscii59);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
    }

    @Test
    void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.getFieldType(1);
        org.junit.Assert.assertNotNull(abstractFieldType1);
    }

    @Test
    void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        int int5 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(32766, (int) (short) 16, 32845);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32766, 16)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.getFieldType((-65281));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Field type -65281 is unsupported");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
    }

    @Test
    void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType36);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType36);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoSByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory43 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder40);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData44 = tiffOutputDirectory43.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory43.add(tagInfoByte45, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData48 = null;
        tiffOutputDirectory43.setJpegImageData(jpegImageData48);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData50 = tiffOutputDirectory43.getRawJpegImageData();
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory43);
        int int52 = tiffOutputDirectory43.getItemLength();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType36 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType36.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData44);
        org.junit.Assert.assertNotNull(tagInfoByte45);
        org.junit.Assert.assertNull(jpegImageData50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 18 + "'", int52 == 18);
    }

    @Test
    void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("W", (int) (byte) 10, 8, tiffDirectoryType28);
        byte[] byteArray30 = tiffImageMetadata8.getFieldValue(tagInfoSBytes29);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.GpsInfo gpsInfo31 = tiffImageMetadata8.getGpsInfo();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(gpsInfo31);
    }

    @Test
    void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy0 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy();
        java.io.OutputStream outputStream1 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort2 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort8 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, abstractFieldTypeArray9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, tiffDirectoryType12);
        java.nio.ByteOrder byteOrder14 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray16 = tagInfoByte13.encodeValue(byteOrder14, (byte) 0);
        short[] shortArray17 = new short[] {};
        byte[] byteArray18 = tagInfoShortOrLongOrRational3.encodeValue(byteOrder14, shortArray17);
        byte[] byteArray20 = tagInfoShort2.encodeValue(byteOrder14, (short) (byte) -1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet21 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder14);
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossy0.write(outputStream1, tiffOutputSet21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: No directories.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort2);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational3);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -1]");
    }

    @Test
    void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("32771 (0x8003: Unknown Tag):  (34676 hi!)", 32946, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("306 (0x132: DateTime): ", (int) ' ', 80, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("S", 32773, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("", 32947, 18, tiffDirectoryType16, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 255, 0, tiffDirectoryType9, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("", (-1), 43, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        short[] shortArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray52 = tagInfoShortOrLongOrRational13.encodeValue(byteOrder27, shortArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
    }

    @Test
    void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(71, 2, (-65281));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster samples-per-pixel specification must be at least 1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int int5 = tiffRasterStatistics4.getCountOfSamples();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 336 + "'", int5 == 336);
    }

    @Test
    void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters4.setPixelDensity(pixelDensity5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setXmpXml("Bad Type");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = tiffImageParser0.getMetadata(byteSource3, tiffImagingParameters6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
    }

    @Test
    void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters2.setPixelDensity(pixelDensity3);
        java.lang.Integer int5 = tiffImagingParameters2.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setXmpXml("V");
        tiffImagingParameters7.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setFileName("M");
        int int11 = tiffImagingParameters10.getSubImageY();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage12 = tiffImageParser0.getBufferedImage(byteSource1, tiffImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb24 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray8, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder25 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt28 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType29 = tiffRasterDataInt28.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics30 = tiffRasterDataInt28.getSimpleStatistics();
        float[] floatArray31 = tiffRasterDataInt28.getData();
        int int32 = tiffRasterDataInt28.getSamplesPerPixel();
        int[] intArray33 = tiffRasterDataInt28.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType34 = tiffRasterDataInt28.getDataType();
        int[] intArray35 = tiffRasterDataInt28.getIntData();
        int int36 = org.apache.commons.imaging.internal.SafeOperations.add(intArray35);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterRgb24.interpretPixel(imageBuilder25, intArray35, 258, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType29 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType29.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics30);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType34 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType34.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        boolean boolean73 = tiffDirectory67.hasTiffFloatingPointRasterData();
        long long74 = tiffDirectory67.getNextDirectoryOffset();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement75 = tiffDirectory67.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 9L + "'", long74 == 9L);
    }

    @Test
    void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        java.awt.image.BufferedImage bufferedImage92 = directory91.getThumbnail();
        java.awt.image.BufferedImage bufferedImage93 = directory91.getThumbnail();
        java.awt.image.BufferedImage bufferedImage94 = directory91.getThumbnail();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNull(bufferedImage92);
        org.junit.Assert.assertNull(bufferedImage93);
        org.junit.Assert.assertNull(bufferedImage94);
    }

    @Test
    void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean5 = tiffImagingParameters4.isSubImageSet();
        int int6 = tiffImagingParameters4.getSubImageWidth();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters4.asThis();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage8 = tiffImageParser0.getBufferedImage(file3, tiffImagingParameters4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
    }

    @Test
    void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) (-2), (float) 65, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong86 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_AFCP_IPTC;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLong86);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getOrCreateRootDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText89 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory88.add(tagInfoGpsText89, "OversizeValueElement, tag: Unknown Tag, fieldType: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText.encodeValue(org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType, Object, java.nio.ByteOrder)\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoLong86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
    }

    @Test
    void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        float float7 = tiffRasterStatistics6.getMinValue();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7 == 0.0f);
    }

    @Test
    void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics();
        float float7 = tiffRasterStatistics6.getExcludedValue();
        float float8 = tiffRasterStatistics6.getMinValue();
        float float9 = tiffRasterStatistics6.getMeanValue();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue(Float.isNaN(float7));
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
    }

    @Test
    void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int int6 = tiffRasterDataFloat3.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(277408, (int) (short) 0, 0, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (277408, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.Object obj57 = fieldTypeByte3.getValue(tiffField54);
        java.lang.Object obj58 = fieldTypeFloat2.getValue(tiffField54);
        int int59 = tiffField54.getTag();
        java.io.PrintWriter printWriter60 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField54.dump(printWriter60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32771 + "'", int59 == 32771);
    }

    @Test
    void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        tiffImagingParameters11.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity15 = tiffImagingParameters11.getPixelDensity();
        boolean boolean16 = tiffImagingParameters11.isSubImageSet();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension17 = tiffImageParser0.getImageSize(file5, tiffImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNull(pixelDensity15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList5 = tiffImageParser0.getAllBufferedImages(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
    }

    @Test
    void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray4 = photometricInterpreterFloat3.getMinXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel9 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray4, 32845, 7, 9, false);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
    }

    @Test
    void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType78, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType85);
        java.lang.Object obj88 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte87);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData89 = tiffDirectory66.getJpegImageData();
        boolean boolean90 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray91 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips93 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray91, 32844);
        int int94 = strips93.getImageDataLength();
        int int95 = strips93.rowsPerStrip;
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) strips93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement dataElement98 = strips93.getImageData((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(jpegImageData89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(dataElementArray91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32844 + "'", int95 == 32844);
    }

    @Test
    void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("32771 (0x8003: Unknown Tag):  (34676 hi!)", (-16759808), tiffDirectoryType10, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii69 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_DISTANCE_REF;
        java.lang.String[] strArray71 = tiffDirectory66.getFieldValue(tagInfoAscii69, false);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData72 = tiffDirectory66.getJpegImageData();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = tiffDirectory66.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tagInfoAscii69);
        org.junit.Assert.assertNull(strArray71);
        org.junit.Assert.assertNull(jpegImageData72);
    }

    @Test
    void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        long[] longArray54 = tiffField50.getLongArrayValue();
        int int55 = tiffField50.getDirectoryType();
        java.lang.String str56 = tiffField50.getTagName();
        java.lang.String str57 = tiffField50.getDescriptionWithoutValue();
        java.lang.String str58 = tiffField50.getValueDescription();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Unknown Tag (0x8003)" + "'", str56, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str57, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.FLOAT;
        java.lang.String str1 = fieldTypeFloat0.getName();
        org.junit.Assert.assertNotNull(fieldTypeFloat0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Float" + "'", str1, "Float");
    }

    @Test
    void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        java.nio.ByteOrder byteOrder1 = null;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory2 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(32773, byteOrder1);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType12);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoSByte15.encodeValue(byteOrder16, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory19 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString20 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPAUTHOR;
        tiffOutputDirectory19.add(tagInfoXpString20, "W");
        tiffOutputDirectory2.add(tagInfoXpString20, "Unknown Tag (0x8003): ");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 255, 0, tiffDirectoryType34, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("", (-1), 43, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals39 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals41 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort42 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort47 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort47 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList49 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList49, abstractFieldTypeArray48);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType51 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList49, tiffDirectoryType51);
        java.nio.ByteOrder byteOrder53 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray55 = tagInfoByte52.encodeValue(byteOrder53, (byte) 0);
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray65 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray60, 34713, (int) (byte) 0, false, (-65281));
        short short66 = tagInfoShort42.getValue(byteOrder53, byteArray65);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort71 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, abstractFieldTypeArray72);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, tiffDirectoryType75);
        java.nio.ByteOrder byteOrder77 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray79 = tagInfoByte76.encodeValue(byteOrder77, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray80 = tagInfoSRationals41.getValue(byteOrder53, byteArray79);
        byte[] byteArray81 = tagInfoRationals39.encodeValue(byteOrder40, rationalNumberArray80);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory2.add(tagInfoShortOrLongOrRational38, rationalNumberArray80);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 43 value(s), not 0");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(tagInfoXpString20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoRationals39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(tagInfoSRationals41);
        org.junit.Assert.assertNotNull(tagInfoShort42);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short66 + "' != '" + (short) 4096 + "'", short66 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
    }

    @Test
    void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int[] intArray55 = tiffField51.getIntArrayValue();
        tiffField51.dump();
        int int57 = tiffField51.getOffset();
        java.io.PrintWriter printWriter58 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField51.dump(printWriter58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
    }

    @Test
    void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort34, 6, tiffDirectoryType39, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType39);
        java.nio.ByteOrder byteOrder45 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat49 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray50 = photometricInterpreterFloat49.getMinXY();
        float float51 = photometricInterpreterFloat49.getMeanFound();
        float float52 = photometricInterpreterFloat49.getMaxFound();
        int[] intArray53 = photometricInterpreterFloat49.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray53, 25, 69, 65536, true);
        byte[] byteArray59 = tagInfoSLongs44.encodeValue(byteOrder45, intArray53);
        int[] intArray60 = tiffImageMetadata8.getFieldValue(tagInfoSLongs44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType66);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", (int) (byte) 10, tiffDirectoryType66);
        byte[] byteArray69 = tiffImageMetadata8.getFieldValue(tagInfoByte68);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList70 = tiffImageMetadata8.getAllFields();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + Float.NEGATIVE_INFINITY + "'", float52 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNull(intArray60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType66 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType66.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNotNull(tiffFieldList70);
    }

    @Test
    void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType17);
        boolean boolean20 = tagInfoByte19.isText();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(1678379530, 65536, 0, (float) 258);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (1678379530, 65536)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        int int9 = tiffRasterDataInt2.getWidth();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(31, 77, 73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (31, 77)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals68 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray69 = tiffImageMetadata8.getFieldValue(tagInfoRationals68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts70 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_SAMPLE_FORMAT;
        short[] shortArray71 = tiffImageMetadata8.getFieldValue(tagInfoShorts70);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("TIFF image data: 0 bytes", 4, 95, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("K", 32845, (-3), tiffDirectoryType84);
        float[] floatArray89 = tiffImageMetadata8.getFieldValue(tagInfoFloats88);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.GpsInfo gpsInfo90 = tiffImageMetadata8.getGpsInfo();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(tagInfoRationals68);
        org.junit.Assert.assertNull(rationalNumberArray69);
        org.junit.Assert.assertNotNull(tagInfoShorts70);
        org.junit.Assert.assertNull(shortArray71);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType84 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType84.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(floatArray89);
        org.junit.Assert.assertNull(gpsInfo90);
    }

    @Test
    void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("[TagInfo. tag: 255 (0xff, name: TIFF Header]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: [TagInfo. tag: 255 (0xff, name: TIFF Header]");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        byte[] byteArray53 = tagInfoSByte11.encodeValue(byteOrder24, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader57 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder24, 23, (long) 64, true);
        long long58 = tiffHeader57.offsetToFirstIFD;
        long long59 = tiffHeader57.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder60 = tiffHeader57.byteOrder;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory61 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(12, byteOrder60);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData62 = tiffOutputDirectory61.getRawTiffImageData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 64L + "'", long59 == 64L);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(abstractTiffImageData62);
    }

    @Test
    void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        java.nio.ByteOrder byteOrder54 = tiffField50.getByteOrder();
        // The following exception was thrown during execution in test generation
        try {
            int int55 = tiffField50.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertNull(byteOrder54);
    }

    @Test
    void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement((long) 2, 80);
    }

    @Test
    void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 6, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("hi!", (-65281), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 95);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble((int) (byte) 0, "M");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort28 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray51 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray46, 34713, (int) (byte) 0, false, (-65281));
        short short52 = tagInfoShort28.getValue(byteOrder39, byteArray51);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray66 = tagInfoSRationals27.getValue(byteOrder39, byteArray65);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless67 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray65);
        java.nio.ByteOrder byteOrder68 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_24, (long) 34676, (long) 7, byteArray65, byteOrder68, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType71 = tiffField70.getFieldType();
        byte[] byteArray72 = tiffField70.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType73 = tiffField70.getFieldType();
        java.lang.Object obj74 = fieldTypeDouble19.getValue(tiffField70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo75 = tiffField70.getTagInfo();
        java.lang.Object obj76 = fieldTypeShort6.getValue(tiffField70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = tiffField70.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@701b25aa");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals27);
        org.junit.Assert.assertNotNull(tagInfoShort28);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short52 + "' != '" + (short) 4096 + "'", short52 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray66);
        org.junit.Assert.assertNotNull(abstractFieldType71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(tagInfo75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.awt.image.BufferedImage bufferedImage3 = null;
        java.io.OutputStream outputStream4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        int int8 = tiffImagingParameters7.getSubImageY();
        java.lang.String str9 = tiffImagingParameters7.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.asThis();
        int int11 = tiffImagingParameters10.getSubImageWidth();
        int int12 = tiffImagingParameters10.getSubImageY();
        int int13 = tiffImagingParameters10.getSubImageY();
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage3, outputStream4, tiffImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = tiffImageParser0.dumpImageFile(printWriter5, byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
    }

    @Test
    void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("W", (int) (byte) 10, 8, tiffDirectoryType28);
        byte[] byteArray30 = tiffImageMetadata8.getFieldValue(tagInfoSBytes29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType34);
        int[] intArray36 = tiffImageMetadata8.getFieldValue(tagInfoLongs35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("N", (int) '4', 34712, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("hi!", (int) ' ', 32809, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("N", 1678379530, 32897, tiffDirectoryType52);
        byte[] byteArray58 = tiffImageMetadata8.getFieldValue(tagInfoSBytes57);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(intArray36);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType52 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType52.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray58);
    }

    @Test
    void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int[] intArray55 = tiffField51.getIntArrayValue();
        tiffField51.dump();
        // The following exception was thrown during execution in test generation
        try {
            int int57 = tiffField51.getIntValueOrArraySum();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@b6b94ac for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
    }

    @Test
    void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ANTI_ALIAS_STRENGTH;
        org.junit.Assert.assertNotNull(tagInfoRational0);
    }

    @Test
    void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII_OR_RATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("S", (-65536), abstractFieldTypeList8, 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("W", (-65536), 0, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("Float", 32845, 32809, tiffDirectoryType16);
        org.junit.Assert.assertNotNull(abstractFieldTypeList8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        int[] intArray5 = tiffRasterDataInt2.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(32947, 42, (float) 42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32947, 42)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        java.lang.String str58 = tiffHeader56.getElementDescription();
        int int59 = tiffHeader56.length;
        long long60 = tiffHeader56.offsetToFirstIFD;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "TIFF Header" + "'", str58, "TIFF Header");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 64L + "'", long60 == 64L);
    }

    @Test
    void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        java.lang.String str1 = org.apache.commons.imaging.formats.tiff.TiffDirectory.description(3);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Bad Type" + "'", str1, "Bad Type");
    }

    @Test
    void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList2 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("TIFF image data: 0 bytesBad Type: \n\n", 258, 4, tiffDirectoryType7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("tif", 32845, abstractFieldTypeList2, 65536, tiffDirectoryType7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
    }

    @Test
    void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters2.setT6Options((java.lang.Integer) 12);
        java.lang.Integer int5 = tiffImagingParameters2.getT4Options();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNull(int5);
    }

    @Test
    void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_FREE_BYTE_COUNTS;
        int[] intArray70 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType83 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("S", 65, (int) (byte) -1, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("ImageColorIndicator", 32773, 100, tiffDirectoryType83);
        short[] shortArray90 = tiffDirectory66.getFieldValue(tagInfoSShorts88, false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNull(intArray70);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType83 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType83.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray90);
    }

    @Test
    void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType11);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = tagInfoByteOrShort12.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        short[] shortArray38 = new short[] {};
        byte[] byteArray39 = tagInfoShortOrLongOrRational24.encodeValue(byteOrder35, shortArray38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        short[] shortArray54 = new short[] {};
        byte[] byteArray55 = tagInfoShortOrLongOrRational40.encodeValue(byteOrder51, shortArray54);
        byte[] byteArray56 = tagInfoShorts23.encodeValue(byteOrder35, shortArray54);
        byte[] byteArray58 = tagInfoShort22.encodeValue(byteOrder35, (short) (byte) 10);
        byte[] byteArray65 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int66 = tagInfoDirectory21.getValue(byteOrder35, byteArray65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort67 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        byte[] byteArray85 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray90 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray85, 34713, (int) (byte) 0, false, (-65281));
        short short91 = tagInfoShort67.getValue(byteOrder78, byteArray90);
        byte[] byteArray92 = tagInfoByteOrShort12.encodeValue(byteOrder35, byteArray90);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet93 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder35);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor94 = tiffOutputSet93.iterator();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters95 = tiffImagingParameters5.setOutputSet(tiffOutputSet93);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField97 = tiffOutputSet93.findField(10);
        java.nio.ByteOrder byteOrder98 = tiffOutputSet93.byteOrder;
        boolean boolean99 = tiffOutputSet93.isEmpty();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(tagInfoShorts23);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational40);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1678379530 + "'", int66 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort67);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short91 + "' != '" + (short) 4096 + "'", short91 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor94);
        org.junit.Assert.assertNotNull(tiffImagingParameters95);
        org.junit.Assert.assertNull(tiffOutputField97);
        org.junit.Assert.assertNotNull(byteOrder98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType7);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList9 = tagInfoByteOrShort8.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", (-16759808), abstractFieldTypeList9, 15, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("M", 32898, 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytesBad Type: \n\n", 37, abstractFieldTypeList9, tiffDirectoryType30);
        java.lang.String str35 = tagInfoByte34.name;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "TIFF image data: 0 bytesBad Type: \n\n" + "'", str35, "TIFF image data: 0 bytesBad Type: \n\n");
    }

    @Test
    void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory8 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_GPSINFO;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts11 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        short[] shortArray26 = new short[] {};
        byte[] byteArray27 = tagInfoShortOrLongOrRational12.encodeValue(byteOrder23, shortArray26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        short[] shortArray42 = new short[] {};
        byte[] byteArray43 = tagInfoShortOrLongOrRational28.encodeValue(byteOrder39, shortArray42);
        byte[] byteArray44 = tagInfoShorts11.encodeValue(byteOrder23, shortArray42);
        byte[] byteArray46 = tagInfoShort10.encodeValue(byteOrder23, (short) (byte) 10);
        short[] shortArray48 = new short[] { (byte) 0 };
        byte[] byteArray49 = tagInfoShortOrRational9.encodeValue(byteOrder23, shortArray48);
        byte[] byteArray51 = tagInfoDirectory8.encodeValue(byteOrder23, 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts52 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        short[] shortArray67 = new short[] {};
        byte[] byteArray68 = tagInfoShortOrLongOrRational53.encodeValue(byteOrder64, shortArray67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational69 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray75 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort74 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList76 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, abstractFieldTypeArray75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, tiffDirectoryType78);
        java.nio.ByteOrder byteOrder80 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray82 = tagInfoByte79.encodeValue(byteOrder80, (byte) 0);
        short[] shortArray83 = new short[] {};
        byte[] byteArray84 = tagInfoShortOrLongOrRational69.encodeValue(byteOrder80, shortArray83);
        byte[] byteArray85 = tagInfoShorts52.encodeValue(byteOrder64, shortArray83);
        byte[] byteArray86 = tagInfoByteOrShort7.encodeValue(byteOrder23, shortArray83);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoDirectory8);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(tagInfoShorts11);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational28);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShorts52);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational53);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational69);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[]");
    }

    @Test
    void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        java.nio.ByteOrder byteOrder1 = null;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory2 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(32773, byteOrder1);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType12);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoSByte15.encodeValue(byteOrder16, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory19 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString20 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPAUTHOR;
        tiffOutputDirectory19.add(tagInfoXpString20, "W");
        tiffOutputDirectory2.add(tagInfoXpString20, "Unknown Tag (0x8003): ");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField26 = tiffOutputDirectory2.findField(89);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(tagInfoXpString20);
        org.junit.Assert.assertNull(tiffOutputField26);
    }

    @Test
    void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffImageMetadata8.getAllFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles11 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        java.lang.Object obj12 = tiffImageMetadata8.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDoubles11);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = tiffImageMetadata8.findDirectory((-16759808));
        org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem imageMetadataItem15 = null;
        tiffImageMetadata8.add(imageMetadataItem15);
        tiffImageMetadata8.add("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]", "W");
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoDoubles11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(tiffDirectory14);
    }

    @Test
    void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setPixelDensity(pixelDensity10);
        java.lang.Integer int12 = tiffImagingParameters9.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet15 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setOutputSet(tiffOutputSet15);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters14.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters14.setFileName("SByte");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray20 = tiffImageParser0.getIccProfileBytes(file8, tiffImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
    }

    @Test
    void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        java.nio.ByteOrder byteOrder8 = tiffImageParser0.getByteOrder();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setPixelDensity(pixelDensity11);
        java.lang.Integer int13 = tiffImagingParameters10.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters10.setXmpXml("V");
        tiffImagingParameters15.clearSubImage();
        tiffImagingParameters15.clearSubImage();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = tiffImageParser0.getMetadata(file9, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
    }

    @Test
    void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", 95, 34661, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("OversizeValueElement, tag: Unknown Tag, fieldType: hi!", 32895, 18, tiffDirectoryType12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType92 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational93 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType92);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType92);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber96 = tiffDirectory66.getFieldValue(tagInfoRational95);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType92 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType92.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd1 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_SUB_IFD;
        java.nio.ByteOrder byteOrder2 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals9 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder10 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray51 = tagInfoRationals9.encodeValue(byteOrder10, rationalNumberArray50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort52 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray75 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray70, 34713, (int) (byte) 0, false, (-65281));
        short short76 = tagInfoShort52.getValue(byteOrder63, byteArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless77 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray75);
        short[] shortArray78 = tagInfoShorts8.getValue(byteOrder10, byteArray75);
        int[] intArray79 = new int[] {};
        byte[] byteArray80 = tagInfoShortOrLongOrRational7.encodeValue(byteOrder10, intArray79);
        byte[] byteArray81 = tagInfoLongOrIfd1.encodeValue(byteOrder2, intArray79);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk85 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk((-2), intArray79, 0, (int) '4', (int) (short) 4096);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder86 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat89 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray90 = photometricInterpreterFloat89.getMinXY();
        float float91 = photometricInterpreterFloat89.getMeanFound();
        int[] intArray92 = photometricInterpreterFloat89.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterCmyk85.interpretPixel(imageBuilder86, intArray92, 4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongOrIfd1);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts8);
        org.junit.Assert.assertNotNull(tagInfoRationals9);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort52);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short76 + "' != '" + (short) 4096 + "'", short76 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[4096]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float91 + "' != '" + 0.0f + "'", float91 == 0.0f);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        tiffOutputDirectory16.sortFields();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData77 = tiffOutputDirectory16.getRawJpegImageData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNull(jpegImageData77);
    }

    @Test
    void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray33 = new int[] { (byte) 1, 14, 22 };
        int int34 = org.apache.commons.imaging.internal.SafeOperations.add(intArray33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray33, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray33, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration51 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader53 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder54 = tiffReader53.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray56 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray56, 32844);
        int int59 = strips58.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips60 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory23, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat26, (int) '4', intArray33, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration51, byteOrder54, 32844, strips58);
        java.awt.Rectangle rectangle61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterData tiffRasterData62 = dataReaderStrips60.readRasterData(rectangle61);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unsupported sample format, value=32773");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 37 + "'", int34 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(dataElementArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString17 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPAUTHOR;
        tiffOutputDirectory16.add(tagInfoXpString17, "W");
        int int20 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType30);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoSByte33.encodeValue(byteOrder34, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory37 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder34);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData38 = tiffOutputDirectory37.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory37.add(tagInfoByte39, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField43 = tiffOutputDirectory37.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType51 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType51);
        tiffOutputDirectory37.add(tagInfoFloat54, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData57 = null;
        tiffOutputDirectory37.setJpegImageData(jpegImageData57);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField60 = tiffOutputDirectory37.findField(29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational61 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals62 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_DELTA_V;
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType67 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType67);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort73 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList75 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList75, abstractFieldTypeArray74);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType77 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList75, tiffDirectoryType77);
        java.nio.ByteOrder byteOrder79 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray81 = tagInfoByte78.encodeValue(byteOrder79, (byte) 0);
        byte[] byteArray83 = tagInfoDouble68.encodeValue(byteOrder79, (double) 32773);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray84 = tagInfoSRationals62.getValue(byteOrder63, byteArray83);
        tiffOutputDirectory37.add(tagInfoShortOrLongOrRational61, rationalNumberArray84);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory37);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNotNull(tagInfoXpString17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData38);
        org.junit.Assert.assertNotNull(tagInfoByte39);
        org.junit.Assert.assertNull(tiffOutputField43);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffOutputField60);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational61);
        org.junit.Assert.assertNotNull(tagInfoSRationals62);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType67 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType67.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertNotNull(rationalNumberArray84);
    }

    @Test
    void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = tiffMetadataItem54.getTiffField();
        byte[] byteArray56 = tiffField55.getByteArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            long long57 = tiffField55.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(tiffField55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
    }

    @Test
    void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter15 = null;
        int[] intArray21 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration28 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader30 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder31 = tiffReader30.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles32 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled33 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory14, photometricInterpreter15, 10, (int) (byte) 10, (-65281), intArray21, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration28, byteOrder31, tiles32);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray21, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray21, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel47 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray21, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters48 = tiffImagingParameters5.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel47);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters50 = tiffImagingParameters5.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = tiffImageParser0.getMetadata(byteSource4, tiffImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tiffImagingParameters48);
        org.junit.Assert.assertNotNull(tiffImagingParameters50);
    }

    @Test
    void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.limit(34905, 31, 16);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 16 + "'", int3 == 16);
    }

    @Test
    void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = tiffImageParser0.getIccProfileBytes(byteSource6, tiffImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        java.lang.Integer int10 = tiffImagingParameters7.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters7.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory16 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter17 = null;
        int[] intArray23 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration30 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader32 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder33 = tiffReader32.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles34 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled35 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory16, photometricInterpreter17, 10, (int) (byte) 10, (-65281), intArray23, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration30, byteOrder33, tiles34);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab39 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray23, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel44 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray23, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel49 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray23, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters50 = tiffImagingParameters7.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel49);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters52 = tiffImagingParameters7.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters54 = tiffImagingParameters52.setXmpXml("Bad Type");
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage5, outputStream6, tiffImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(tiffImagingParameters50);
        org.junit.Assert.assertNotNull(tiffImagingParameters52);
        org.junit.Assert.assertNotNull(tiffImagingParameters54);
    }

    @Test
    void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong5 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder6 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray12 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray13 = tagInfoShortOrLong5.encodeValue(byteOrder6, intArray12);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr17 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(9, intArray12, 79, (int) (short) 100, 13);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt18 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(34712, 32895, 34713, intArray12);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory25 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter26 = null;
        int[] intArray32 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration39 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader41 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder42 = tiffReader41.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles43 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled44 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory25, photometricInterpreter26, 10, (int) (byte) 10, (-65281), intArray32, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration39, byteOrder42, tiles43);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab48 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray32, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel53 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray32, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray32, 9, 13, 13, false);
        int int59 = org.apache.commons.imaging.internal.SafeOperations.add(intArray32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette60 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(95, intArray12, 0, 277408, 32897, intArray32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingFormatException; message: bitsPerPixel 34,661 (maxI = 95) is too large or colorMap is too small 2");
        } catch (org.apache.commons.imaging.ImagingFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShortOrLong5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 34905 + "'", int59 == 34905);
    }

    @Test
    void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        boolean boolean1 = tagInfoAscii0.isText();
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("MBad Type: \n\n");
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
    }

    @Test
    void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational35 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort36 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts37 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational38 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        short[] shortArray52 = new short[] {};
        byte[] byteArray53 = tagInfoShortOrLongOrRational38.encodeValue(byteOrder49, shortArray52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational54 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort59 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList61 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, abstractFieldTypeArray60);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, tiffDirectoryType63);
        java.nio.ByteOrder byteOrder65 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray67 = tagInfoByte64.encodeValue(byteOrder65, (byte) 0);
        short[] shortArray68 = new short[] {};
        byte[] byteArray69 = tagInfoShortOrLongOrRational54.encodeValue(byteOrder65, shortArray68);
        byte[] byteArray70 = tagInfoShorts37.encodeValue(byteOrder49, shortArray68);
        byte[] byteArray72 = tagInfoShort36.encodeValue(byteOrder49, (short) (byte) 10);
        short[] shortArray74 = new short[] { (byte) 0 };
        byte[] byteArray75 = tagInfoShortOrRational35.encodeValue(byteOrder49, shortArray74);
        byte[] byteArray77 = tagInfoSByte34.encodeValue(byteOrder49, (byte) 0);
        tiffOutputDirectory16.add(tagInfoSByte34, (byte) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType88 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("32771 (0x8003: Unknown Tag): ", 37, tiffDirectoryType88);
        tiffOutputDirectory16.add(tagInfoDouble91, 0.0d);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType31 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType31.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrRational35);
        org.junit.Assert.assertNotNull(tagInfoShort36);
        org.junit.Assert.assertNotNull(tagInfoShorts37);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational38);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational54);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[0]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("262 (0x106: PhotometricInterpretation): Bad Type: \n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: 262 (0x106: PhotometricInterpretation): Bad Type: ??");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        java.lang.String str8 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.PixelDensity pixelDensity9 = tiffImagingParameters5.getPixelDensity();
        java.lang.Integer int10 = tiffImagingParameters5.getT6Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters5.setT4Options((java.lang.Integer) 9);
        java.lang.Class<?> wildcardClass13 = tiffImagingParameters5.getClass();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNull(pixelDensity9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        long[] longArray54 = tiffField50.getLongArrayValue();
        int int55 = tiffField50.getDirectoryType();
        boolean boolean56 = tiffField50.isLocalValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort1 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort6 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, abstractFieldTypeArray7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, tiffDirectoryType10);
        java.nio.ByteOrder byteOrder12 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray14 = tagInfoByte11.encodeValue(byteOrder12, (byte) 0);
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray24 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray19, 34713, (int) (byte) 0, false, (-65281));
        short short25 = tagInfoShort1.getValue(byteOrder12, byteArray24);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray39 = tagInfoSRationals0.getValue(byteOrder12, byteArray38);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless40 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray38);
        byte[] byteArray43 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT6(byteArray38, 65536, 0);
        org.junit.Assert.assertNotNull(tagInfoSRationals0);
        org.junit.Assert.assertNotNull(tagInfoShort1);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short25 + "' != '" + (short) 4096 + "'", short25 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray39);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 16, 1]");
    }

    @Test
    void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        java.nio.ByteOrder byteOrder8 = tiffImageParser0.getByteOrder();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = tiffImageParser0.getIccProfileBytes(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType2 = null;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList21, tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType39, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList21, 34905, tiffDirectoryType39, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList21, 34712, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("A", 35, abstractFieldTypeList21, 32897, tiffDirectoryType55, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("ImageDataElement", 258, 5, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("", 48, 15, tiffDirectoryType55, true);
        boolean boolean63 = tiffDirectoryType55.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("E", (int) ' ', 65000, tiffDirectoryType55, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Unknown Tag (0x8003)", 32766, abstractFieldType2, (-16776961), tiffDirectoryType55);
        org.junit.Assert.assertNotNull(abstractFieldTypeList21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType55 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType55.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        int int78 = tiffOutputField74.getSortHint();
        int int79 = tiffOutputField74.getSortHint();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData23 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii24 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE_REF;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder38 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray40 = tagInfoSByte37.encodeValue(byteOrder38, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory41 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder38);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData42 = tiffOutputDirectory41.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii43 = org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants.EXIF_TAG_MD_PREP_TIME;
        java.lang.String[] strArray44 = new java.lang.String[] {};
        tiffOutputDirectory41.add(tagInfoAscii43, strArray44);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoAscii24, strArray44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 2 byte(s), not 0");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertNull(abstractTiffImageData23);
        org.junit.Assert.assertNotNull(tagInfoAscii24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData42);
        org.junit.Assert.assertNotNull(tagInfoAscii43);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(32895, 32947, 37, (float) 32908);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32895, 32947)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList75 = tiffDirectory66.getDirectoryEntries();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType86 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType86, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("M", 3, tiffDirectoryType86);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = tiffDirectory66.getFieldValue(tagInfoSLong91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"M\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNotNull(tiffFieldList75);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType86 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType86.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong17 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_NEW_SUBFILE_TYPE;
        tiffOutputDirectory16.add(tagInfoLong17, 1678379530);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong20 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_T6_OPTIONS;
        tiffOutputDirectory16.add(tagInfoLong20, 6);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder38 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray40 = tagInfoSByte37.encodeValue(byteOrder38, (byte) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = tagInfoSByte37.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("306 (0x132: DateTime): ", 0, 34661, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt46 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType47 = tiffRasterDataInt46.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics48 = tiffRasterDataInt46.getSimpleStatistics();
        float[] floatArray49 = tiffRasterDataInt46.getData();
        int int50 = tiffRasterDataInt46.getSamplesPerPixel();
        int[] intArray51 = tiffRasterDataInt46.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel56 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(255, intArray51, 22, 25, 19, false);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoSLongs42, intArray51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 34661 value(s), not 10");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNotNull(tagInfoLong17);
        org.junit.Assert.assertNotNull(tagInfoLong20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType41 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType41.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType47 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType47.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics48);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        float float5 = photometricInterpreterFloat4.getMinFound();
        int[] intArray6 = photometricInterpreterFloat4.getMinXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv10 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(32908, intArray6, 3, 32845, 13);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter15 = null;
        int[] intArray21 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration28 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader30 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder31 = tiffReader30.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles32 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled33 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory14, photometricInterpreter15, 10, (int) (byte) 10, (-65281), intArray21, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration28, byteOrder31, tiles32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette34 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(32897, intArray6, 0, (-1), 32803, intArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingFormatException; message: bitsPerPixel 0 (maxI = 2) is too large or colorMap is too small 2");
        } catch (org.apache.commons.imaging.ImagingFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + Float.POSITIVE_INFINITY + "'", float5 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType8);
        java.nio.ByteOrder byteOrder12 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray14 = tagInfoSByte11.encodeValue(byteOrder12, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy15 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]");
    }

    @Test
    void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 2, 80);
    }

    @Test
    void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        byte[] byteArray52 = tiffField50.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType53 = tiffField50.getFieldType();
        java.lang.String str54 = abstractFieldType53.getName();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo75 = tiffOutputField74.tagInfo;
        java.lang.String str76 = tiffOutputField74.toString();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo75);
    }

    @Test
    void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        boolean boolean82 = tiffDirectory66.hasTiffRasterData();
        boolean boolean83 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters84 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity85 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters86 = tiffImagingParameters84.setPixelDensity(pixelDensity85);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters88 = tiffImagingParameters84.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory89 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters90 = tiffImagingParameters84.setBufferedImageFactory(bufferedImageFactory89);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters92 = tiffImagingParameters90.setFileName("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        java.awt.image.BufferedImage bufferedImage93 = tiffDirectory66.getTiffImage(tiffImagingParameters92);
        long long94 = tiffDirectory66.getNextDirectoryOffset();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = tiffDirectory66.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters86);
        org.junit.Assert.assertNotNull(tiffImagingParameters88);
        org.junit.Assert.assertNotNull(tiffImagingParameters90);
        org.junit.Assert.assertNotNull(tiffImagingParameters92);
        org.junit.Assert.assertNull(bufferedImage93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 9L + "'", long94 == 9L);
    }

    @Test
    void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational76 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DOP;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField77 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoRational76);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(tagInfoRational76);
        org.junit.Assert.assertNull(tiffField77);
    }

    @Test
    void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        byte[] byteArray4 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray9 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray4, 34713, (int) (byte) 0, false, (-65281));
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_2D(byteArray4, 258, 3, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 16]");
    }

    @Test
    void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_BACKGROUND_COLOR_INDICATOR;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField24 = tiffOutputDirectory16.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = tiffOutputDirectory16.getItemDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"privateName\" because \"dirType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tagInfoByte23);
        org.junit.Assert.assertNull(tiffOutputField24);
    }

    @Test
    void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        boolean boolean8 = tiffImagingParameters7.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setXmpXml("A");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters7.setSubImage(4, 64, 32895, 34712);
        java.lang.Integer int16 = tiffImagingParameters15.getLzwCompressionBlockSize();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean7 = tiffImagingParameters6.isSubImageSet();
        int int8 = tiffImagingParameters6.getSubImageWidth();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters6.asThis();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage10 = tiffImageParser0.getBufferedImage(byteSource5, tiffImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
    }

    @Test
    void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray33 = new int[] { (byte) 1, 14, 22 };
        int int34 = org.apache.commons.imaging.internal.SafeOperations.add(intArray33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray33, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray33, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration51 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader53 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder54 = tiffReader53.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray56 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray56, 32844);
        int int59 = strips58.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips60 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory23, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat26, (int) '4', intArray33, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration51, byteOrder54, 32844, strips58);
        java.awt.Rectangle rectangle61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageBuilder imageBuilder64 = dataReaderStrips60.readImageData(rectangle61, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 37 + "'", int34 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(dataElementArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab5 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(13, intArray1, 0, (-4), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: bitsPerSample");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("ImageLayer", 5, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("E", 10, tiffDirectoryType4);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo3 = tiffImageParser0.getImageInfo(byteSource2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
    }

    @Test
    void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(73, 32, 255);
        // The following exception was thrown during execution in test generation
        try {
            float float6 = tiffRasterDataInt3.getValue(32844, 32908);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32844, 32908)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            float float9 = tiffRasterDataFloat3.getValue((int) (short) -1, 32766, 32769);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-1, 32766)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
    }

    @Test
    void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(18, (int) (short) 10, 4);
        // The following exception was thrown during execution in test generation
        try {
            float float7 = tiffRasterDataFloat3.getValue((int) '#', 71, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (35, 71)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        boolean boolean3 = strips2.stripsNotTiles();
        int int4 = strips2.rowsPerStrip;
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32844 + "'", int4 == 32844);
    }

    @Test
    void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataInt2.getSimpleStatistics((float) 10L);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = tiffRasterDataInt2.getIntValue(0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, -1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds21 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_PADDING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory24 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter25 = null;
        int[] intArray31 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration38 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader40 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder41 = tiffReader40.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles42 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled43 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory24, photometricInterpreter25, 10, (int) (byte) 10, (-65281), intArray31, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration38, byteOrder41, tiles42);
        byte[] byteArray45 = tagInfoShort23.encodeValue(byteOrder41, (short) 4096);
        double[] doubleArray51 = new double[] { (-1.0f), 20, (-3), 0.0f, (byte) 10 };
        byte[] byteArray52 = tagInfoDoubles22.encodeValue(byteOrder41, doubleArray51);
        byte[] byteArray57 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray52, 21, 0, true, 10);
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds21, byteArray52);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData59 = tiffOutputDirectory16.getRawTiffImageData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tagInfoUndefineds21);
        org.junit.Assert.assertNotNull(tagInfoDoubles22);
        org.junit.Assert.assertNotNull(tagInfoShort23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[16, 0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-65, -16, 0, 0, 0, 0, 0, 0, 64, 52, 0, 0, 0, 0, 0, 0, -64, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0, 1]");
        org.junit.Assert.assertNull(abstractTiffImageData59);
    }

    @Test
    void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(32769, "32771 (0x8003: Unknown Tag): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray55 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray50, 34713, (int) (byte) 0, false, (-65281));
        short short56 = tagInfoShort32.getValue(byteOrder43, byteArray55);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort61 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList63 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, abstractFieldTypeArray62);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, tiffDirectoryType65);
        java.nio.ByteOrder byteOrder67 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray69 = tagInfoByte66.encodeValue(byteOrder67, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray70 = tagInfoSRationals31.getValue(byteOrder43, byteArray69);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless71 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray69);
        java.nio.ByteOrder byteOrder72 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField74 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_28, (long) 34676, (long) 7, byteArray69, byteOrder72, 9);
        long[] longArray75 = tiffField74.getLongArrayValue();
        long long76 = tiffField74.getCount();
        java.lang.String str77 = tiffField74.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem78 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField74);
        java.lang.Object obj79 = tiffField74.getValue();
        java.lang.Object obj80 = fieldTypeByte23.getValue(tiffField74);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType81 = tiffField74.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = tagInfoXpString19.getValue(tiffField74);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoSRationals31);
        org.junit.Assert.assertNotNull(tagInfoShort32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 4096 + "'", short56 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray70);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 34676L + "'", long76 == 34676L);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(abstractFieldType81);
    }

    @Test
    void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("T", 34661, (-1), tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("TIFF Header", 42, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("VBad Type: \n\n", 9006, 42, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("Bad TypeUnknown Tag (0x8003): ", (int) (byte) 100, tiffDirectoryType13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("MBad Type: \n\n", 0, tiffDirectoryType2);
    }

    @Test
    void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory4 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter5 = null;
        int[] intArray11 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration18 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader20 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder21 = tiffReader20.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles22 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled23 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory4, photometricInterpreter5, 10, (int) (byte) 10, (-65281), intArray11, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration18, byteOrder21, tiles22);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab27 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray11, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel32 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray11, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray11, 9, 13, 13, false);
        int int38 = org.apache.commons.imaging.internal.SafeOperations.add(intArray11);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(32897, intArray11, 22, (int) (byte) -1, (int) 'a');
        org.apache.commons.imaging.common.ImageBuilder imageBuilder43 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory48 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter49 = null;
        int[] intArray55 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration62 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader64 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder65 = tiffReader64.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles66 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled67 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory48, photometricInterpreter49, 10, (int) (byte) 10, (-65281), intArray55, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration62, byteOrder65, tiles66);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab71 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray55, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel76 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray55, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel81 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray55, 9, 13, 13, false);
        int int82 = org.apache.commons.imaging.internal.SafeOperations.add(intArray55);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv86 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(32897, intArray55, 22, (int) (byte) -1, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterLogLuv42.interpretPixel(imageBuilder43, intArray55, 32769, 34676);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid length of bits per sample (expected 3).");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 34905 + "'", int38 == 34905);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration62 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration62.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 34905 + "'", int82 == 34905);
    }

    @Test
    void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        int int80 = tiffOutputField74.tag;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 258 + "'", int80 == 258);
    }

    @Test
    void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        long long58 = tiffHeader56.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder59 = tiffHeader56.byteOrder;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader60 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray61 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, tiffDirectoryArray61);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray64 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList65 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList65, tiffFieldArray64);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents67 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader60, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList65);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader68 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray69 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList70 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList70, tiffDirectoryArray69);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray72 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73, tiffFieldArray72);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents75 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader68, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList70, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents76 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader56, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader77 = tiffContents76.header;
        java.lang.String str78 = tiffHeader77.getElementDescription();
        java.nio.ByteOrder byteOrder79 = tiffHeader77.byteOrder;
        boolean boolean80 = tiffHeader77.bigTiff;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(tiffDirectoryArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(tiffHeader77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "TIFF Header" + "'", str78, "TIFF Header");
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray11 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray12 = tagInfoShortOrLong4.encodeValue(byteOrder5, intArray11);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr16 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(9, intArray11, 79, (int) (short) 100, 13);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt17 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(34712, 32895, 34713, intArray11);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType18 = tiffRasterDataInt17.getDataType();
        org.junit.Assert.assertNotNull(tagInfoShortOrLong4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType18 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType18.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType22, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort18, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("ImageColorIndicator", 0, 32897, tiffDirectoryType22, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("", 95, 32803, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("tifUnknown Tag (0x8003): ", (int) (short) 1, 31, tiffDirectoryType22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("", 32, 19, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader11 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder12 = tiffReader11.getByteOrder();
        int[] intArray16 = new int[] { (byte) 1, 14, 22 };
        int int17 = org.apache.commons.imaging.internal.SafeOperations.add(intArray16);
        byte[] byteArray18 = tagInfoLongs9.encodeValue(byteOrder12, intArray16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        short[] shortArray34 = new short[] {};
        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        short[] shortArray50 = new short[] {};
        byte[] byteArray51 = tagInfoShortOrLongOrRational36.encodeValue(byteOrder47, shortArray50);
        byte[] byteArray52 = tagInfoShorts19.encodeValue(byteOrder31, shortArray50);
        byte[] byteArray53 = tagInfoShortOrRational8.encodeValue(byteOrder12, shortArray50);
        java.lang.String str54 = tagInfoShortOrRational8.name;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLongs9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 37 + "'", int17 == 37);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tagInfoShorts19);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational36);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue((int) (byte) 1, 32897, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (1, 32897)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder2 = tiffImageParser0.getByteOrder();
        java.io.PrintWriter printWriter3 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = tiffImageParser0.dumpImageFile(printWriter3, byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNotNull(byteOrder2);
    }

    @Test
    void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        int int3 = fieldTypeFloat2.getType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort14, 5, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("TIFF image data: 0 bytesBad Type: \n\n", (int) 'a', tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("VBad Type: \n\n", 32, tiffDirectoryType16);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.getSortHint();
        int int80 = tiffOutputField74.tag;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 258 + "'", int80 == 258);
    }

    @Test
    void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity12 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters6.setPixelDensity(pixelDensity12);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat16 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray17 = photometricInterpreterFloat16.getMinXY();
        float float18 = photometricInterpreterFloat16.getMeanFound();
        float float19 = photometricInterpreterFloat16.getMaxFound();
        float float20 = photometricInterpreterFloat16.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters21 = tiffImagingParameters6.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat16);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters22 = tiffImagingParameters6.asThis();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) (short) 1, (float) 32771);
        float float26 = photometricInterpreterFloat25.getMeanFound();
        float float27 = photometricInterpreterFloat25.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters28 = tiffImagingParameters22.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = tiffImageParser0.getMetadata(file5, tiffImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 0.0f + "'", float18 == 0.0f);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + Float.NEGATIVE_INFINITY + "'", float19 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 0.0f + "'", float20 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters21);
        org.junit.Assert.assertNotNull(tiffImagingParameters22);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + 0.0f + "'", float26 == 0.0f);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters28);
    }

    @Test
    void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getOrCreateExifDirectory();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType94 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType94);
        float[] floatArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory90.add(tagInfoFloats95, floatArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
    }

    @Test
    void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        int int73 = directory72.type;
        int int74 = directory72.type;
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 88 + "'", int73 == 88);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 88 + "'", int74 == 88);
    }

    @Test
    void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = tiffImageParser0.getFormatCompliance(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage4 = null;
        java.io.OutputStream outputStream5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        int int9 = tiffImagingParameters8.getSubImageY();
        java.lang.String str10 = tiffImagingParameters8.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters13.setT6Options((java.lang.Integer) 35);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters15.setReadThumbnails(false);
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage4, outputStream5, tiffImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
    }

    @Test
    void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, 6, 0);
        int int6 = tiles5.getTileHeight();
        boolean boolean7 = tiles5.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: TiffOutputSet {??byteOrder: LITTLE_ENDIAN???directory 0: Root (0)??}??");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(65000, "");
    }

    @Test
    void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 5, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("N", (-2), 89, tiffDirectoryType20, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Tiff-Custom", 19, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType20);
        java.lang.String str27 = fieldTypeShort6.getName();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        java.lang.String str1 = org.apache.commons.imaging.formats.tiff.TiffDirectory.description((-2));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Exif" + "'", str1, "Exif");
    }

    @Test
    void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        int[] intArray54 = tiffField50.getIntArrayValue();
        int int55 = tiffField50.getOffset();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
    }

    @Test
    void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        int int6 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray7 = tiles5.tiles;
        int int8 = tiles5.getTileHeight();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray9 = tiles5.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray10 = tiles5.tiles;
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles13 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray10, 14, (-16776961));
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(dataElementArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8 == 14);
        org.junit.Assert.assertNotNull(dataElementArray9);
        org.junit.Assert.assertNotNull(dataElementArray10);
    }

    @Test
    void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        java.awt.image.BufferedImage bufferedImage4 = null;
        java.io.OutputStream outputStream5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory15 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter16 = null;
        int[] intArray22 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration29 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader31 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder32 = tiffReader31.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles33 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled34 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory15, photometricInterpreter16, 10, (int) (byte) 10, (-65281), intArray22, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration29, byteOrder32, tiles33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray22, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray22, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel48 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray22, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters49 = tiffImagingParameters6.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel48);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters51 = tiffImagingParameters6.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters53 = tiffImagingParameters51.setXmpXml("Bad Type");
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossy3.writeImage(bufferedImage4, outputStream5, tiffImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration29 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration29.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(tiffImagingParameters49);
        org.junit.Assert.assertNotNull(tiffImagingParameters51);
        org.junit.Assert.assertNotNull(tiffImagingParameters53);
    }

    @Test
    void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        java.lang.Integer int8 = tiffImagingParameters7.getLzwCompressionBlockSize();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setFileName("32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
    }

    @Test
    void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SHARPNESS_2;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts6 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        short[] shortArray21 = new short[] {};
        byte[] byteArray22 = tagInfoShortOrLongOrRational7.encodeValue(byteOrder18, shortArray21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort28 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, abstractFieldTypeArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoByte33.encodeValue(byteOrder34, (byte) 0);
        short[] shortArray37 = new short[] {};
        byte[] byteArray38 = tagInfoShortOrLongOrRational23.encodeValue(byteOrder34, shortArray37);
        byte[] byteArray39 = tagInfoShorts6.encodeValue(byteOrder18, shortArray37);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3, 258, byteArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader54 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder55 = tiffReader54.getByteOrder();
        byte[] byteArray57 = tagInfoSLong52.encodeValue(byteOrder55, 1678379530);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputField40.setData(byteArray57);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Cannot change size of value.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeRational3);
        org.junit.Assert.assertNotNull(tagInfoShorts6);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational23);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType49 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType49.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, 10, 10, 10]");
    }

    @Test
    void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser68 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = tiffImageParser68.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage70 = tiffDirectory66.getTiffImage(tiffImagingParameters69);
        org.apache.commons.imaging.PixelDensity pixelDensity71 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters72 = tiffImagingParameters69.setPixelDensity(pixelDensity71);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet73 = tiffImagingParameters69.getOutputSet();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tiffImagingParameters69);
        org.junit.Assert.assertNull(bufferedImage70);
        org.junit.Assert.assertNotNull(tiffImagingParameters72);
        org.junit.Assert.assertNull(tiffOutputSet73);
    }

//    @Test
//    void test1817() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest3.test1817");
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort2 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort9 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, abstractFieldTypeArray10);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, tiffDirectoryType13);
//        java.nio.ByteOrder byteOrder15 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray17 = tagInfoByte14.encodeValue(byteOrder15, (byte) 0);
//        short[] shortArray18 = new short[] {};
//        byte[] byteArray19 = tagInfoShortOrLongOrRational4.encodeValue(byteOrder15, shortArray18);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
//        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
//        short[] shortArray34 = new short[] {};
//        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
//        byte[] byteArray36 = tagInfoShorts3.encodeValue(byteOrder15, shortArray34);
//        byte[] byteArray38 = tagInfoShort2.encodeValue(byteOrder15, (short) (byte) 10);
//        short[] shortArray40 = new short[] { (byte) 0 };
//        byte[] byteArray41 = tagInfoShortOrRational1.encodeValue(byteOrder15, shortArray40);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals42 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort43 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort48 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList50 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, abstractFieldTypeArray49);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, tiffDirectoryType52);
//        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray56 = tagInfoByte53.encodeValue(byteOrder54, (byte) 0);
//        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray66 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray61, 34713, (int) (byte) 0, false, (-65281));
//        short short67 = tagInfoShort43.getValue(byteOrder54, byteArray66);
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
//        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
//        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray81 = tagInfoSRationals42.getValue(byteOrder54, byteArray80);
//        byte[] byteArray82 = tagInfoSRationals0.encodeValue(byteOrder15, rationalNumberArray81);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet83 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder15);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory84 = tiffOutputSet83.addExifDirectory();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory85 = tiffOutputSet83.addRootDirectory();
//        java.lang.String str87 = tiffOutputSet83.toString("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
//        org.junit.Assert.assertNotNull(tagInfoSRationals0);
//        org.junit.Assert.assertNotNull(tagInfoShortOrRational1);
//        org.junit.Assert.assertNotNull(tagInfoShort2);
//        org.junit.Assert.assertNotNull(tagInfoShorts3);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational4);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray10);
//        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
//        org.junit.Assert.assertNotNull(byteOrder15);
//        org.junit.Assert.assertNotNull(byteArray17);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
//        org.junit.Assert.assertNotNull(shortArray18);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
//        org.junit.Assert.assertNotNull(byteArray19);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
//        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
//        org.junit.Assert.assertNotNull(byteOrder31);
//        org.junit.Assert.assertNotNull(byteArray33);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
//        org.junit.Assert.assertNotNull(shortArray34);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
//        org.junit.Assert.assertNotNull(byteArray35);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
//        org.junit.Assert.assertNotNull(byteArray36);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
//        org.junit.Assert.assertNotNull(byteArray38);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 0]");
//        org.junit.Assert.assertNotNull(shortArray40);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[0]");
//        org.junit.Assert.assertNotNull(byteArray41);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0]");
//        org.junit.Assert.assertNotNull(tagInfoSRationals42);
//        org.junit.Assert.assertNotNull(tagInfoShort43);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray49);
//        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
//        org.junit.Assert.assertNotNull(byteOrder54);
//        org.junit.Assert.assertNotNull(byteArray56);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
//        org.junit.Assert.assertNotNull(byteArray61);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray66);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short67 + "' != '" + (short) 4096 + "'", short67 == (short) 4096);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
//        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
//        org.junit.Assert.assertNotNull(byteOrder78);
//        org.junit.Assert.assertNotNull(byteArray80);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
//        org.junit.Assert.assertNotNull(rationalNumberArray81);
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory84);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory85);
//        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nTiffOutputSet {\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nbyteOrder: LITTLE_ENDIAN\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 0: Exif (-2)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 1: Root (0)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n}\r\n" + "'", str87, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nTiffOutputSet {\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nbyteOrder: LITTLE_ENDIAN\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 0: Exif (-2)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 1: Root (0)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n}\r\n");
//    }

    @Test
    void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(34677, "306 (0x132: DateTime): ");
    }

    @Test
    void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 34676, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytes", 65535, (int) (byte) -1, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata25 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents24);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = tiffContents24.directories;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNotNull(tiffDirectoryList26);
    }

    @Test
    void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt4 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType5 = tiffRasterDataInt4.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt4.getSimpleStatistics();
        float[] floatArray7 = tiffRasterDataInt4.getData();
        float[] floatArray8 = tiffRasterDataInt4.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat9 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(0, (int) (byte) 1, floatArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType5 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType5.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        java.awt.Color color2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 23, (float) 255, color2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        java.lang.Integer int6 = tiffImagingParameters5.getCompression();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = tiffImagingParameters5.getPixelDensity();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(pixelDensity7);
    }

    @Test
    void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList2 = null;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType17, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("hi!", (int) (short) 10, (int) (byte) -1, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("V", 2, tiffDirectoryType17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 32773, abstractFieldTypeList2, 0, tiffDirectoryType17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(false);
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters3.setPixelDensity(pixelDensity4);
        java.lang.Integer int6 = tiffImagingParameters3.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters3.setXmpXml("V");
        tiffImagingParameters8.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity12 = tiffImagingParameters8.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters8.setXmpXml("V");
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffContents tiffContents16 = tiffReader1.readContents(byteSource2, tiffImagingParameters14, formatCompliance15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(pixelDensity12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
    }

    @Test
    void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.String str54 = tiffField51.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField51.getFieldType();
        java.nio.ByteOrder byteOrder56 = tiffField51.getByteOrder();
        java.lang.Object obj57 = fieldTypeAscii0.getValue(tiffField51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = tiffField51.getTagInfo();
        org.junit.Assert.assertNotNull(fieldTypeAscii0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNull(byteOrder56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(tagInfo58);
    }

    @Test
    void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        tiffImagingParameters11.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity15 = tiffImagingParameters11.getPixelDensity();
        boolean boolean16 = tiffImagingParameters11.isSubImageSet();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage17 = tiffImageParser0.getBufferedImage(byteSource5, tiffImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNull(pixelDensity15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort6 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CONTRAST_1;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = tagInfoShort6.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("Tiff-Custom", 20, 32, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n", (-65281), (int) (short) 0, tiffDirectoryType7);
        org.junit.Assert.assertNotNull(tagInfoShort6);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        float[] floatArray6 = tiffRasterDataInt2.getData();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataInt2.getValue(19, 0, 1678379530);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (19, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters4.setPixelDensity(pixelDensity5);
        java.lang.Integer int7 = tiffImagingParameters4.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters4.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setOutputSet(tiffOutputSet10);
        java.lang.Integer int12 = tiffImagingParameters11.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setReadThumbnails(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo15 = tiffImageParser0.getImageInfo(file3, tiffImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
    }

    @Test
    void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setReadThumbnails(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setSubImage(34892, 255, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid sub-image specification width and height must be greater than zero");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
    }

    @Test
    void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.convertYCbCrtoRGB(8, 88, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-16751104) + "'", int3 == (-16751104));
    }

    @Test
    void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(32769, "32771 (0x8003: Unknown Tag): ");
        java.lang.String str3 = fieldTypeByte2.getName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "N");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort15 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray38 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray33, 34713, (int) (byte) 0, false, (-65281));
        short short39 = tagInfoShort15.getValue(byteOrder26, byteArray38);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort44 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList46 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, abstractFieldTypeArray45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, tiffDirectoryType48);
        java.nio.ByteOrder byteOrder50 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray52 = tagInfoByte49.encodeValue(byteOrder50, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray53 = tagInfoSRationals14.getValue(byteOrder26, byteArray52);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless54 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray52);
        java.nio.ByteOrder byteOrder55 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField57 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_11, (long) 34676, (long) 7, byteArray52, byteOrder55, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType58 = tiffField57.getFieldType();
        boolean boolean59 = tiffField57.isLocalValue();
        java.lang.String str60 = tiffField57.getValueDescription();
        java.lang.Object obj61 = fieldTypeDouble6.getValue(tiffField57);
        java.lang.Object obj62 = fieldTypeByte2.getValue(tiffField57);
        // The following exception was thrown during execution in test generation
        try {
            double double63 = tiffField57.getDoubleValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str3, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertNotNull(tagInfoSRationals14);
        org.junit.Assert.assertNotNull(tagInfoShort15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short39 + "' != '" + (short) 4096 + "'", short39 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray53);
        org.junit.Assert.assertNotNull(abstractFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals2 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray28 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray23, 34713, (int) (byte) 0, false, (-65281));
        short short29 = tagInfoShort5.getValue(byteOrder16, byteArray28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray43 = tagInfoSRationals4.getValue(byteOrder16, byteArray42);
        byte[] byteArray44 = tagInfoRationals2.encodeValue(byteOrder3, rationalNumberArray43);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData45 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 32768, 20, byteArray44);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT6(byteArray44, 73, 32946);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: I/O error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRationals2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tagInfoSRationals4);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short29 + "' != '" + (short) 4096 + "'", short29 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
    }

    @Test
    void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("M", 95, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (short) 0, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n", 89, 3, tiffDirectoryType10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType11);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = tagInfoByteOrShort12.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        short[] shortArray38 = new short[] {};
        byte[] byteArray39 = tagInfoShortOrLongOrRational24.encodeValue(byteOrder35, shortArray38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        short[] shortArray54 = new short[] {};
        byte[] byteArray55 = tagInfoShortOrLongOrRational40.encodeValue(byteOrder51, shortArray54);
        byte[] byteArray56 = tagInfoShorts23.encodeValue(byteOrder35, shortArray54);
        byte[] byteArray58 = tagInfoShort22.encodeValue(byteOrder35, (short) (byte) 10);
        byte[] byteArray65 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int66 = tagInfoDirectory21.getValue(byteOrder35, byteArray65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort67 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        byte[] byteArray85 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray90 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray85, 34713, (int) (byte) 0, false, (-65281));
        short short91 = tagInfoShort67.getValue(byteOrder78, byteArray90);
        byte[] byteArray92 = tagInfoByteOrShort12.encodeValue(byteOrder35, byteArray90);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet93 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder35);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor94 = tiffOutputSet93.iterator();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters95 = tiffImagingParameters5.setOutputSet(tiffOutputSet93);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory96 = tiffOutputSet93.getOrCreateExifDirectory();
        java.lang.String str97 = tiffOutputDirectory96.getItemDescription();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(tagInfoShorts23);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational40);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1678379530 + "'", int66 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort67);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short91 + "' != '" + (short) 4096 + "'", short91 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor94);
        org.junit.Assert.assertNotNull(tiffImagingParameters95);
        org.junit.Assert.assertNotNull(tiffOutputDirectory96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Directory: Exif IFD (-2)" + "'", str97, "Directory: Exif IFD (-2)");
    }

    @Test
    void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals21 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_DECODE;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray22 = tiffImageMetadata8.getFieldValue(tagInfoRationals21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational24 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts26 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals27 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder28 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals29 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort30 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort35 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList37 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList37, abstractFieldTypeArray36);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList37, tiffDirectoryType39);
        java.nio.ByteOrder byteOrder41 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray43 = tagInfoByte40.encodeValue(byteOrder41, (byte) 0);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray53 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray48, 34713, (int) (byte) 0, false, (-65281));
        short short54 = tagInfoShort30.getValue(byteOrder41, byteArray53);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort59 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList61 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, abstractFieldTypeArray60);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, tiffDirectoryType63);
        java.nio.ByteOrder byteOrder65 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray67 = tagInfoByte64.encodeValue(byteOrder65, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray68 = tagInfoSRationals29.getValue(byteOrder41, byteArray67);
        byte[] byteArray69 = tagInfoRationals27.encodeValue(byteOrder28, rationalNumberArray68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort70 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort75 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray76 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort75 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList77 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList77, abstractFieldTypeArray76);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType79 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList77, tiffDirectoryType79);
        java.nio.ByteOrder byteOrder81 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray83 = tagInfoByte80.encodeValue(byteOrder81, (byte) 0);
        byte[] byteArray88 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray93 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray88, 34713, (int) (byte) 0, false, (-65281));
        short short94 = tagInfoShort70.getValue(byteOrder81, byteArray93);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless95 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray93);
        short[] shortArray96 = tagInfoShorts26.getValue(byteOrder28, byteArray93);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField97 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts23, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational24, 32769, byteArray93);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo98 = tiffOutputField97.tagInfo;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField99 = tiffImageMetadata8.findField(tagInfo98);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoRationals21);
        org.junit.Assert.assertNull(rationalNumberArray22);
        org.junit.Assert.assertNotNull(tagInfoShorts23);
        org.junit.Assert.assertNotNull(fieldTypeRational24);
        org.junit.Assert.assertNotNull(tagInfoShorts26);
        org.junit.Assert.assertNotNull(tagInfoRationals27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNotNull(tagInfoSRationals29);
        org.junit.Assert.assertNotNull(tagInfoShort30);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short54 + "' != '" + (short) 4096 + "'", short54 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort70);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short94 + "' != '" + (short) 4096 + "'", short94 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray96), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo98);
        org.junit.Assert.assertNull(tiffField99);
    }

    @Test
    void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = tiffImageParser0.getFormatCompliance(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
    }

    @Test
    void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii68 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_TRACK_REF;
        java.lang.String[] strArray69 = tiffImageMetadata8.getFieldValue(tagInfoAscii68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts70 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        java.lang.Object obj71 = tiffImageMetadata8.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts70);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList72 = tiffImageMetadata8.getAllFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles73 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TIEPOINT_TAG;
        double[] doubleArray74 = tiffImageMetadata8.getFieldValue(tagInfoDoubles73);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii75 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CONVERTER;
        java.lang.String[] strArray76 = tiffImageMetadata8.getFieldValue(tagInfoAscii75);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii77 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_LONGITUDE_REF;
        java.lang.String[] strArray78 = tiffImageMetadata8.getFieldValue(tagInfoAscii77);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(tagInfoAscii68);
        org.junit.Assert.assertNull(strArray69);
        org.junit.Assert.assertNotNull(tagInfoShorts70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(tiffFieldList72);
        org.junit.Assert.assertNotNull(tagInfoDoubles73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNotNull(tagInfoAscii75);
        org.junit.Assert.assertNull(strArray76);
        org.junit.Assert.assertNotNull(tagInfoAscii77);
        org.junit.Assert.assertNull(strArray78);
    }

    @Test
    void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble((int) (byte) 0, "M");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        byte[] byteArray55 = tiffField53.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField53.getFieldType();
        java.lang.Object obj57 = fieldTypeDouble2.getValue(tiffField53);
        java.lang.String str58 = tiffField53.getTagName();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Unknown Tag (0x8003)" + "'", str58, "Unknown Tag (0x8003)");
    }

    @Test
    void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat((int) (byte) 0, (int) (short) 4096);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        java.lang.String str1 = org.apache.commons.imaging.formats.tiff.TiffDirectory.description(64);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Bad Type" + "'", str1, "Bad Type");
    }

    @Test
    void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("262 (0x106: PhotometricInterpretation): ", 32768, 31, tiffDirectoryType3);
    }

    @Test
    void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("SLong", 255, 32897, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("Float", 32897, 32908, tiffDirectoryType6);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("32771 (0x8003: Unknown Tag): ", 65, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray22 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray23 = tagInfoShortOrLong15.encodeValue(byteOrder16, intArray22);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray55 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray50, 34713, (int) (byte) 0, false, (-65281));
        short short56 = tagInfoShort32.getValue(byteOrder43, byteArray55);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort61 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList63 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, abstractFieldTypeArray62);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, tiffDirectoryType65);
        java.nio.ByteOrder byteOrder67 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray69 = tagInfoByte66.encodeValue(byteOrder67, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray70 = tagInfoSRationals31.getValue(byteOrder43, byteArray69);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless71 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray69);
        java.nio.ByteOrder byteOrder72 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField74 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_28, (long) 34676, (long) 7, byteArray69, byteOrder72, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType75 = tiffField74.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType76 = tiffField74.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement77 = tiffField74.getOversizeValueElement();
        java.lang.String str78 = tiffField74.toString();
        byte[] byteArray79 = tiffField74.getByteArrayValue();
        byte[] byteArray80 = tagInfoSBytes14.encodeValue(byteOrder16, byteArray79);
        byte[] byteArray82 = tagInfoSShort5.encodeValue(byteOrder16, (short) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData83 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 34713, (-65281), byteArray82);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong15);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals31);
        org.junit.Assert.assertNotNull(tagInfoShort32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 4096 + "'", short56 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray70);
        org.junit.Assert.assertNotNull(abstractFieldType75);
        org.junit.Assert.assertNotNull(abstractFieldType76);
        org.junit.Assert.assertNotNull(abstractTiffElement77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str78, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 0]");
    }

    @Test
    void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor19 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray35 = tagInfoSByte32.encodeValue(byteOrder33, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory36 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder33);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData37 = tiffOutputDirectory36.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii38 = org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants.EXIF_TAG_MD_PREP_TIME;
        java.lang.String[] strArray39 = new java.lang.String[] {};
        tiffOutputDirectory36.add(tagInfoAscii38, strArray39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii41 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder42 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray50 = tagInfoAscii41.encodeValue(byteOrder42, strArray49);
        tiffOutputDirectory16.add(tagInfoAscii38, strArray49);
        java.lang.Class<?> wildcardClass52 = tagInfoAscii38.getClass();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType29 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType29.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData37);
        org.junit.Assert.assertNotNull(tagInfoAscii38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagInfoAscii41);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32766, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat2.setValue(65000, 9006, (float) 32768);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (65000, 9006)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        java.lang.String str79 = tiffOutputField74.toString();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
    }

    @Test
    void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.nio.ByteOrder byteOrder84 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts85 = null;
        short[] shortArray87 = tiffDirectory66.getFieldValue(tagInfoShorts85, false);
        int int88 = tiffDirectory66.type;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray89 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips91 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray89, 32844);
        int int92 = strips91.getImageDataLength();
        int int93 = strips91.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray94 = strips91.getImageData();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) strips91);
        long long96 = tiffDirectory66.offset;
        int int97 = tiffDirectory66.size();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(shortArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 88 + "'", int88 == 88);
        org.junit.Assert.assertNotNull(dataElementArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 32844 + "'", int93 == 32844);
        org.junit.Assert.assertNotNull(dataElementArray94);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 34712L + "'", long96 == 34712L);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("", 32, 19, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader10 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray11 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList12, tiffDirectoryArray11);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray14 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList15, tiffFieldArray14);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents17 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader10, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList12, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList15);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList18 = tiffContents17.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator19 = tiffFieldList18.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals33 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort34 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray57 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray52, 34713, (int) (byte) 0, false, (-65281));
        short short58 = tagInfoShort34.getValue(byteOrder45, byteArray57);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort63 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList65 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList65, abstractFieldTypeArray64);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType67 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList65, tiffDirectoryType67);
        java.nio.ByteOrder byteOrder69 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray71 = tagInfoByte68.encodeValue(byteOrder69, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray72 = tagInfoSRationals33.getValue(byteOrder45, byteArray71);
        byte[] byteArray74 = tagInfoSByte32.encodeValue(byteOrder45, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory75 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList18, (long) 34712, (long) 9, byteOrder45);
        java.nio.ByteOrder byteOrder76 = tiffDirectory75.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity78 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters79 = tiffImagingParameters77.setPixelDensity(pixelDensity78);
        int int80 = tiffImagingParameters79.getSubImageY();
        java.lang.String str81 = tiffImagingParameters79.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter82 = tiffImagingParameters79.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage83 = tiffDirectory75.getTiffImage(tiffImagingParameters79);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList84 = tiffDirectory75.getDirectoryEntries();
        java.nio.ByteOrder byteOrder85 = tiffDirectory75.getByteOrder();
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray87 = tagInfoShortOrRational8.encodeValue(byteOrder85, rationalNumberArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tiffDirectoryArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(tiffFieldList18);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType29 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType29.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals33);
        org.junit.Assert.assertNotNull(tagInfoShort34);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short58 + "' != '" + (short) 4096 + "'", short58 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray72);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[100]");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(tiffImagingParameters79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(photometricInterpreter82);
        org.junit.Assert.assertNull(bufferedImage83);
        org.junit.Assert.assertNotNull(tiffFieldList84);
        org.junit.Assert.assertNotNull(byteOrder85);
    }

//    @Test
//    void test1851() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest3.test1851");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        tiffOutputSet85.removeField(32768);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
//        tiffOutputSet85.setGpsInDegrees((double) (byte) 0, 0.0d);
//        java.lang.String str93 = tiffOutputSet85.toString();
//        // The following exception was thrown during execution in test generation
//        try {
//            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = tiffOutputSet85.addInteroperabilityDirectory();
//            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
//        } catch (org.apache.commons.imaging.ImagingException e) {
//            // Expected exception.
//        }
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNull(tiffOutputDirectory88);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
//        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n" + "'", str93, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n");
//    }

    @Test
    void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        java.lang.String str55 = tiffField50.getValueDescription();
        int[] intArray56 = tiffField50.getIntArrayValue();
        long[] longArray57 = tiffField50.getLongArrayValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[]");
    }

    @Test
    void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement56 = tiffField53.getOversizeValueElement();
        java.lang.String str57 = tiffField53.toString();
        java.lang.Object obj58 = fieldTypeLong2.getValue(tiffField53);
        int int59 = tiffField53.getDirectoryType();
        int int60 = tiffField53.getDirectoryType();
        java.lang.String str61 = tiffField53.toString();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(abstractTiffElement56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 31 + "'", int59 == 31);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 31 + "'", int60 == 31);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str61, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
    }

    @Test
    void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts80 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_KEY_DIRECTORY_TAG;
        short[] shortArray82 = tiffDirectory66.getFieldValue(tagInfoShorts80, false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement> imageDataElementList83 = tiffDirectory66.getTiffRawImageDataElements();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertNotNull(tagInfoShorts80);
        org.junit.Assert.assertNull(shortArray82);
    }

    @Test
    void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        tiffRasterDataFloat3.setIntValue((int) (short) 0, 0, 8, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(34661, 12, (-16776961), 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (34661, 12)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
    }

    @Test
    void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ORIGINAL_RAW_FILE_NAME;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii23 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_IMAGE_ID;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory24 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter25 = null;
        int[] intArray31 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration38 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader40 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder41 = tiffReader40.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles42 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled43 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory24, photometricInterpreter25, 10, (int) (byte) 10, (-65281), intArray31, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration38, byteOrder41, tiles42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals48 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals50 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort51 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray74 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray69, 34713, (int) (byte) 0, false, (-65281));
        short short75 = tagInfoShort51.getValue(byteOrder62, byteArray74);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort80 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray81 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort80 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList82 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList82, abstractFieldTypeArray81);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList82, tiffDirectoryType84);
        java.nio.ByteOrder byteOrder86 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray88 = tagInfoByte85.encodeValue(byteOrder86, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray89 = tagInfoSRationals50.getValue(byteOrder62, byteArray88);
        byte[] byteArray90 = tagInfoRationals48.encodeValue(byteOrder49, rationalNumberArray89);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data91 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray90);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data92 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray90);
        java.lang.String[] strArray93 = tagInfoAscii23.getValue(byteOrder41, byteArray90);
        tiffOutputDirectory16.add(tagInfoAsciiOrByte22, strArray93);
        int int95 = tiffOutputDirectory16.getType();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tagInfoAsciiOrByte22);
        org.junit.Assert.assertNotNull(tagInfoAscii23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(tagInfoRationals48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(tagInfoSRationals50);
        org.junit.Assert.assertNotNull(tagInfoShort51);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short75 + "' != '" + (short) 4096 + "'", short75 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[]");
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 31 + "'", int95 == 31);
    }

    @Test
    void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        java.lang.String str0 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_IMG_DIRECTION_REF_VALUE_TRUE_NORTH;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "T" + "'", str0, "T");
    }

    @Test
    void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField84 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii85 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_SERIAL_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField87 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii85, false);
        long long88 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat89 = null;
        // The following exception was thrown during execution in test generation
        try {
            float float90 = tiffDirectory66.getFieldValue(tagInfoFloat89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType81 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType81.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField84);
        org.junit.Assert.assertNotNull(tagInfoAscii85);
        org.junit.Assert.assertNull(tiffField87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 9L + "'", long88 == 9L);
    }

    @Test
    void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32766, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = tiffRasterDataFloat2.getIntValue(79, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (79, 22)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        float[] floatArray6 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics((float) (-2));
        float[] floatArray9 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics11 = tiffRasterDataInt2.getSimpleStatistics((float) 32895);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics11);
    }

//    @Test
//    void test1861() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest3.test1861");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory86 = tiffOutputSet85.addGpsDirectory();
//        java.lang.String str88 = tiffOutputSet85.toString("T");
//        java.nio.ByteOrder byteOrder89 = tiffOutputSet85.byteOrder;
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory86);
//        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "TTiffOutputSet {\r\nTbyteOrder: LITTLE_ENDIAN\r\nT\tdirectory 0: Gps (-3)\r\nT}\r\n" + "'", str88, "TTiffOutputSet {\r\nTbyteOrder: LITTLE_ENDIAN\r\nT\tdirectory 0: Gps (-3)\r\nT}\r\n");
//        org.junit.Assert.assertNotNull(byteOrder89);
//    }

    @Test
    void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        java.awt.Color color2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) (short) 100, (float) 32768, color2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float float5 = tiffRasterStatistics4.getExcludedValue();
        float float6 = tiffRasterStatistics4.getMeanValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue(Float.isNaN(float5));
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
    }

    @Test
    void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType13, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("M", 3, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("13 (0xd: E): ", 30, 32766, tiffDirectoryType13);
        boolean boolean20 = tagInfoRationals19.isOffset();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory9 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter10 = null;
        int[] intArray16 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration23 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader25 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder26 = tiffReader25.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles27 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled28 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory9, photometricInterpreter10, 10, (int) (byte) 10, (-65281), intArray16, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration23, byteOrder26, tiles27);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab32 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray16, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray16, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray16, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters43 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters45 = tiffImagingParameters0.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters47 = tiffImagingParameters0.setLzwCompressionBlockSize((java.lang.Integer) 32);
        int int48 = tiffImagingParameters47.getSubImageWidth();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(tiffImagingParameters43);
        org.junit.Assert.assertNotNull(tiffImagingParameters45);
        org.junit.Assert.assertNotNull(tiffImagingParameters47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray0, 1751720192, 32897, true, 31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"buf\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        tiffDirectory66.dump();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii85 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IT8HEADER;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = tiffDirectory66.getSingleFieldValue(tagInfoAscii85);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"IT8Header\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(tagInfoAscii85);
    }

    @Test
    void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        int int5 = tiffRasterDataFloat3.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat3.getSimpleStatistics((float) 23);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(88, 1, 89, (float) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (88, 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 6 + "'", int5 == 6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BEST_QUALITY_SCALE;
        org.junit.Assert.assertNotNull(tagInfoRational0);
    }

    @Test
    void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        boolean boolean80 = tiffDirectory66.hasJpegImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals81 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ANALOG_BALANCE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray83 = tiffDirectory66.getFieldValue(tagInfoRationals81, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"AnalogBalance\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(tagInfoRationals81);
    }

    @Test
    void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(42, 12, 23, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (42, 12)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
    }

    @Test
    void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        int int3 = strips2.getImageDataLength();
        int int4 = strips2.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray5 = strips2.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray6 = strips2.getImageData();
        int int7 = strips2.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray8 = strips2.getImageData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement dataElement10 = strips2.getImageData(5056);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5056 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32844 + "'", int4 == 32844);
        org.junit.Assert.assertNotNull(dataElementArray5);
        org.junit.Assert.assertNotNull(dataElementArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(dataElementArray8);
    }

    @Test
    void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("T", 17, (int) (short) -1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("M", 32773, (-4), tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ", 32773, tiffDirectoryType12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = tiffImageParser0.getFormatCompliance(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(32769, "32771 (0x8003: Unknown Tag): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        long[] longArray54 = tiffField53.getLongArrayValue();
        long long55 = tiffField53.getCount();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem57 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField53);
        java.lang.Object obj58 = tiffField53.getValue();
        java.lang.Object obj59 = fieldTypeByte2.getValue(tiffField53);
        java.lang.String str60 = tiffField53.getDescriptionWithoutValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 34676L + "'", long55 == 34676L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str60, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        int[] intArray54 = tiffField50.getIntArrayValue();
        int int55 = tiffField50.getTag();
        int int56 = tiffField50.getDirectoryType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray57 = tiffField50.getDoubleArrayValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@40f54388 for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32771 + "'", int55 == 32771);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 31 + "'", int56 == 31);
    }

    @Test
    void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        long long75 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType86 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("258 (0x102: BitsPerSample): ", 32895, 19, tiffDirectoryType86);
        short[] shortArray92 = tiffDirectory66.getFieldValue(tagInfoSShorts90, false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 9L + "'", long75 == 9L);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType86 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType86.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray92);
    }

    @Test
    void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        int int6 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray7 = tiles5.tiles;
        int int8 = tiles5.getTileHeight();
        boolean boolean9 = tiles5.stripsNotTiles();
        boolean boolean10 = tiles5.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(dataElementArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8 == 14);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters3.setPixelDensity(pixelDensity4);
        int int6 = tiffImagingParameters5.getSubImageY();
        java.lang.String str7 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setFileName("hi!");
        boolean boolean11 = tiffImagingParameters10.isReadThumbnails();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = tiffImageParser0.getIccProfileBytes(byteSource2, tiffImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.getFieldType((-16759808));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Field type -16759808 is unsupported");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
    }

    @Test
    void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT4Options((java.lang.Integer) 34661);
        int int10 = tiffImagingParameters9.getSubImageWidth();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii18 = org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants.EXIF_TAG_MD_PREP_TIME;
        java.lang.String[] strArray19 = new java.lang.String[] {};
        tiffOutputDirectory16.add(tagInfoAscii18, strArray19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_BACKGROUND_COLOR_INDICATOR;
        tiffOutputDirectory16.add(tagInfoByte21, (byte) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles24 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_INTERGRAPH_MATRIX_TAG;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType35);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType35);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoSByte38.encodeValue(byteOrder39, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory42 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles43 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader45 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder46 = tiffReader45.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals47 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals49 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort50 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray73 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray68, 34713, (int) (byte) 0, false, (-65281));
        short short74 = tagInfoShort50.getValue(byteOrder61, byteArray73);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort79 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray80 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort79 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList81 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList81, abstractFieldTypeArray80);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType83 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList81, tiffDirectoryType83);
        java.nio.ByteOrder byteOrder85 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray87 = tagInfoByte84.encodeValue(byteOrder85, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray88 = tagInfoSRationals49.getValue(byteOrder61, byteArray87);
        byte[] byteArray89 = tagInfoRationals47.encodeValue(byteOrder48, rationalNumberArray88);
        double[] doubleArray90 = tagInfoDoubles43.getValue(byteOrder46, byteArray89);
        byte[] byteArray91 = tagInfoDoubles25.encodeValue(byteOrder39, doubleArray90);
        tiffOutputDirectory16.add(tagInfoDoubles24, doubleArray90);
        org.apache.commons.imaging.common.BinaryOutputStream binaryOutputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.writeItem(binaryOutputStream93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.BinaryOutputStream.write2Bytes(int)\" because \"bos\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoAscii18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagInfoByte21);
        org.junit.Assert.assertNotNull(tagInfoDoubles24);
        org.junit.Assert.assertNotNull(tagInfoDoubles25);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType35 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType35.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(tagInfoDoubles43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(tagInfoRationals47);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(tagInfoSRationals49);
        org.junit.Assert.assertNotNull(tagInfoShort50);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short74 + "' != '" + (short) 4096 + "'", short74 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
    }

    @Test
    void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        java.lang.String str8 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setBufferedImageFactory(bufferedImageFactory9);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters5.setCompression((java.lang.Integer) 34661);
        boolean boolean13 = tiffImagingParameters12.isSubImageSet();
        int int14 = tiffImagingParameters12.getSubImageHeight();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = tiffMetadataItem54.getTiffField();
        byte[] byteArray56 = tiffField55.getByteArrayValue();
        long long57 = tiffField55.getCount();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType58 = tiffField55.getFieldType();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(tiffField55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 34676L + "'", long57 == 34676L);
        org.junit.Assert.assertNotNull(abstractFieldType58);
    }

    @Test
    void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList2 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("T", 34661, (-1), tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("TIFF Header", 42, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("VBad Type: \n\n", 9006, 42, tiffDirectoryType15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("W", 34905, abstractFieldTypeList2, 12, tiffDirectoryType15, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 79, 32803);
    }

    @Test
    void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int[] intArray3 = tiffRasterDataInt2.getIntData();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(64, 32896, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (64, 32896)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        long long58 = tiffHeader56.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder59 = tiffHeader56.byteOrder;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader60 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray61 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, tiffDirectoryArray61);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray64 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList65 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList65, tiffFieldArray64);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents67 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader60, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList65);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader68 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray69 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList70 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList70, tiffDirectoryArray69);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray72 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73, tiffFieldArray72);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents75 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader68, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList70, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents76 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader56, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList62, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList73);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList77 = tiffContents76.directories;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(tiffDirectoryArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(tiffDirectoryList77);
    }

    @Test
    void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort1 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort6 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, abstractFieldTypeArray7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, tiffDirectoryType10);
        java.nio.ByteOrder byteOrder12 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray14 = tagInfoByte11.encodeValue(byteOrder12, (byte) 0);
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray24 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray19, 34713, (int) (byte) 0, false, (-65281));
        short short25 = tagInfoShort1.getValue(byteOrder12, byteArray24);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray39 = tagInfoSRationals0.getValue(byteOrder12, byteArray38);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless40 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed dataParserIndexed41 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserIndexed(byteArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 256 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals0);
        org.junit.Assert.assertNotNull(tagInfoShort1);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short25 + "' != '" + (short) 4096 + "'", short25 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray39);
    }

    @Test
    void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort20 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray43 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray38, 34713, (int) (byte) 0, false, (-65281));
        short short44 = tagInfoShort20.getValue(byteOrder31, byteArray43);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort49 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList51 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList51, abstractFieldTypeArray50);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList51, tiffDirectoryType53);
        java.nio.ByteOrder byteOrder55 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray57 = tagInfoByte54.encodeValue(byteOrder55, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray58 = tagInfoSRationals19.getValue(byteOrder31, byteArray57);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless59 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray57);
        java.nio.ByteOrder byteOrder60 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField62 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_16, (long) 34676, (long) 7, byteArray57, byteOrder60, 9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF image data: 0 bytes", (int) '#', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_16, 2, tiffDirectoryType65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("TIFF image data: 0 bytes", 32909, (int) (byte) 0, tiffDirectoryType65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("V", 32895, (-65536), tiffDirectoryType65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText("PreviewImageLength", 32769, tiffDirectoryType65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("", 3, tiffDirectoryType65);
        org.junit.Assert.assertNotNull(tagInfoSRationals19);
        org.junit.Assert.assertNotNull(tagInfoShort20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short44 + "' != '" + (short) 4096 + "'", short44 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray58);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType65 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType65.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.convertYCbCrtoRGB(69, (int) (short) -1, 336);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-65536) + "'", int3 == (-65536));
    }

    @Test
    void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 34676, tiffDirectoryType68);
        tiffOutputDirectory39.add(tagInfoSByte71, (byte) 1);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType80 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType80);
        tiffOutputDirectory39.add(tagInfoDouble83, (double) 32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined86 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PRINT_IM;
        boolean boolean87 = tagInfoUndefined86.isOffset();
        tiffOutputDirectory39.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte) tagInfoUndefined86, (byte) 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType68 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType68.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType80 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType80.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoUndefined86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType2);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray23 = tagInfoDouble8.encodeValue(byteOrder19, (double) 32773);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort37 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts38 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational39 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort44 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList46 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, abstractFieldTypeArray45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, tiffDirectoryType48);
        java.nio.ByteOrder byteOrder50 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray52 = tagInfoByte49.encodeValue(byteOrder50, (byte) 0);
        short[] shortArray53 = new short[] {};
        byte[] byteArray54 = tagInfoShortOrLongOrRational39.encodeValue(byteOrder50, shortArray53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational55 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort60 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, abstractFieldTypeArray61);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType64 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, tiffDirectoryType64);
        java.nio.ByteOrder byteOrder66 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray68 = tagInfoByte65.encodeValue(byteOrder66, (byte) 0);
        short[] shortArray69 = new short[] {};
        byte[] byteArray70 = tagInfoShortOrLongOrRational55.encodeValue(byteOrder66, shortArray69);
        byte[] byteArray71 = tagInfoShorts38.encodeValue(byteOrder50, shortArray69);
        byte[] byteArray73 = tagInfoShort37.encodeValue(byteOrder50, (short) (byte) 10);
        short[] shortArray75 = new short[] { (byte) 0 };
        byte[] byteArray76 = tagInfoShortOrRational36.encodeValue(byteOrder50, shortArray75);
        byte[] byteArray78 = tagInfoSByte35.encodeValue(byteOrder50, (byte) 0);
        byte[] byteArray80 = tagInfoDouble8.encodeValue(byteOrder50, (double) 77);
        byte[] byteArray82 = tagInfoSShort3.encodeValue(byteOrder50, (short) (byte) 10);
        java.nio.ByteOrder byteOrder83 = null;
        byte[] byteArray85 = tagInfoSShort3.encodeValue(byteOrder83, (short) 16);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType2 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType2.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrRational36);
        org.junit.Assert.assertNotNull(tagInfoShort37);
        org.junit.Assert.assertNotNull(tagInfoShorts38);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational39);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational55);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0, 0, 0, 0, 0, 64, 83, 64]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[16, 0]");
    }

    @Test
    void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(11, "ImageLayer");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "N");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField56.getFieldType();
        boolean boolean58 = tiffField56.isLocalValue();
        java.lang.String str59 = tiffField56.getValueDescription();
        java.lang.Object obj60 = fieldTypeDouble5.getValue(tiffField56);
        java.lang.Object obj61 = fieldTypeRational2.getValue(tiffField56);
        java.io.PrintWriter printWriter62 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField56.dump(printWriter62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SHARPNESS_2;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts6 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        short[] shortArray21 = new short[] {};
        byte[] byteArray22 = tagInfoShortOrLongOrRational7.encodeValue(byteOrder18, shortArray21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort28 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, abstractFieldTypeArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoByte33.encodeValue(byteOrder34, (byte) 0);
        short[] shortArray37 = new short[] {};
        byte[] byteArray38 = tagInfoShortOrLongOrRational23.encodeValue(byteOrder34, shortArray37);
        byte[] byteArray39 = tagInfoShorts6.encodeValue(byteOrder18, shortArray37);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3, 258, byteArray39);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray44 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_2D(byteArray39, 2, 93, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeRational3);
        org.junit.Assert.assertNotNull(tagInfoShorts6);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational23);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
    }

    @Test
    void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType81, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort77, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType81);
        java.lang.Object obj87 = tiffImageMetadata8.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSByte86);
        java.lang.String str88 = tiffImageMetadata8.toString();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType81 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType81.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader36 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray37 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList38, tiffDirectoryArray37);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray40 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList41, tiffFieldArray40);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents43 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader36, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList38, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList41);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata44 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType51 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType51);
        byte[] byteArray54 = tiffImageMetadata44.getFieldValue(tagInfoSBytes53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString55 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str56 = tiffImageMetadata44.getFieldValue(tagInfoXpString55);
        tiffOutputDirectory16.add(tagInfoXpString55, "S");
        java.lang.String str59 = tiffOutputDirectory16.description();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals60 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_COLOR_MATRIX_2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals61 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_DELTA_V;
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType66);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        byte[] byteArray82 = tagInfoDouble67.encodeValue(byteOrder78, (double) 32773);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray83 = tagInfoSRationals61.getValue(byteOrder62, byteArray82);
        tiffOutputDirectory16.add(tagInfoSRationals60, rationalNumberArray83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString85 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPAUTHOR;
        tiffOutputDirectory16.add(tagInfoXpString85, "JPEG image data: 1 bytes");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffDirectoryArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNotNull(tagInfoXpString55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Bad Type" + "'", str59, "Bad Type");
        org.junit.Assert.assertNotNull(tagInfoSRationals60);
        org.junit.Assert.assertNotNull(tagInfoSRationals61);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType66 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType66.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertNotNull(rationalNumberArray83);
        org.junit.Assert.assertNotNull(tagInfoXpString85);
    }

    @Test
    void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("V", 11, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("SByte", (-2), 100, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(79, "Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
    }

    @Test
    void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(0, "");
    }

    @Test
    void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            float float8 = tiffRasterDataFloat3.getValue(0, 34677);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 34677)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
    }

    @Test
    void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo77 = tiffOutputField74.tagInfo;
        byte[] byteArray78 = tiffOutputField74.getData();
        java.lang.String str79 = tiffOutputField74.toString();
        java.lang.String str80 = tiffOutputField74.toString();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
    }

    @Test
    void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray92 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips94 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray92, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles97 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray92, (int) (short) 1, 14);
        int int98 = tiles97.getTileWidth();
        tiffDirectory89.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles97);
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNotNull(dataElementArray92);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType3);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder17 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray19 = tagInfoSByte16.encodeValue(byteOrder17, (byte) 0);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort28 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray51 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray46, 34713, (int) (byte) 0, false, (-65281));
        short short52 = tagInfoShort28.getValue(byteOrder39, byteArray51);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray66 = tagInfoSRationals27.getValue(byteOrder39, byteArray65);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless67 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray65);
        java.nio.ByteOrder byteOrder68 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_24, (long) 34676, (long) 7, byteArray65, byteOrder68, 9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort72 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational73 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray79 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort78 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList80 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList80, abstractFieldTypeArray79);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList80, tiffDirectoryType82);
        java.nio.ByteOrder byteOrder84 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray86 = tagInfoByte83.encodeValue(byteOrder84, (byte) 0);
        short[] shortArray87 = new short[] {};
        byte[] byteArray88 = tagInfoShortOrLongOrRational73.encodeValue(byteOrder84, shortArray87);
        byte[] byteArray90 = tagInfoShort72.encodeValue(byteOrder84, (short) (byte) -1);
        byte[] byteArray91 = fieldTypeLong8_24.writeData((java.lang.Object) (-65536), byteOrder84);
        float[] floatArray92 = tagInfoFloats4.getValue(byteOrder17, byteArray91);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet93 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder17);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals27);
        org.junit.Assert.assertNotNull(tagInfoShort28);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short52 + "' != '" + (short) 4096 + "'", short52 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray66);
        org.junit.Assert.assertNotNull(tagInfoShort72);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational73);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-1, -1]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 0, -1, -1]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[NaN]");
    }

    @Test
    void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        int int52 = tiffField50.getSortHint();
        java.lang.String str53 = tiffField50.getValueDescription();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9 + "'", int52 == 9);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            float float7 = tiffRasterDataInt2.getValue(0, 34713);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 34713)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = directory72.getOutputDirectory(byteOrder91);
        int int95 = tiffOutputDirectory94.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString96 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPSUBJECT;
        tiffOutputDirectory94.add(tagInfoXpString96, "262 (0x106: PhotometricInterpretation): ");
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator99 = tiffOutputDirectory94.spliterator();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 88 + "'", int95 == 88);
        org.junit.Assert.assertNotNull(tagInfoXpString96);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator99);
    }

    @Test
    void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort15 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray38 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray33, 34713, (int) (byte) 0, false, (-65281));
        short short39 = tagInfoShort15.getValue(byteOrder26, byteArray38);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort44 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList46 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, abstractFieldTypeArray45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, tiffDirectoryType48);
        java.nio.ByteOrder byteOrder50 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray52 = tagInfoByte49.encodeValue(byteOrder50, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray53 = tagInfoSRationals14.getValue(byteOrder26, byteArray52);
        byte[] byteArray55 = tagInfoSByte13.encodeValue(byteOrder26, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader59 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder26, 23, (long) 64, true);
        long long60 = tiffHeader59.offsetToFirstIFD;
        long long61 = tiffHeader59.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder62 = tiffHeader59.byteOrder;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory63 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(12, byteOrder62);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs64 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_JPEG_DCTABLES;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter67 = null;
        int[] intArray73 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration80 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader82 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder83 = tiffReader82.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles84 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled85 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory66, photometricInterpreter67, 10, (int) (byte) 10, (-65281), intArray73, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration80, byteOrder83, tiles84);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab89 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray73, (int) (short) 100, 77, 5);
        tiffOutputDirectory63.add(tagInfoLongs64, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt91 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt((-16759808), 12, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals14);
        org.junit.Assert.assertNotNull(tagInfoShort15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short39 + "' != '" + (short) 4096 + "'", short39 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 64L + "'", long60 == 64L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 64L + "'", long61 == 64L);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(tagInfoLongs64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration80 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration80.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder83);
    }

    @Test
    void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float float5 = tiffRasterStatistics4.getMinValue();
        int int6 = tiffRasterStatistics4.getCountOfSamples();
        int int7 = tiffRasterStatistics4.getCountOfNulls();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        tiffOutputSet85.setGpsInDegrees((double) (byte) 0, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory93 = tiffOutputSet85.addGpsDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
    }

    @Test
    void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort6 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, abstractFieldTypeArray7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, tiffDirectoryType10);
        java.nio.ByteOrder byteOrder12 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray14 = tagInfoByte11.encodeValue(byteOrder12, (byte) 0);
        short[] shortArray15 = new short[] {};
        byte[] byteArray16 = tagInfoShortOrLongOrRational1.encodeValue(byteOrder12, shortArray15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational17 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort22 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList24 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList24, abstractFieldTypeArray23);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType26 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList24, tiffDirectoryType26);
        java.nio.ByteOrder byteOrder28 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray30 = tagInfoByte27.encodeValue(byteOrder28, (byte) 0);
        short[] shortArray31 = new short[] {};
        byte[] byteArray32 = tagInfoShortOrLongOrRational17.encodeValue(byteOrder28, shortArray31);
        byte[] byteArray33 = tagInfoShorts0.encodeValue(byteOrder12, shortArray31);
        byte[] byteArray38 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray33, 1, (-65281), false, 7);
        byte[] byteArray42 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray38, (int) ' ', 0, false);
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational1);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational17);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 16]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 16]");
    }

    @Test
    void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("32771 (0x8003: Unknown Tag):  (34676 hi!)", 32946, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", 32896, tiffDirectoryType10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray55 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray50, 34713, (int) (byte) 0, false, (-65281));
        short short56 = tagInfoShort32.getValue(byteOrder43, byteArray55);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort61 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList63 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, abstractFieldTypeArray62);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, tiffDirectoryType65);
        java.nio.ByteOrder byteOrder67 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray69 = tagInfoByte66.encodeValue(byteOrder67, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray70 = tagInfoSRationals31.getValue(byteOrder43, byteArray69);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless71 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray69);
        java.nio.ByteOrder byteOrder72 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField74 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_28, (long) 34676, (long) 7, byteArray69, byteOrder72, 9);
        long[] longArray75 = tiffField74.getLongArrayValue();
        long long76 = tiffField74.getCount();
        java.lang.String str77 = tiffField74.getFieldTypeName();
        long[] longArray78 = tiffField74.getLongArrayValue();
        int int79 = tiffField74.getDirectoryType();
        java.lang.String str80 = tiffField74.getTagName();
        java.lang.String str81 = tiffField74.getDescriptionWithoutValue();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = tagInfoGpsText21.getValue(tiffField74);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: GPS text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tagInfoSRationals31);
        org.junit.Assert.assertNotNull(tagInfoShort32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 4096 + "'", short56 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray70);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 34676L + "'", long76 == 34676L);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 31 + "'", int79 == 31);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Unknown Tag (0x8003)" + "'", str80, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str81, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType78, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType85);
        java.lang.Object obj88 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte87);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData89 = tiffDirectory66.getJpegImageData();
        boolean boolean90 = tiffDirectory66.hasTiffRasterData();
        boolean boolean91 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational92 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_IMG_DIRECTION;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber93 = tiffDirectory66.getFieldValue(tagInfoRational92);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"GPSImgDirection\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(jpegImageData89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(tagInfoRational92);
    }

    @Test
    void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub(64L, 80);
    }

    @Test
    void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        boolean boolean4 = tiffImagingParameters0.isSubImageSet();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setBufferedImageFactory(bufferedImageFactory7);
        java.lang.Integer int9 = tiffImagingParameters8.getT6Options();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 34677, (float) 32768);
    }

    @Test
    void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float float5 = tiffRasterStatistics4.getMeanValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
    }

    @Test
    void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        int[] intArray5 = new int[] { (byte) 1, 14, 22 };
        int int6 = org.apache.commons.imaging.internal.SafeOperations.add(intArray5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel11 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(37, intArray5, 0, 6, 13, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr15 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(2, intArray5, 29, 32845, (int) '4');
        org.apache.commons.imaging.common.ImageBuilder imageBuilder16 = null;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless64 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray62);
        java.nio.ByteOrder byteOrder65 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField67 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_21, (long) 34676, (long) 7, byteArray62, byteOrder65, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType68 = tiffField67.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType69 = tiffField67.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement70 = tiffField67.getOversizeValueElement();
        int int71 = tiffField67.getOffset();
        java.lang.String str72 = tiffField67.getValueDescription();
        int[] intArray73 = tiffField67.getIntArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr15.interpretPixel(imageBuilder16, intArray73, 5056, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 37 + "'", int6 == 37);
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(abstractFieldType68);
        org.junit.Assert.assertNotNull(abstractFieldType69);
        org.junit.Assert.assertNotNull(abstractTiffElement70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
    }

    @Test
    void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        int[] intArray5 = tiffRasterDataInt2.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(2, 32897, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (2, 32897)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(43, 18, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster samples-per-pixel specification must be at least 1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = tiffImageParser0.dumpImageFile(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        int int0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.CALIBRATION_ILLUMINANT_1_VALUE_D65;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 21 + "'", int0 == 21);
    }

    @Test
    void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText88 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        java.lang.String str90 = tiffDirectory66.getFieldValue(tagInfoGpsText88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii91 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SEMINFO;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = tiffDirectory66.getSingleFieldValue(tagInfoAscii91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"SEMInfo\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoGpsText88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(tagInfoAscii91);
    }

    @Test
    void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        boolean boolean3 = strips2.stripsNotTiles();
        boolean boolean4 = strips2.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data47 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray46);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data48 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray46);
        java.lang.String str49 = data48.getElementDescription();
        java.lang.String str50 = data48.getElementDescription();
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "TIFF image data: 0 bytes" + "'", str49, "TIFF image data: 0 bytes");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "TIFF image data: 0 bytes" + "'", str50, "TIFF image data: 0 bytes");
    }

    @Test
    void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat5 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray6 = photometricInterpreterFloat5.getMinXY();
        float float7 = photometricInterpreterFloat5.getMeanFound();
        float float8 = photometricInterpreterFloat5.getMaxFound();
        int[] intArray9 = photometricInterpreterFloat5.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel14 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray9, 25, 69, 65536, true);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat21 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics22 = tiffRasterDataFloat21.getSimpleStatistics();
        int[] intArray23 = tiffRasterDataFloat21.getIntData();
        int[] intArray24 = tiffRasterDataFloat21.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(32947, intArray9, (int) '#', (int) (byte) 0, 19, intArray24);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters29 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity30 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters31 = tiffImagingParameters29.setPixelDensity(pixelDensity30);
        java.lang.Integer int32 = tiffImagingParameters29.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters34 = tiffImagingParameters29.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity35 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters36 = tiffImagingParameters29.setPixelDensity(pixelDensity35);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat39 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray40 = photometricInterpreterFloat39.getMinXY();
        float float41 = photometricInterpreterFloat39.getMeanFound();
        float float42 = photometricInterpreterFloat39.getMaxFound();
        float float43 = photometricInterpreterFloat39.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters44 = tiffImagingParameters29.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat39);
        int int46 = photometricInterpreterFloat39.mapValueToArgb((float) (-2));
        int[] intArray47 = photometricInterpreterFloat39.getMinXY();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette48 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(32773, intArray9, 13, 2189672, 31, intArray47);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingFormatException; message: bitsPerPixel 0 (maxI = 2) is too large or colorMap is too small 2");
        } catch (org.apache.commons.imaging.ImagingFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7 == 0.0f);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + Float.NEGATIVE_INFINITY + "'", float8 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(tiffImagingParameters31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(tiffImagingParameters34);
        org.junit.Assert.assertNotNull(tiffImagingParameters36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + Float.NEGATIVE_INFINITY + "'", float42 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float43 + "' != '" + 0.0f + "'", float43 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
    }

    @Test
    void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("M", 21, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational2, 79, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField56.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType58 = tiffField56.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement59 = tiffField56.getOversizeValueElement();
        int int60 = tiffField56.getOffset();
        int int61 = tiffField56.getDirectoryType();
        byte[] byteArray62 = tiffField56.getByteArrayValue();
        int int63 = tiffField56.getTag();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader77 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder78 = tiffReader77.getByteOrder();
        byte[] byteArray80 = tagInfoSLong75.encodeValue(byteOrder78, 1678379530);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = fieldTypeRational2.writeData((java.lang.Object) tiffField56, byteOrder78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid data: 32771 (0x8003: Unknown Tag):  (34676 hi!) (org.apache.commons.imaging.formats.tiff.TiffField)");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeRational2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertNotNull(abstractFieldType58);
        org.junit.Assert.assertNotNull(abstractTiffElement59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 31 + "'", int61 == 31);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32771 + "'", int63 == 32771);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType72 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType72.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100, 10, 10, 10]");
    }

    @Test
    void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(9006, 8);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 95);
        float float5 = tiffRasterStatistics4.getMeanValue();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
    }

    @Test
    void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        int int55 = tiffField50.getDirectoryType();
        int int56 = tiffField50.getSortHint();
        tiffField50.dump();
        // The following exception was thrown during execution in test generation
        try {
            long long58 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9 + "'", int56 == 9);
    }

    @Test
    void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(false);
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = null;
        org.apache.commons.imaging.formats.tiff.TiffReader.Listener listener4 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffReader1.read(byteSource2, formatCompliance3, listener4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("TIFF image data: 0 bytes", 10, 48, tiffDirectoryType6);
        boolean boolean9 = tiffDirectoryType6.isImageDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(3, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        long[] longArray54 = tiffField53.getLongArrayValue();
        long long55 = tiffField53.getCount();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem57 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField53);
        java.lang.Object obj58 = tiffField53.getValue();
        java.lang.String str59 = tiffField53.getTagName();
        java.lang.Object obj60 = fieldTypeFloat2.getValue(tiffField53);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = tiffField53.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 34676L + "'", long55 == 34676L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Unknown Tag (0x8003)" + "'", str59, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        java.lang.String str93 = directory91.toString("[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]");
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]Bad Type: \n\n" + "'", str93, "[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]Bad Type: \n\n");
    }

    @Test
    void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts82 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ISO;
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray84 = tiffDirectory66.getFieldValue(tagInfoShorts82, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"PhotographicSensitivity\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShorts82);
    }

    @Test
    void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        java.nio.ByteOrder byteOrder93 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy94 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder93);
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(byteOrder93);
    }

    @Test
    void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        java.awt.Color color2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) (-2), (float) 32771, color2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(1678379530, "JPEG image data: 1 bytes");
    }

    @Test
    void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory6 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter7 = null;
        int[] intArray13 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration20 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader22 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder23 = tiffReader22.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles24 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled25 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory6, photometricInterpreter7, 10, (int) (byte) 10, (-65281), intArray13, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration20, byteOrder23, tiles24);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray13, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters30 = tiffImagingParameters2.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters35 = tiffImagingParameters30.setSubImage(65536, (int) 'a', 32909, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid sub-image specification width and height must be greater than zero");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(tiffImagingParameters30);
    }

    @Test
    void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader3 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder4 = tiffReader3.getByteOrder();
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        byte[] byteArray10 = tagInfoLongs1.encodeValue(byteOrder4, intArray8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb14 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(95, intArray8, 18, 19, 29);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder15 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt19 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType20 = tiffRasterDataInt19.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics21 = tiffRasterDataInt19.getSimpleStatistics();
        float[] floatArray22 = tiffRasterDataInt19.getData();
        int int23 = tiffRasterDataInt19.getSamplesPerPixel();
        int[] intArray24 = tiffRasterDataInt19.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr28 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(73, intArray24, (int) (short) 1, 100, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterRgb14.interpretPixel(imageBuilder15, intArray24, 32947, 95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongs1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType20 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType20.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 64L);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = tiffRasterDataFloat3.getIntValue((-16776961), 95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-16776961, 95)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
    }

    @Test
    void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int int9 = tiffRasterDataInt2.getWidth();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue((int) (short) 10, (int) (short) 100, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (10, 100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters2.setPixelDensity(pixelDensity3);
        java.lang.Integer int5 = tiffImagingParameters2.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters2.setPixelDensity(pixelDensity8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray13 = photometricInterpreterFloat12.getMinXY();
        float float14 = photometricInterpreterFloat12.getMeanFound();
        float float15 = photometricInterpreterFloat12.getMaxFound();
        float float16 = photometricInterpreterFloat12.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters2.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat12);
        int int19 = photometricInterpreterFloat12.mapValueToArgb((float) (-2));
        int[] intArray20 = photometricInterpreterFloat12.getMinXY();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt21 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(88, 32809, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + Float.NEGATIVE_INFINITY + "'", float15 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 0.0f + "'", float16 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
    }

    @Test
    void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("T", 34661, (-1), tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("306 (0x132: DateTime): ", 37, 93, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("T", 32844, 18, tiffDirectoryType12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            float float8 = tiffRasterDataFloat3.getValue(5, 89, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (5, 89)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 32897);
        // The following exception was thrown during execution in test generation
        try {
            float float12 = tiffRasterDataFloat3.getValue(1, 32909, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (1, 32909)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
    }

    @Test
    void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34892, "Directory: Exif IFD (-2)");
    }

    @Test
    void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory9 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter10 = null;
        int[] intArray16 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration23 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader25 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder26 = tiffReader25.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles27 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled28 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory9, photometricInterpreter10, 10, (int) (byte) 10, (-65281), intArray16, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration23, byteOrder26, tiles27);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab32 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray16, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray16, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray16, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters43 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters45 = tiffImagingParameters0.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters47 = tiffImagingParameters45.setT4Options((java.lang.Integer) 79);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters49 = tiffImagingParameters47.setXmpXml("E");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter50 = tiffImagingParameters47.getCustomPhotometricInterpreter();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(tiffImagingParameters43);
        org.junit.Assert.assertNotNull(tiffImagingParameters45);
        org.junit.Assert.assertNotNull(tiffImagingParameters47);
        org.junit.Assert.assertNotNull(tiffImagingParameters49);
        org.junit.Assert.assertNotNull(photometricInterpreter50);
    }

    @Test
    void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(16, "hi!");
    }

    @Test
    void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray33 = new int[] { (byte) 1, 14, 22 };
        int int34 = org.apache.commons.imaging.internal.SafeOperations.add(intArray33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray33, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray33, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration51 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader53 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder54 = tiffReader53.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray56 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips58 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray56, 32844);
        int int59 = strips58.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips60 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory23, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat26, (int) '4', intArray33, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration51, byteOrder54, 32844, strips58);
        java.awt.Rectangle rectangle61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageBuilder imageBuilder64 = dataReaderStrips60.readImageData(rectangle61, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 37 + "'", int34 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(dataElementArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("T", 17, (int) (short) -1, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("306 (0x132: DateTime): ", 50717, 258, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", 32773, (-4), tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("V", 0, 42, tiffDirectoryType16);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo77 = tiffOutputField74.tagInfo;
        byte[] byteArray78 = tiffOutputField74.getData();
        byte[] byteArray81 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressModifiedHuffman(byteArray78, 69, (-65281));
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
    }

    @Test
    void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText88 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        java.lang.String str90 = tiffDirectory66.getFieldValue(tagInfoGpsText88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts91 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        short[] shortArray93 = tiffDirectory66.getFieldValue(tagInfoShorts91, false);
        java.lang.String str94 = tagInfoShorts91.getDescription();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoGpsText88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(tagInfoShorts91);
        org.junit.Assert.assertNull(shortArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "280 (0x118: MinSampleValue): " + "'", str94, "280 (0x118: MinSampleValue): ");
    }

    @Test
    void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        tiffDirectory66.dump();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData85 = tiffDirectory66.getJpegImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(jpegImageData85);
    }

    @Test
    void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int5 = tiffImagingParameters4.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters4.setReadThumbnails(false);
        int int8 = tiffImagingParameters7.getSubImageX();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<byte[]> byteArrayList9 = tiffImageParser0.collectRawImageData(byteSource3, tiffImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = tiffRasterDataFloat3.getIntValue(35, 64, (-16776961));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (35, 64)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
    }

    @Test
    void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii(73, "MBad Type: \n\n");
    }

    @Test
    void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns85 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_HISTORY;
        java.lang.Object obj86 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage87 = tiffDirectory66.getTiffImage();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"ImageWidth\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(tagInfoUnknowns85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setReadThumbnails(false);
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray8, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters3.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterCieLab13);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter15 = tiffImagingParameters3.getCustomPhotometricInterpreter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(photometricInterpreter15);
    }

    @Test
    void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("T", 34677, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 3);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType63);
        tiffOutputDirectory16.add(tagInfoSShort64, (short) 10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType76);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType76, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("V", 32909, 32895, tiffDirectoryType76);
        java.lang.String[] strArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoAscii80, strArray81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown data type: null");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType76 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType76.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setPixelDensity(pixelDensity10);
        java.lang.Integer int12 = tiffImagingParameters9.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet15 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setOutputSet(tiffOutputSet15);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters14.asThis();
        tiffImagingParameters17.clearSubImage();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory19 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters20 = tiffImagingParameters17.setBufferedImageFactory(bufferedImageFactory19);
        int int21 = tiffImagingParameters20.getSubImageX();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension22 = tiffImageParser0.getImageSize(byteSource8, tiffImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
        org.junit.Assert.assertNotNull(tiffImagingParameters20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(1678379530, 2189672, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster samples-per-pixel specification must be at least 1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement((long) (byte) 100, 71);
    }

    @Test
    void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.apache.commons.imaging.internal.Debug.debug("V");
    }

    @Test
    void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(89, "T");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader3 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray4 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList5, tiffDirectoryArray4);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray7 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList8, tiffFieldArray7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents10 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList8);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata11 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType18);
        byte[] byteArray21 = tiffImageMetadata11.getFieldValue(tagInfoSBytes20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString22 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str23 = tiffImageMetadata11.getFieldValue(tagInfoXpString22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField26 = tiffImageMetadata11.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns24, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents27 = tiffImageMetadata11.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList28 = tiffContents27.directories;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType35);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("E", (int) (byte) -1, (-1), tiffDirectoryType35);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField38 = tiffContents27.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSShorts37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType55, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort50, 65536, tiffDirectoryType55, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort50, 65000, tiffDirectoryType69, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytes", 65000, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_43, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader89 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder90 = tiffReader89.getByteOrder();
        byte[] byteArray92 = tagInfoSLong87.encodeValue(byteOrder90, 1678379530);
        byte[] byteArray94 = tagInfoByte75.encodeValue(byteOrder90, (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray95 = fieldTypeShort2.writeData((java.lang.Object) tagInfoSShorts37, byteOrder90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid data: [TagInfo. tag: -1 (0xffffffff, name: E] (org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts)");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertNotNull(tagInfoXpString22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tagInfoUnknowns24);
        org.junit.Assert.assertNull(tiffField26);
        org.junit.Assert.assertNotNull(tiffContents27);
        org.junit.Assert.assertNotNull(tiffDirectoryList28);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType35 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType35.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffField38);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType55 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType55.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType69 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType69.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType84 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType84.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[0]");
    }

    @Test
    void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray52, 30, 0, false);
        byte[] byteArray60 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray52, (int) (short) -1, 35, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1]");
    }

    @Test
    void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData93 = tiffDirectory89.getJpegImageData();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement> imageDataElementList94 = tiffDirectory89.getTiffRawImageDataElements();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(jpegImageData93);
    }

    @Test
    void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        int int23 = tiffOutputDirectory16.getType();
        java.lang.String str24 = tiffOutputDirectory16.description();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = tiffOutputDirectory16.getItemDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"privateName\" because \"dirType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Bad Type" + "'", str24, "Bad Type");
    }

    @Test
    void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        java.lang.String str54 = tiffField50.getValueDescription();
        java.nio.ByteOrder byteOrder55 = tiffField50.getByteOrder();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = tiffField50.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@72648d58");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(byteOrder55);
    }

    @Test
    void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("ImageColorIndicator", 17, 13, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("Bad Type", 32946, (-3), tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]", 64, (-5), tiffDirectoryType12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 6, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("hi!", (-65281), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 95);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble((int) (byte) 0, "M");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort28 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray51 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray46, 34713, (int) (byte) 0, false, (-65281));
        short short52 = tagInfoShort28.getValue(byteOrder39, byteArray51);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray66 = tagInfoSRationals27.getValue(byteOrder39, byteArray65);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless67 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray65);
        java.nio.ByteOrder byteOrder68 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_24, (long) 34676, (long) 7, byteArray65, byteOrder68, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType71 = tiffField70.getFieldType();
        byte[] byteArray72 = tiffField70.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType73 = tiffField70.getFieldType();
        java.lang.Object obj74 = fieldTypeDouble19.getValue(tiffField70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo75 = tiffField70.getTagInfo();
        java.lang.Object obj76 = fieldTypeShort6.getValue(tiffField70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement77 = tiffField70.getOversizeValueElement();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals27);
        org.junit.Assert.assertNotNull(tagInfoShort28);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short52 + "' != '" + (short) 4096 + "'", short52 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray66);
        org.junit.Assert.assertNotNull(abstractFieldType71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(tagInfo75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(abstractTiffElement77);
    }

    @Test
    void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SHARPNESS_2;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts6 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        short[] shortArray21 = new short[] {};
        byte[] byteArray22 = tagInfoShortOrLongOrRational7.encodeValue(byteOrder18, shortArray21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort28 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, abstractFieldTypeArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoByte33.encodeValue(byteOrder34, (byte) 0);
        short[] shortArray37 = new short[] {};
        byte[] byteArray38 = tagInfoShortOrLongOrRational23.encodeValue(byteOrder34, shortArray37);
        byte[] byteArray39 = tagInfoShorts6.encodeValue(byteOrder18, shortArray37);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3, 258, byteArray39);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray43 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressModifiedHuffman(byteArray39, 32773, 65536);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to decompress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeRational3);
        org.junit.Assert.assertNotNull(tagInfoShorts6);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational23);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
    }

    @Test
    void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 6, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder22 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray27 = photometricInterpreterFloat26.getMinXY();
        float float28 = photometricInterpreterFloat26.getMeanFound();
        float float29 = photometricInterpreterFloat26.getMaxFound();
        int[] intArray30 = photometricInterpreterFloat26.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel35 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray30, 25, 69, 65536, true);
        byte[] byteArray36 = tagInfoSLongs21.encodeValue(byteOrder22, intArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader46 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder47 = tiffReader46.getByteOrder();
        byte[] byteArray49 = tagInfoByte44.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat52 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray53 = photometricInterpreterFloat52.getMinXY();
        byte[] byteArray54 = tagInfoSLongs21.encodeValue(byteOrder47, intArray53);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb((-5), intArray53, (-65536), 42, 5);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder59 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt62 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int63 = tiffRasterDataInt62.getHeight();
        int[] intArray64 = tiffRasterDataInt62.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterRgb58.interpretPixel(imageBuilder59, intArray64, (int) (short) 100, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.0f + "'", float28 == 0.0f);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + Float.NEGATIVE_INFINITY + "'", float29 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType42 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType42.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32766, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat2.setIntValue(50717, 21, 30, 34905);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (50717, 21)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType10);
        java.nio.ByteOrder byteOrder14 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray16 = tagInfoSByte13.encodeValue(byteOrder14, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory17 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles18 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader20 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder21 = tiffReader20.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals22 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray64 = tagInfoRationals22.encodeValue(byteOrder23, rationalNumberArray63);
        double[] doubleArray65 = tagInfoDoubles18.getValue(byteOrder21, byteArray64);
        byte[] byteArray66 = tagInfoDoubles0.encodeValue(byteOrder14, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray69 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT6(byteArray66, (int) (byte) 100, 64);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading stream for huffman tree");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoDoubles0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0]");
        org.junit.Assert.assertNotNull(tagInfoDoubles18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(tagInfoRationals22);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
    }

    @Test
    void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.String str54 = tiffField51.getValueDescription();
        int[] intArray55 = tiffField51.getIntArrayValue();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs60 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader62 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder63 = tiffReader62.getByteOrder();
        int[] intArray67 = new int[] { (byte) 1, 14, 22 };
        int int68 = org.apache.commons.imaging.internal.SafeOperations.add(intArray67);
        byte[] byteArray69 = tagInfoLongs60.encodeValue(byteOrder63, intArray67);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb73 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(95, intArray67, 18, 19, 29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette74 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(9006, intArray55, 2, 14, 80, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(tagInfoLongs60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 37 + "'", int68 == 37);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
    }

    @Test
    void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        int int9 = tiffImagingParameters8.getSubImageY();
        java.lang.String str10 = tiffImagingParameters8.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter11 = tiffImagingParameters8.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters13.setT6Options((java.lang.Integer) (-5));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo16 = tiffImageParser0.getImageInfo(byteSource5, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(photometricInterpreter11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
    }

    @Test
    void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        float[] floatArray6 = tiffRasterDataInt2.getData();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = tiffRasterDataInt2.getIntValue((-2), 336, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-2, 336)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataFloat3.getValue((-16776961), 4, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-16776961, 4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator90 = tiffOutputDirectory89.spliterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator90);
    }

    @Test
    void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString84 = null;
        java.lang.String str86 = tiffDirectory66.getFieldValue(tagInfoXpString84, false);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser87 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder88 = tiffImageParser87.getByteOrder();
        java.lang.String str89 = tiffImageParser87.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters90 = tiffImageParser87.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters91 = tiffImageParser87.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterData tiffRasterData92 = tiffDirectory66.getRasterData(tiffImagingParameters91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"SampleFormat\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tif" + "'", str89, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters90);
        org.junit.Assert.assertNotNull(tiffImagingParameters91);
    }

    @Test
    void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        float float3 = photometricInterpreterFloat2.getMaxFound();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.NEGATIVE_INFINITY + "'", float3 == Float.NEGATIVE_INFINITY);
    }

    @Test
    void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics();
        int int9 = tiffRasterStatistics8.getCountOfSamples();
        float float10 = tiffRasterStatistics8.getMinValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
    }

    @Test
    void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean5 = tiffDirectoryType4.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("A", (int) (byte) 1, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("PreviewImageLength", 73, tiffDirectoryType4);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType63);
        tiffOutputDirectory16.add(tagInfoSShort64, (short) 10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType75);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType75);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType75);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader80 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder81 = tiffReader80.getByteOrder();
        byte[] byteArray83 = tagInfoSLong78.encodeValue(byteOrder81, 1678379530);
        tiffOutputDirectory16.add(tagInfoSLong78, 24);
        org.apache.commons.imaging.common.BinaryOutputStream binaryOutputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.writeItem(binaryOutputStream86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.BinaryOutputStream.write2Bytes(int)\" because \"bos\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType75 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType75.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100, 10, 10, 10]");
    }

    @Test
    void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList9 = tiffContents7.getElements();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(abstractTiffElementList9);
    }

    @Test
    void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters7.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory12 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters7.setBufferedImageFactory(bufferedImageFactory12);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters13.setFileName("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        boolean boolean16 = tiffImagingParameters15.isSubImageSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<byte[]> byteArrayList17 = tiffImageParser0.collectRawImageData(byteSource6, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt((int) (byte) -1, 48, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = tiffImageParser0.getFormatCompliance(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        int int3 = strips2.getImageDataLength();
        int int4 = strips2.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray5 = strips2.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray6 = strips2.getImageData();
        int int7 = strips2.getImageDataLength();
        boolean boolean8 = strips2.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32844 + "'", int4 == 32844);
        org.junit.Assert.assertNotNull(dataElementArray5);
        org.junit.Assert.assertNotNull(dataElementArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 34676, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        byte[] byteArray53 = tagInfoSByte11.encodeValue(byteOrder24, (byte) 1);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1]");
    }

    @Test
    void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(64, (-16759808));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = tiffDirectory66.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setReadThumbnails(false);
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray8, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters3.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterCieLab13);
        boolean boolean15 = tiffImagingParameters14.isSubImageSet();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters20 = tiffImagingParameters14.setSubImage(32768, (-65281), (-65536), 1751720192);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid sub-image specification: negative x and y values not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        int[] intArray5 = new int[] { (byte) 1, 14, 22 };
        int int6 = org.apache.commons.imaging.internal.SafeOperations.add(intArray5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel11 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((int) '4', intArray5, 1, 11, 7, true);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv15 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(30, intArray5, 2, 258, 0);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder16 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt19 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType20 = tiffRasterDataInt19.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics21 = tiffRasterDataInt19.getSimpleStatistics();
        float[] floatArray22 = tiffRasterDataInt19.getData();
        int int23 = tiffRasterDataInt19.getSamplesPerPixel();
        int[] intArray24 = tiffRasterDataInt19.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType25 = tiffRasterDataInt19.getDataType();
        int[] intArray26 = tiffRasterDataInt19.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterLogLuv15.interpretPixel(imageBuilder16, intArray26, (int) ' ', 9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid length of bits per sample (expected 3).");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 37 + "'", int6 == 37);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType20 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType20.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType25 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType25.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt3.getSimpleStatistics();
        float[] floatArray6 = tiffRasterDataInt3.getData();
        int int7 = tiffRasterDataInt3.getSamplesPerPixel();
        int[] intArray8 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(255, intArray8, 22, 25, 19, false);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder14 = null;
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterBiLevel13.interpretPixel(imageBuilder14, intArray15, (int) (short) -1, 32845);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from int array because \"samples\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n}\r\n", 5, tiffDirectoryType10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory6 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter7 = null;
        int[] intArray13 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration20 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader22 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder23 = tiffReader22.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles24 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled25 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory6, photometricInterpreter7, 10, (int) (byte) 10, (-65281), intArray13, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration20, byteOrder23, tiles24);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray13, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters30 = tiffImagingParameters2.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb29);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters32 = tiffImagingParameters30.setFileName("TIFF Header");
        java.lang.Integer int33 = tiffImagingParameters32.getT4Options();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(tiffImagingParameters30);
        org.junit.Assert.assertNotNull(tiffImagingParameters32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory9 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter10 = null;
        int[] intArray16 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration23 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader25 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder26 = tiffReader25.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles27 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled28 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory9, photometricInterpreter10, 10, (int) (byte) 10, (-65281), intArray16, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration23, byteOrder26, tiles27);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab32 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray16, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray16, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray16, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters43 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters45 = tiffImagingParameters0.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters47 = tiffImagingParameters0.setLzwCompressionBlockSize((java.lang.Integer) 32);
        java.lang.String str48 = tiffImagingParameters0.getFileName();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(tiffImagingParameters43);
        org.junit.Assert.assertNotNull(tiffImagingParameters45);
        org.junit.Assert.assertNotNull(tiffImagingParameters47);
        org.junit.Assert.assertNull(str48);
    }
}

