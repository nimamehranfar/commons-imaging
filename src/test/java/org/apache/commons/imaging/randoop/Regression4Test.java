package org.apache.commons.imaging.randoop;

import org.junit.FixMethodOrder;
import org.junit.jupiter.api.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression4Test {

    public static boolean debug = false;

    @Test
    void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory3 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat6 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat(0.0f, (float) 34712L);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt11 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int12 = tiffRasterDataInt11.getHeight();
        int[] intArray13 = tiffRasterDataInt11.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk17 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(24, intArray13, 34712, (int) (byte) 100, 258);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration23 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoSByte36.encodeValue(byteOrder37, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader imageDataReader41 = strips2.getDataReader(tiffDirectory3, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat6, 71, intArray13, 32909, 65000, (int) (short) 0, (-16776961), 12, tiffPlanarConfiguration23, byteOrder37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffDirectory.getFieldValue(org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts, boolean)\" because \"directory\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType33 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType33.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
    }

    @Test
    void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT6Options((java.lang.Integer) 35);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setReadThumbnails(false);
        java.lang.Integer int12 = tiffImagingParameters9.getLzwCompressionBlockSize();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setStrict(false);
        org.apache.commons.imaging.PixelDensity pixelDensity15 = tiffImagingParameters9.getPixelDensity();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNull(pixelDensity15);
    }

    @Test
    void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = tiffImageParser0.getMetadata(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SHORT;
        int int1 = fieldTypeShort0.getType();
        org.junit.Assert.assertNotNull(fieldTypeShort0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
    }

    @Test
    void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort12, 6, tiffDirectoryType17, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder23 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat27 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray28 = photometricInterpreterFloat27.getMinXY();
        float float29 = photometricInterpreterFloat27.getMeanFound();
        float float30 = photometricInterpreterFloat27.getMaxFound();
        int[] intArray31 = photometricInterpreterFloat27.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel36 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray31, 25, 69, 65536, true);
        byte[] byteArray37 = tagInfoSLongs22.encodeValue(byteOrder23, intArray31);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data38 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 32908, 65000, byteArray37);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 0.0f + "'", float29 == 0.0f);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + Float.NEGATIVE_INFINITY + "'", float30 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 65536, tiffDirectoryType11, true);
        boolean boolean16 = tiffDirectoryType11.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("N", 34905, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational18 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort23 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList25 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, abstractFieldTypeArray24);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, tiffDirectoryType27);
        java.nio.ByteOrder byteOrder29 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray31 = tagInfoByte28.encodeValue(byteOrder29, (byte) 0);
        short[] shortArray32 = new short[] {};
        byte[] byteArray33 = tagInfoShortOrLongOrRational18.encodeValue(byteOrder29, shortArray32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong34 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_JPG_FROM_RAW_START_SUB_IFD;
        java.nio.ByteOrder byteOrder35 = null;
        byte[] byteArray37 = tagInfoLong34.encodeValue(byteOrder35, 65536);
        byte[] byteArray41 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray37, 6, 0, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber42 = tagInfoSRational17.getValue(byteOrder29, byteArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational18);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(tagInfoLong34);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 16]");
    }

    @Test
    void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        tiffImageMetadata8.add("TIFF image data: 0 bytes", "");
        tiffImageMetadata8.add("S", "TIFF image data: 0 bytes");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_2;
        boolean boolean17 = tagInfoShort16.isOffset();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffField tiffField19 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShort16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem cannot be cast to class org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory (org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem and org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory are in unnamed module of loader 'app')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tagInfoShort16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray3 = photometricInterpreterFloat2.getMinXY();
        float float4 = photometricInterpreterFloat2.getMaxFound();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + Float.NEGATIVE_INFINITY + "'", float4 == Float.NEGATIVE_INFINITY);
    }

    @Test
    void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getOrCreateRootDirectory();
        tiffOutputSet85.removeField(65);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getInteroperabilityDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory91 = tiffOutputSet85.addRootDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
    }

    @Test
    void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType78, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType85);
        java.lang.Object obj88 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte87);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData89 = tiffDirectory66.getJpegImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData90 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData91 = tiffDirectory66.getTiffImageData();
        tiffDirectory66.dump();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(jpegImageData89);
        org.junit.Assert.assertNull(abstractTiffImageData90);
        org.junit.Assert.assertNull(abstractTiffImageData91);
    }

    @Test
    void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MODEL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder4 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray12 = tagInfoAscii3.encodeValue(byteOrder4, strArray11);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField13 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong1, 79, byteArray12);
        int int14 = fieldTypeLong1.getSize();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte18 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals26 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort27 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort32 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList34 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, abstractFieldTypeArray33);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder38 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray40 = tagInfoByte37.encodeValue(byteOrder38, (byte) 0);
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray50 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray45, 34713, (int) (byte) 0, false, (-65281));
        short short51 = tagInfoShort27.getValue(byteOrder38, byteArray50);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray65 = tagInfoSRationals26.getValue(byteOrder38, byteArray64);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless66 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray64);
        java.nio.ByteOrder byteOrder67 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField69 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_23, (long) 34676, (long) 7, byteArray64, byteOrder67, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType70 = tiffField69.getFieldType();
        boolean boolean71 = tiffField69.isLocalValue();
        java.lang.Object obj72 = fieldTypeByte18.getValue(tiffField69);
        java.lang.Object obj73 = fieldTypeFloat17.getValue(tiffField69);
        int int74 = tiffField69.getTag();
        java.lang.Object obj75 = fieldTypeLong1.getValue(tiffField69);
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeLong1);
        org.junit.Assert.assertNotNull(tagInfoAscii3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(fieldTypeByte18);
        org.junit.Assert.assertNotNull(tagInfoSRationals26);
        org.junit.Assert.assertNotNull(tagInfoShort27);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short51 + "' != '" + (short) 4096 + "'", short51 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray65);
        org.junit.Assert.assertNotNull(abstractFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32771 + "'", int74 == 32771);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt5 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt5.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt5.getSimpleStatistics();
        float[] floatArray8 = tiffRasterDataInt5.getData();
        float[] floatArray9 = tiffRasterDataInt5.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat10 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(89, (-65536), 34676, floatArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        boolean boolean86 = tiffDirectory66.hasTiffImageData();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = tiffDirectory66.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType74 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType74);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("TIFF image data: 0 bytes", (int) (byte) 1, 31, tiffDirectoryType74);
        short[] shortArray78 = tiffDirectory66.getFieldValue(tagInfoSShorts76, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes79 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DNG_VERSION;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = tiffDirectory66.getFieldValue(tagInfoBytes79, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"DNGVersion\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType74 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType74.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray78);
        org.junit.Assert.assertNotNull(tagInfoBytes79);
    }

    @Test
    void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffOutputDirectory16.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray84 = tiles81.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles87 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray84, 43, 32845);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray88 = tiles87.getImageData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(dataElementArray84);
        org.junit.Assert.assertNotNull(dataElementArray88);
    }

    @Test
    void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        java.lang.String str6 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setT6Options((java.lang.Integer) 5);
        boolean boolean9 = tiffImagingParameters8.isSubImageSet();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32898, (int) (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat2.getSimpleStatistics((float) 3);
        // The following exception was thrown during execution in test generation
        try {
            float float8 = tiffRasterDataFloat2.getValue((int) (short) 16, (int) (short) -1, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (16, -1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData23 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData24 = tiffOutputDirectory16.getRawJpegImageData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertNull(abstractTiffImageData23);
        org.junit.Assert.assertNull(jpegImageData24);
    }

    @Test
    void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataFloat3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics(23.0f);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        java.lang.Object obj52 = fieldTypeByte0.getValue(tiffField51);
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("M", (int) (byte) -1, (int) (short) 100, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong8 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_XCLIP_PATH_UNITS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts11 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        short[] shortArray26 = new short[] {};
        byte[] byteArray27 = tagInfoShortOrLongOrRational12.encodeValue(byteOrder23, shortArray26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        short[] shortArray42 = new short[] {};
        byte[] byteArray43 = tagInfoShortOrLongOrRational28.encodeValue(byteOrder39, shortArray42);
        byte[] byteArray44 = tagInfoShorts11.encodeValue(byteOrder23, shortArray42);
        byte[] byteArray46 = tagInfoShort10.encodeValue(byteOrder23, (short) (byte) 10);
        short[] shortArray48 = new short[] { (byte) 0 };
        byte[] byteArray49 = tagInfoShortOrRational9.encodeValue(byteOrder23, shortArray48);
        byte[] byteArray51 = tagInfoLong8.encodeValue(byteOrder23, 34892);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts52 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        short[] shortArray67 = new short[] {};
        byte[] byteArray68 = tagInfoShortOrLongOrRational53.encodeValue(byteOrder64, shortArray67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational69 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray75 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort74 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList76 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, abstractFieldTypeArray75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, tiffDirectoryType78);
        java.nio.ByteOrder byteOrder80 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray82 = tagInfoByte79.encodeValue(byteOrder80, (byte) 0);
        short[] shortArray83 = new short[] {};
        byte[] byteArray84 = tagInfoShortOrLongOrRational69.encodeValue(byteOrder80, shortArray83);
        byte[] byteArray85 = tagInfoShorts52.encodeValue(byteOrder64, shortArray83);
        byte[] byteArray86 = tagInfoSShorts7.encodeValue(byteOrder23, shortArray83);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLong8);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(tagInfoShorts11);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational28);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[76, -120, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShorts52);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational53);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational69);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[]");
    }

    @Test
    void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32773, "Bad Type: \n\n");
    }

    @Test
    void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType8, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, tiffDirectoryType8);
        java.lang.String str12 = fieldTypeShort4.getName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong13 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals21 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort27 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, abstractFieldTypeArray28);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, tiffDirectoryType31);
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray35 = tagInfoByte32.encodeValue(byteOrder33, (byte) 0);
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray45 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray40, 34713, (int) (byte) 0, false, (-65281));
        short short46 = tagInfoShort22.getValue(byteOrder33, byteArray45);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort51 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList53 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList53, abstractFieldTypeArray52);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList53, tiffDirectoryType55);
        java.nio.ByteOrder byteOrder57 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray59 = tagInfoByte56.encodeValue(byteOrder57, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray60 = tagInfoSRationals21.getValue(byteOrder33, byteArray59);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless61 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray59);
        java.nio.ByteOrder byteOrder62 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField64 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_18, (long) 34676, (long) 7, byteArray59, byteOrder62, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType65 = tiffField64.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType66 = tiffField64.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement67 = tiffField64.getOversizeValueElement();
        int int68 = tiffField64.getOffset();
        int int69 = tiffField64.getDirectoryType();
        java.lang.Object obj70 = fieldTypeLong13.getValue(tiffField64);
        java.lang.Object obj71 = fieldTypeShort4.getValue(tiffField64);
        int int72 = tiffField64.getTag();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo73 = tiffField64.getTagInfo();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(fieldTypeLong13);
        org.junit.Assert.assertNotNull(tagInfoSRationals21);
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short46 + "' != '" + (short) 4096 + "'", short46 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray60);
        org.junit.Assert.assertNotNull(abstractFieldType65);
        org.junit.Assert.assertNotNull(abstractFieldType66);
        org.junit.Assert.assertNotNull(abstractTiffElement67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 31 + "'", int69 == 31);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 32771 + "'", int72 == 32771);
        org.junit.Assert.assertNotNull(tagInfo73);
    }

    @Test
    void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        tiffImageMetadata8.add("TIFF image data: 0 bytes", "");
        tiffImageMetadata8.add("S", "TIFF image data: 0 bytes");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray47 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray42, 34713, (int) (byte) 0, false, (-65281));
        short short48 = tagInfoShort24.getValue(byteOrder35, byteArray47);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray62 = tagInfoSRationals23.getValue(byteOrder35, byteArray61);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless63 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray61);
        java.nio.ByteOrder byteOrder64 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField66 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_20, (long) 34676, (long) 7, byteArray61, byteOrder64, 9);
        long[] longArray67 = tiffField66.getLongArrayValue();
        long long68 = tiffField66.getCount();
        java.lang.String str69 = tiffField66.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem70 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField66);
        java.lang.String str71 = tiffMetadataItem70.getKeyword();
        tiffImageMetadata8.add((org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem) tiffMetadataItem70);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField73 = tiffMetadataItem70.getTiffField();
        java.lang.String str74 = tiffMetadataItem70.getKeyword();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tagInfoSRationals23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short48 + "' != '" + (short) 4096 + "'", short48 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray62);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 34676L + "'", long68 == 34676L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Unknown Tag (0x8003)" + "'", str71, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(tiffField73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Unknown Tag (0x8003)" + "'", str74, "Unknown Tag (0x8003)");
    }

    @Test
    void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField50.getFieldType();
        int int55 = tiffField50.getBytesLength();
        // The following exception was thrown during execution in test generation
        try {
            long long56 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 277408 + "'", int55 == 277408);
    }

    @Test
    void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType74 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType74);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("TIFF image data: 0 bytes", (int) (byte) 1, 31, tiffDirectoryType74);
        short[] shortArray78 = tiffDirectory66.getFieldValue(tagInfoSShorts76, false);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData79 = tiffDirectory66.getTiffImageData();
        java.awt.image.BufferedImage bufferedImage80 = tiffDirectory66.getTiffImage();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType74 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType74.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray78);
        org.junit.Assert.assertNull(abstractTiffImageData79);
        org.junit.Assert.assertNull(bufferedImage80);
    }

    @Test
    void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt((int) '#', (int) 'a');
    }

    @Test
    void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        int int3 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        tiffRasterDataFloat3.setValue(3, 5, (float) 12);
        float[] floatArray9 = tiffRasterDataFloat3.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(79, 32803, (float) 25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (79, 32803)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray9);
    }

    @Test
    void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort12, 5, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (int) (short) 10, 17, tiffDirectoryType14, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("10 (0xa: hi!): ", 1751720192, tiffDirectoryType14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(5, (-3), (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (5, -3)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
    }

    @Test
    void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory0 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter1 = null;
        int[] intArray7 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration14 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader16 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder17 = tiffReader16.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles18 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled19 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory0, photometricInterpreter1, 10, (int) (byte) 10, (-65281), intArray7, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration14, byteOrder17, tiles18);
        java.awt.Rectangle rectangle20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageBuilder imageBuilder23 = dataReaderTiled19.readImageData(rectangle20, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"tiles\" because \"this.imageData\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder17);
    }

    @Test
    void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters4.setPixelDensity(pixelDensity5);
        int int7 = tiffImagingParameters6.getSubImageY();
        java.lang.String str8 = tiffImagingParameters6.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters6.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters11.setT6Options((java.lang.Integer) 35);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters13.setReadThumbnails(false);
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffContents tiffContents17 = tiffReader1.readContents(byteSource3, tiffImagingParameters13, formatCompliance16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
    }

    @Test
    void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MAKE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((-1), "W");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("M", (int) (byte) -1, (int) (short) 100, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("N", 64, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort5, (int) '#', tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort17 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory18 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter19 = null;
        int[] intArray25 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration32 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader34 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder35 = tiffReader34.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles36 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled37 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory18, photometricInterpreter19, 10, (int) (byte) 10, (-65281), intArray25, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration32, byteOrder35, tiles36);
        byte[] byteArray39 = tagInfoShort17.encodeValue(byteOrder35, (short) 4096);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort5, 50717, byteArray39);
        java.lang.String str41 = tiffOutputField40.toString();
        java.lang.String str42 = tiffOutputField40.toString();
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShort17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[16, 0]");
    }

    @Test
    void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_TRANSFER_RANGE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort15 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList17 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, abstractFieldTypeArray16);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder21 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray23 = tagInfoByte20.encodeValue(byteOrder21, (byte) 0);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray33 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray28, 34713, (int) (byte) 0, false, (-65281));
        short short34 = tagInfoShort10.getValue(byteOrder21, byteArray33);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray48 = tagInfoSRationals9.getValue(byteOrder21, byteArray47);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless49 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray47);
        java.nio.ByteOrder byteOrder50 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField52 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, (long) 34676, (long) 7, byteArray47, byteOrder50, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType53 = tiffField52.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField52.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement55 = tiffField52.getOversizeValueElement();
        int int56 = tiffField52.getOffset();
        int int57 = tiffField52.getDirectoryType();
        java.lang.Object obj58 = fieldTypeLong1.getValue(tiffField52);
        java.lang.String str59 = tiffField52.getValueDescription();
        java.lang.Object obj60 = tagInfoShorts0.getValue(tiffField52);
        long long61 = tiffField52.getCount();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeLong1);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short34 + "' != '" + (short) 4096 + "'", short34 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray48);
        org.junit.Assert.assertNotNull(abstractFieldType53);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractTiffElement55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 31 + "'", int57 == 31);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 34676L + "'", long61 == 34676L);
    }

    @Test
    void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BASELINE_EXPOSURE;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader14 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder15 = tiffReader14.getByteOrder();
        byte[] byteArray17 = tagInfoSLong12.encodeValue(byteOrder15, 1678379530);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational18 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_TRACK;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader20 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder21 = tiffReader20.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy22 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles23 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_DOUBLE_PARAMS_TAG;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader26 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder27 = tiffReader26.getByteOrder();
        int[] intArray31 = new int[] { (byte) 1, 14, 22 };
        int int32 = org.apache.commons.imaging.internal.SafeOperations.add(intArray31);
        byte[] byteArray33 = tagInfoLongs24.encodeValue(byteOrder27, intArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoSByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory50 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder47);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData51 = tiffOutputDirectory50.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory50.add(tagInfoByte52, (byte) 1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds55 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_PADDING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles56 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort57 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory58 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter59 = null;
        int[] intArray65 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration72 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader74 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder75 = tiffReader74.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles76 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled77 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory58, photometricInterpreter59, 10, (int) (byte) 10, (-65281), intArray65, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration72, byteOrder75, tiles76);
        byte[] byteArray79 = tagInfoShort57.encodeValue(byteOrder75, (short) 4096);
        double[] doubleArray85 = new double[] { (-1.0f), 20, (-3), 0.0f, (byte) 10 };
        byte[] byteArray86 = tagInfoDoubles56.encodeValue(byteOrder75, doubleArray85);
        byte[] byteArray91 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray86, 21, 0, true, 10);
        tiffOutputDirectory50.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds55, byteArray86);
        double[] doubleArray93 = tagInfoDoubles23.getValue(byteOrder27, byteArray86);
        org.apache.commons.imaging.common.RationalNumber rationalNumber94 = tagInfoRational18.getValue(byteOrder21, byteArray86);
        byte[] byteArray95 = tagInfoSRational0.encodeValue(byteOrder15, rationalNumber94);
        org.junit.Assert.assertNotNull(tagInfoSRational0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(tagInfoRational18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(tagInfoDoubles23);
        org.junit.Assert.assertNotNull(tagInfoLongs24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 37 + "'", int32 == 37);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData51);
        org.junit.Assert.assertNotNull(tagInfoByte52);
        org.junit.Assert.assertNotNull(tagInfoUndefineds55);
        org.junit.Assert.assertNotNull(tagInfoDoubles56);
        org.junit.Assert.assertNotNull(tagInfoShort57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration72 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration72.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[16, 0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[-65, -16, 0, 0, 0, 0, 0, 0, 64, 52, 0, 0, 0, 0, 0, 0, -64, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(rationalNumber94);
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[-65, -16, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, 10, (int) (short) -1);
        org.junit.Assert.assertNotNull(dataElementArray0);
    }

    @Test
    void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("32771 (0x8003: Unknown Tag):  (34676 hi!)");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("JPEG image data: 1 bytes");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setPixelDensity(pixelDensity10);
        java.lang.Integer int12 = tiffImagingParameters9.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setXmpXml("V");
        java.lang.String str15 = tiffImagingParameters14.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters14.setT6Options((java.lang.Integer) 5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = tiffImageParser0.getMetadata(file8, tiffImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
    }

    @Test
    void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        tiffOutputSet85.removeField(6);
        java.lang.String str93 = tiffOutputSet85.toString("TIFF image data: 0 bytesBad Type: \n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = tiffOutputSet85.addRootDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "TIFF image data: 0 bytesBad Type: \n\nTiffOutputSet {\r\nTIFF image data: 0 bytesBad Type: \n\nbyteOrder: LITTLE_ENDIAN\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 0: Gps (-3)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 1: Root (0)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 2: Exif (-2)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 3: Interoperability (-4)\r\nTIFF image data: 0 bytesBad Type: \n\n}\r\n" + "'", str93, "TIFF image data: 0 bytesBad Type: \n\nTiffOutputSet {\r\nTIFF image data: 0 bytesBad Type: \n\nbyteOrder: LITTLE_ENDIAN\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 0: Gps (-3)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 1: Root (0)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 2: Exif (-2)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 3: Interoperability (-4)\r\nTIFF image data: 0 bytesBad Type: \n\n}\r\n");
    }

    @Test
    void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        long long75 = tiffDirectory66.getNextDirectoryOffset();
        boolean boolean76 = tiffDirectory66.hasTiffRasterData();
        int int77 = tiffDirectory66.length;
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory66.getTiffImage();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList79 = tiffDirectory66.getDirectoryEntries();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement80 = tiffDirectory66.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 9L + "'", long75 == 9L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 6 + "'", int77 == 6);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNotNull(tiffFieldList79);
    }

    @Test
    void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        float float3 = photometricInterpreterFloat2.getMaxFound();
        int[] intArray4 = photometricInterpreterFloat2.getMaxXY();
        float float5 = photometricInterpreterFloat2.getMaxFound();
        org.apache.commons.imaging.common.ImageBuilder imageBuilder6 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt9 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int10 = tiffRasterDataInt9.getHeight();
        int[] intArray11 = tiffRasterDataInt9.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterFloat2.interpretPixel(imageBuilder6, intArray11, 65, (int) (short) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.NEGATIVE_INFINITY + "'", float3 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + Float.NEGATIVE_INFINITY + "'", float5 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory2 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter3 = null;
        int[] intArray9 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration16 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader18 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder19 = tiffReader18.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles20 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled21 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory2, photometricInterpreter3, 10, (int) (byte) 10, (-65281), intArray9, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration16, byteOrder19, tiles20);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray9, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(32845, intArray9, 24, 0, 23);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder19);
    }

    @Test
    void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        float float3 = photometricInterpreterFloat2.getMinFound();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.POSITIVE_INFINITY + "'", float3 == Float.POSITIVE_INFINITY);
    }

    @Test
    void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList9 = tiffContents7.directories;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType23, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort19, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("hi!", (int) (short) 10, (int) (byte) -1, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("", 0, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField29 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSByte28);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList30 = tiffContents7.tiffFields;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tiffDirectoryList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField29);
        org.junit.Assert.assertNotNull(tiffFieldList30);
    }

    @Test
    void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters2.setFileName("Unknown Tag (0x8003)");
        org.apache.commons.imaging.PixelDensity pixelDensity10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setPixelDensity(pixelDensity10);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
    }

    @Test
    void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText("ImageColorIndicator", 43, tiffDirectoryType8);
        int int12 = tagInfoGpsText11.tag;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 43 + "'", int12 == 43);
    }

    @Test
    void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList20, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList20, 34905, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList20, 34712, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("A", 35, abstractFieldTypeList20, 32897, tiffDirectoryType54, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("E", (int) (byte) -1, (-1), tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("", 0, 37, tiffDirectoryType69, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("K", 32897, abstractFieldTypeList20, 34712, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField75 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoBytes74);
        // The following exception was thrown during execution in test generation
        try {
            tiffContents7.dissect();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"offset\" because \"element\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(abstractFieldTypeList20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType69 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType69.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffField75);
    }

    @Test
    void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        boolean boolean87 = tiffDirectory70.hasJpegImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList88 = tiffDirectory70.getDirectoryEntries();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort89 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_FOCAL_PLANE_RESOLUTION_UNIT_EXIF_IFD;
        // The following exception was thrown during execution in test generation
        try {
            short short90 = tiffDirectory70.getFieldValue(tagInfoShort89);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"FocalPlaneResolutionUnit\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tiffFieldList88);
        org.junit.Assert.assertNotNull(tagInfoShort89);
    }

    @Test
    void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType3);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles5 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_DOUBLE_PARAMS_TAG;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader8 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder9 = tiffReader8.getByteOrder();
        int[] intArray13 = new int[] { (byte) 1, 14, 22 };
        int int14 = org.apache.commons.imaging.internal.SafeOperations.add(intArray13);
        byte[] byteArray15 = tagInfoLongs6.encodeValue(byteOrder9, intArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType25);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType25);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder29 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray31 = tagInfoSByte28.encodeValue(byteOrder29, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory32 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder29);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData33 = tiffOutputDirectory32.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory32.add(tagInfoByte34, (byte) 1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds37 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_PADDING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles38 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort39 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory40 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter41 = null;
        int[] intArray47 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration54 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader56 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder57 = tiffReader56.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles58 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled59 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory40, photometricInterpreter41, 10, (int) (byte) 10, (-65281), intArray47, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration54, byteOrder57, tiles58);
        byte[] byteArray61 = tagInfoShort39.encodeValue(byteOrder57, (short) 4096);
        double[] doubleArray67 = new double[] { (-1.0f), 20, (-3), 0.0f, (byte) 10 };
        byte[] byteArray68 = tagInfoDoubles38.encodeValue(byteOrder57, doubleArray67);
        byte[] byteArray73 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray68, 21, 0, true, 10);
        tiffOutputDirectory32.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds37, byteArray68);
        double[] doubleArray75 = tagInfoDoubles5.getValue(byteOrder9, byteArray68);
        byte[] byteArray77 = tagInfoDouble4.encodeValue(byteOrder9, (double) 0.0f);
        boolean boolean78 = tagInfoDouble4.isOffset();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoDoubles5);
        org.junit.Assert.assertNotNull(tagInfoLongs6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 37 + "'", int14 == 37);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType25 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType25.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData33);
        org.junit.Assert.assertNotNull(tagInfoByte34);
        org.junit.Assert.assertNotNull(tagInfoUndefineds37);
        org.junit.Assert.assertNotNull(tagInfoDoubles38);
        org.junit.Assert.assertNotNull(tagInfoShort39);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[16, 0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-65, -16, 0, 0, 0, 0, 0, 0, 64, 52, 0, 0, 0, 0, 0, 0, -64, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 36, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 20.0, -3.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.getInteroperabilityDirectory();
        java.lang.String str90 = tiffOutputSet85.toString();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNull(tiffOutputDirectory89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str90, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
    }

    @Test
    void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray3 = strips2.getImageData();
        int int4 = strips2.rowsPerStrip;
        int int5 = strips2.getImageDataLength();
        boolean boolean6 = strips2.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertNotNull(dataElementArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText79 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean80 = tagInfoGpsText79.isText();
        tiffOutputDirectory16.add(tagInfoGpsText79, "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ");
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator83 = tiffOutputDirectory16.spliterator();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor84 = tiffOutputDirectory16.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoGpsText79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator83);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor84);
    }

    @Test
    void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText("ImageColorIndicator", 43, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("Bad TypeUnknown Tag (0x8003): ", 32771, (int) (short) 100, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("S", (int) (byte) 0, tiffDirectoryType13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.addRootDirectory();
        int int91 = tiffOutputDirectory90.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator92 = tiffOutputDirectory90.spliterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator92);
    }

    @Test
    void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics(0.0f);
        int int6 = tiffRasterStatistics5.getCountOfSamples();
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        java.lang.String str78 = tiffOutputField74.toString("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo79 = tiffOutputField74.tagInfo;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo79);
    }

    @Test
    void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType13, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort9, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("S", 34661, (int) ' ', tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("hi!", 32845, tiffDirectoryType13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble((int) (byte) 0, "M");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        byte[] byteArray55 = tiffField53.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField53.getFieldType();
        java.lang.Object obj57 = fieldTypeDouble2.getValue(tiffField53);
        java.lang.String str58 = fieldTypeDouble2.getName();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "M" + "'", str58, "M");
    }

    @Test
    void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort15 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList17 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, abstractFieldTypeArray16);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder21 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray23 = tagInfoByte20.encodeValue(byteOrder21, (byte) 0);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray33 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray28, 34713, (int) (byte) 0, false, (-65281));
        short short34 = tagInfoShort10.getValue(byteOrder21, byteArray33);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray48 = tagInfoSRationals9.getValue(byteOrder21, byteArray47);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless49 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray47);
        java.nio.ByteOrder byteOrder50 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField52 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, (long) 34676, (long) 7, byteArray47, byteOrder50, 9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort54 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational55 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort60 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, abstractFieldTypeArray61);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType64 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, tiffDirectoryType64);
        java.nio.ByteOrder byteOrder66 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray68 = tagInfoByte65.encodeValue(byteOrder66, (byte) 0);
        short[] shortArray69 = new short[] {};
        byte[] byteArray70 = tagInfoShortOrLongOrRational55.encodeValue(byteOrder66, shortArray69);
        byte[] byteArray72 = tagInfoShort54.encodeValue(byteOrder66, (short) (byte) -1);
        byte[] byteArray73 = fieldTypeLong8_6.writeData((java.lang.Object) (-65536), byteOrder66);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("Exif", 11, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, 32895, tiffDirectoryType75);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short34 + "' != '" + (short) 4096 + "'", short34 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray48);
        org.junit.Assert.assertNotNull(tagInfoShort54);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational55);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0]");
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-1, -1]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 0, -1, -1]");
    }

    @Test
    void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        float[] floatArray6 = tiffRasterDataInt2.getData();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(0, 34712, 34676, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 34712)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder2 = tiffImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage3 = null;
        java.io.OutputStream outputStream4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int6 = tiffImagingParameters5.getSubImageHeight();
        int int7 = tiffImagingParameters5.getSubImageHeight();
        boolean boolean8 = tiffImagingParameters5.isReadThumbnails();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory9 = tiffImagingParameters5.getBufferedImageFactory();
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage3, outputStream4, tiffImagingParameters5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(bufferedImageFactory9);
    }

    @Test
    void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType89 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType89);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType89);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational92 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType89);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs93 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType89);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("", 32909, tiffDirectoryType89, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte96 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("K", 88, tiffDirectoryType89);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat97 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n", 17, tiffDirectoryType89);
        // The following exception was thrown during execution in test generation
        try {
            float float98 = tiffDirectory67.getFieldValue(tagInfoFloat97);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"TiffOutputSet {??byteOrder: LITTLE_ENDIAN???directory 0: Root (0)??}??\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType89 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType89.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = tagInfoRationals11.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("tif", 11, 34905, tiffDirectoryType12, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.nio.ByteOrder byteOrder88 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong89 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_STRIP_OFFSETS;
        int[] intArray91 = tiffDirectory66.getFieldValue(tagInfoShortOrLong89, false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong89);
        org.junit.Assert.assertNull(intArray91);
    }

    @Test
    void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("ImageColorIndicator", 65000, 10, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory16 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter17 = null;
        int[] intArray23 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration30 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader32 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder33 = tiffReader32.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles34 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled35 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory16, photometricInterpreter17, 10, (int) (byte) 10, (-65281), intArray23, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration30, byteOrder33, tiles34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        short[] shortArray50 = new short[] {};
        byte[] byteArray51 = tagInfoShortOrLongOrRational36.encodeValue(byteOrder47, shortArray50);
        byte[] byteArray52 = tagInfoShortOrRational15.encodeValue(byteOrder33, shortArray50);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder33, (-65281), (long) 7, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational36);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
    }

    @Test
    void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader86 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder87 = tiffReader86.getByteOrder();
        java.awt.image.BufferedImage bufferedImage88 = tiffDirectory66.getTiffImage(byteOrder87);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong89 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_ROWS_PER_STRIP;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = tiffDirectory66.getFieldValue(tagInfoShortOrLong89, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"RowsPerStrip\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNull(bufferedImage88);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong89);
    }

    @Test
    void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        int int85 = tiffDirectory66.size();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData86 = tiffDirectory66.getJpegImageData();
        boolean boolean87 = tiffDirectory66.hasTiffImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(jpegImageData86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        int[] intArray4 = new int[] { (byte) 1, 14, 22 };
        int int5 = org.apache.commons.imaging.internal.SafeOperations.add(intArray4);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb9 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(0, intArray4, 1678379530, 5, 29);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder10 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat14 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics16 = tiffRasterDataFloat14.getSimpleStatistics((float) (-4));
        int[] intArray17 = tiffRasterDataFloat14.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterRgb9.interpretPixel(imageBuilder10, intArray17, (-16759808), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 37 + "'", int5 == 37);
        org.junit.Assert.assertNotNull(tiffRasterStatistics16);
        org.junit.Assert.assertNotNull(intArray17);
    }

    @Test
    void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        tiffOutputSet85.removeField((int) '4');
        tiffOutputSet85.setGpsInDegrees((double) 0L, (double) 10.0f);
        tiffOutputSet85.removeField(80);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
    }

    @Test
    void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffOutputDirectory16.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray84 = tiles81.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles87 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray84, 80, 32768);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(dataElementArray84);
    }

    @Test
    void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType3, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat48 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray49 = photometricInterpreterFloat48.getMinXY();
        float float50 = photometricInterpreterFloat48.getMeanFound();
        int int52 = photometricInterpreterFloat48.mapValueToArgb((float) 88);
        int[] intArray53 = photometricInterpreterFloat48.getMaxXY();
        byte[] byteArray54 = tagInfoLongs5.encodeValue(byteOrder18, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray57 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressModifiedHuffman(byteArray54, 7, 19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to decompress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float50 + "' != '" + 0.0f + "'", float50 == 0.0f);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat3.getSimpleStatistics((-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(17, 34905, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (17, 34905)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(false);
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffContents tiffContents5 = tiffReader1.readDirectories(byteSource2, true, formatCompliance4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(64, 34892, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (64, 34892)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            float float9 = tiffRasterDataFloat3.getValue(29, (-65536), 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (29, -65536)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
    }

    @Test
    void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        java.lang.String str52 = tiffField50.getDescriptionWithoutValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        long long54 = tiffField50.getCount();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str52, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 34676L + "'", long54 == 34676L);
    }

    @Test
    void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("13 (0xd: E): ", 34713, (int) (byte) -1, tiffDirectoryType3);
    }

    @Test
    void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 50725, (float) (byte) 10, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified values must be v0<v1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem52 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str53 = tiffMetadataItem52.getText();
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = tiffMetadataItem52.getTiffField();
        java.nio.ByteOrder byteOrder55 = tiffField54.getByteOrder();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(tiffField54);
        org.junit.Assert.assertNull(byteOrder55);
    }

    @Test
    void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffImageMetadata8.getAllFields();
        tiffImageMetadata8.add("Tiff-Custom", "T");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 255, 0, tiffDirectoryType20, false);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray24 = tiffImageMetadata8.getFieldValue(tagInfoLongs23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem cannot be cast to class org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory (org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem and org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory are in unnamed module of loader 'app')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort12, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("ImageColorIndicator", 0, 32897, tiffDirectoryType16, false);
        boolean boolean24 = tagInfoShortOrLong23.isText();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort34, 6, tiffDirectoryType39, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType39);
        java.nio.ByteOrder byteOrder45 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat49 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray50 = photometricInterpreterFloat49.getMinXY();
        float float51 = photometricInterpreterFloat49.getMeanFound();
        float float52 = photometricInterpreterFloat49.getMaxFound();
        int[] intArray53 = photometricInterpreterFloat49.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray53, 25, 69, 65536, true);
        byte[] byteArray59 = tagInfoSLongs44.encodeValue(byteOrder45, intArray53);
        int[] intArray60 = tiffImageMetadata8.getFieldValue(tagInfoSLongs44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType66);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", (int) (byte) 10, tiffDirectoryType66);
        byte[] byteArray69 = tiffImageMetadata8.getFieldValue(tagInfoByte68);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType81, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("M", 95, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("M", 20, 65536, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("Tiff-Custom", 32, 5, tiffDirectoryType81);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray87 = tiffImageMetadata8.getFieldValue(tagInfoSRationals86);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + Float.NEGATIVE_INFINITY + "'", float52 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNull(intArray60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType66 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType66.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType81 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType81.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(rationalNumberArray87);
    }

    @Test
    void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("SByte", 22, 14, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("ImageLayer", 7, tiffDirectoryType5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD));
    }

    @Test
    void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("", 32, 19, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader11 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder12 = tiffReader11.getByteOrder();
        int[] intArray16 = new int[] { (byte) 1, 14, 22 };
        int int17 = org.apache.commons.imaging.internal.SafeOperations.add(intArray16);
        byte[] byteArray18 = tagInfoLongs9.encodeValue(byteOrder12, intArray16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        short[] shortArray34 = new short[] {};
        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        short[] shortArray50 = new short[] {};
        byte[] byteArray51 = tagInfoShortOrLongOrRational36.encodeValue(byteOrder47, shortArray50);
        byte[] byteArray52 = tagInfoShorts19.encodeValue(byteOrder31, shortArray50);
        byte[] byteArray53 = tagInfoShortOrRational8.encodeValue(byteOrder12, shortArray50);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader57 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder12, 31, (long) 30, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLongs9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 37 + "'", int17 == 37);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tagInfoShorts19);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational36);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
    }

    @Test
    void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.imaging.internal.Debug.debug("TIFF image data: 0 bytesBad Type: \n\n");
    }

    @Test
    void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType78, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType85);
        java.lang.Object obj88 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte87);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData89 = tiffDirectory66.getJpegImageData();
        boolean boolean90 = tiffDirectory66.hasTiffRasterData();
        boolean boolean91 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong92 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_JPG_FROM_RAW_START_SUB_IFD;
        java.nio.ByteOrder byteOrder93 = null;
        byte[] byteArray95 = tagInfoLong92.encodeValue(byteOrder93, 65536);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = tiffDirectory66.getFieldValue(tagInfoLong92);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"JpgFromRawStart\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(jpegImageData89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(tagInfoLong92);
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[0, 0, 1, 0]");
    }

    @Test
    void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) (byte) -1, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, 10);
        java.lang.String str7 = fieldTypeShort4.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(11, "ImageLayer");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, 6, tiffDirectoryType18, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("Element, offset: 37, length: 12, last: 49", 10, 42, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("[TagInfo. tag: 48320 (0xbcc0, name: ImageOffset]", 32947, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational4, 32896, tiffDirectoryType18, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        int[] intArray4 = new int[] { (byte) 1, 14, 22 };
        int int5 = org.apache.commons.imaging.internal.SafeOperations.add(intArray4);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv9 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(73, intArray4, 37, 64, 17);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder10 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 7, 79.0f);
        float float14 = photometricInterpreterFloat13.getMinFound();
        int[] intArray15 = photometricInterpreterFloat13.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterLogLuv9.interpretPixel(imageBuilder10, intArray15, 34713, 13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid length of bits per sample (expected 3).");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 37 + "'", int5 == 37);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + Float.POSITIVE_INFINITY + "'", float14 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
    }

    @Test
    void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_FREE_BYTE_COUNTS;
        int[] intArray70 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = tiffDirectory66.getFieldValue(tagInfoXpString71, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNull(intArray70);
    }

    @Test
    void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText88 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_USER_COMMENT;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = tiffDirectory66.getFieldValue(tagInfoGpsText88, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"UserComment\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoGpsText88);
    }

    @Test
    void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters2.setSubImage(13, 34661, 19, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters2.setT4Options((java.lang.Integer) 1678379530);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
    }

    @Test
    void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational((int) (short) 10, "");
    }

    @Test
    void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader3 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder4 = tiffReader3.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy5 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder4);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat8 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray9 = photometricInterpreterFloat8.getMinXY();
        float float10 = photometricInterpreterFloat8.getMeanFound();
        float float11 = photometricInterpreterFloat8.getMaxFound();
        int[] intArray12 = photometricInterpreterFloat8.getMaxXY();
        byte[] byteArray13 = tagInfoShortOrLongOrRational1.encodeValue(byteOrder4, intArray12);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab17 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(30, intArray12, 30, 32947, 34892);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + Float.NEGATIVE_INFINITY + "'", float11 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement dataElement4 = strips2.getImageData((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataElementArray0);
    }

    @Test
    void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList9 = tiffContents7.directories;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType23, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort19, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("hi!", (int) (short) 10, (int) (byte) -1, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("", 0, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField29 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSByte28);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader30 = tiffContents7.header;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tiffDirectoryList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField29);
        org.junit.Assert.assertNull(tiffHeader30);
    }

    @Test
    void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("M", 32898, 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("Element, offset: 37, length: 12, last: 49", (int) (short) 0, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem52 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str53 = tiffMetadataItem52.getText();
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = tiffMetadataItem52.getTiffField();
        java.lang.String str55 = tiffMetadataItem52.getText();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(tiffField54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.String str54 = tiffField51.getValueDescription();
        int[] intArray55 = tiffField51.getIntArrayValue();
        java.lang.String str56 = tiffField51.getFieldTypeName();
        java.lang.Object obj57 = fieldTypeRational0.getValue(tiffField51);
        java.lang.String str58 = tiffField51.getTagName();
        org.junit.Assert.assertNotNull(fieldTypeRational0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Unknown Tag (0x8003)" + "'", str58, "Unknown Tag (0x8003)");
    }

    @Test
    void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(0, 22, 32769, (float) 25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 22)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
    }

    @Test
    void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii(21, "Exif");
    }

    @Test
    void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData93 = tiffDirectory89.getJpegImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort94 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_THRESHHOLDING;
        // The following exception was thrown during execution in test generation
        try {
            short short95 = tiffDirectory89.getFieldValue(tagInfoShort94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"Threshholding\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(jpegImageData93);
        org.junit.Assert.assertNotNull(tagInfoShort94);
    }

    @Test
    void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(32909, "MBad Type: \n\n");
    }

    @Test
    void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffImageMetadata8.getAllFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles11 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        java.lang.Object obj12 = tiffImageMetadata8.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDoubles11);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = tiffImageMetadata8.findDirectory((-16759808));
        org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem imageMetadataItem15 = null;
        tiffImageMetadata8.add(imageMetadataItem15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", 65535, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): Bad Type: \n\n", 17, 6, tiffDirectoryType30);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = tiffImageMetadata8.getFieldValue(tagInfoLongs36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"type\" because \"directory\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoDoubles11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(tiffDirectory14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        java.awt.Color color2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 32, (float) 79, color2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte((-16759808), "Bad TypeUnknown Tag (0x8003): ");
        int int3 = fieldTypeByte2.getSize();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText79 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean80 = tagInfoGpsText79.isText();
        tiffOutputDirectory16.add(tagInfoGpsText79, "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType85);
        tiffOutputDirectory16.add(tagInfoSShort86, (short) (byte) 100);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoGpsText79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
    }

    @Test
    void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataFloat3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics((float) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(34661, (int) ' ', 32909);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (34661, 32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        tiffImagingParameters8.clearSubImage();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.setBufferedImageFactory(bufferedImageFactory10);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setCompression((java.lang.Integer) 80);
        int int14 = tiffImagingParameters8.getSubImageY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters8.setCompression((java.lang.Integer) 5);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
    }

    @Test
    void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXPOSURE_INDEX_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        java.lang.Object obj53 = tagInfoRational0.getValue(tiffField51);
        java.lang.String str54 = tiffField51.toString();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray55 = tiffField51.getDoubleArrayValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@3c9eeecc for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRational0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str54, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
    }

    @Test
    void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        tiffDirectory66.dump();
        boolean boolean77 = tiffDirectory66.hasTiffRasterData();
        java.nio.ByteOrder byteOrder78 = tiffDirectory66.getByteOrder();
        boolean boolean79 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType90 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType90);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte92 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType90);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational93 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType90);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("258 (0x102: BitsPerSample): ", 32895, 19, tiffDirectoryType90);
        short[] shortArray96 = tiffDirectory66.getFieldValue(tagInfoSShorts94, false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType90 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType90.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray96);
    }

    @Test
    void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int[] intArray9 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataInt2.getSimpleStatistics();
        float float11 = tiffRasterStatistics10.getMinValue();
        int int12 = tiffRasterStatistics10.getCountOfSamples();
        float float13 = tiffRasterStatistics10.getMeanValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.0f + "'", float11 == 0.0f);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
    }

    @Test
    void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("V", 32909, 32895, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("T", (int) (short) 10, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats17 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_TONE_CURVE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType34, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort29, 65536, tiffDirectoryType34, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort29, 65000, tiffDirectoryType48, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytes", 65000, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_22, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader68 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder69 = tiffReader68.getByteOrder();
        byte[] byteArray71 = tagInfoSLong66.encodeValue(byteOrder69, 1678379530);
        byte[] byteArray73 = tagInfoByte54.encodeValue(byteOrder69, (byte) 0);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt76 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType77 = tiffRasterDataInt76.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics78 = tiffRasterDataInt76.getSimpleStatistics();
        float[] floatArray79 = tiffRasterDataInt76.getData();
        byte[] byteArray80 = tagInfoFloats17.encodeValue(byteOrder69, floatArray79);
        byte[] byteArray82 = tagInfoFloat16.encodeValue(byteOrder69, (float) 71);
        int int83 = tagInfoFloat16.length;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoFloats17);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType48 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType48.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType77 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType77.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[66, -114, 0, 0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int[] intArray3 = tiffRasterDataInt2.getIntData();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        int int5 = tiffRasterDataInt2.getWidth();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 16 + "'", int5 == 16);
    }

    @Test
    void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        tiffImagingParameters8.clearSubImage();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.setBufferedImageFactory(bufferedImageFactory10);
        java.lang.Integer int12 = tiffImagingParameters8.getT6Options();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(29, 73, 34676);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (29, 73)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
    }

    @Test
    void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        int int87 = tiffDirectory70.length;
        long long88 = tiffDirectory70.offset;
        java.lang.String str89 = tiffDirectory70.description();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType94 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("Unknown Tag (0x8003)", (int) (short) -1, tiffDirectoryType94);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong96 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("32771 (0x8003: Unknown Tag): ", 42, tiffDirectoryType94);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = tiffDirectory70.getFieldValue(tagInfoSLong96);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"32771 (0x8003: Unknown Tag): \" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 6 + "'", int87 == 6);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 34712L + "'", long88 == 34712L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Bad Type" + "'", str89, "Bad Type");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType94 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType94.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        long long68 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        int int72 = tiffImagingParameters71.getSubImageY();
        int int73 = tiffImagingParameters71.getSubImageWidth();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.PixelDensity pixelDensity75 = tiffImagingParameters71.getPixelDensity();
        boolean boolean76 = tiffImagingParameters71.isStrict();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 9L + "'", long68 == 9L);
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(pixelDensity75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents7.tiffFields;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
    }

    @Test
    void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        int int55 = tiffField50.getDirectoryType();
        int int56 = tiffField50.getSortHint();
        java.lang.String str57 = tiffField50.toString();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9 + "'", int56 == 9);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
    }

    @Test
    void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = tiffImageParser0.getMetadata(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
    }

    @Test
    void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        int int85 = tiffDirectory66.type;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals86 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_FLASH_ENERGY;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray88 = tiffDirectory66.getFieldValue(tagInfoRationals86, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"FlashEnergy\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 88 + "'", int85 == 88);
        org.junit.Assert.assertNotNull(tagInfoRationals86);
    }

    @Test
    void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort6 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, abstractFieldTypeArray7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList8, tiffDirectoryType10);
        java.nio.ByteOrder byteOrder12 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray14 = tagInfoByte11.encodeValue(byteOrder12, (byte) 0);
        short[] shortArray15 = new short[] {};
        byte[] byteArray16 = tagInfoShortOrLongOrRational1.encodeValue(byteOrder12, shortArray15);
        byte[] byteArray18 = tagInfoShort0.encodeValue(byteOrder12, (short) (byte) -1);
        byte[] byteArray22 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray18, (int) (byte) 0, 19, true);
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational1);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1, 53, 0, 1]");
    }

    @Test
    void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImageParser0.getDefaultParameters();
        java.lang.String str6 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = tiffImageParser0.dumpImageFile(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tif" + "'", str6, "tif");
    }

    @Test
    void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        java.lang.String str1 = org.apache.commons.imaging.formats.tiff.TiffDirectory.description((int) '#');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Bad Type" + "'", str1, "Bad Type");
    }

    @Test
    void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.String str54 = tiffField51.getValueDescription();
        int[] intArray55 = tiffField51.getIntArrayValue();
        java.lang.String str56 = tiffField51.getFieldTypeName();
        java.lang.Object obj57 = fieldTypeRational0.getValue(tiffField51);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = tiffField51.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeRational0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        tiffOutputSet85.dump();
        java.lang.String str90 = tiffOutputSet85.toString();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType93 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType93);
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSRational94);
        java.lang.String str96 = tiffOutputSet85.toString();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str90, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType93 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType93.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str96, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
    }

    @Test
    void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("SByte", 5, 18, tiffDirectoryType9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort2 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort8 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, abstractFieldTypeArray9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, tiffDirectoryType12);
        java.nio.ByteOrder byteOrder14 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray16 = tagInfoByte13.encodeValue(byteOrder14, (byte) 0);
        short[] shortArray17 = new short[] {};
        byte[] byteArray18 = tagInfoShortOrLongOrRational3.encodeValue(byteOrder14, shortArray17);
        byte[] byteArray20 = tagInfoShort2.encodeValue(byteOrder14, (short) (byte) -1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data21 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 32844, 48, byteArray20);
        java.lang.Class<?> wildcardClass22 = byteArray20.getClass();
        org.junit.Assert.assertNotNull(tagInfoShort2);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational3);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem53 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = tiffField50.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
    }

    @Test
    void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = tiffImageParser0.getImageSize(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        int int7 = tiffImagingParameters6.getSubImageHeight();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        long[] longArray54 = tiffField50.getLongArrayValue();
        int int55 = tiffField50.getDirectoryType();
        int int56 = tiffField50.getOffset();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
    }

    @Test
    void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType10);
        java.nio.ByteOrder byteOrder14 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray16 = tagInfoSByte13.encodeValue(byteOrder14, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory17 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder14);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData18 = tiffOutputDirectory17.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory17.add(tagInfoByte19, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData22 = null;
        tiffOutputDirectory17.setJpegImageData(jpegImageData22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType26 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean27 = tiffDirectoryType26.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("A", (int) (byte) 1, tiffDirectoryType26);
        tiffOutputDirectory17.add(tagInfoSByte28, (byte) 1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder32 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray38 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray39 = tagInfoShortOrLong31.encodeValue(byteOrder32, intArray38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong40 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder41 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray47 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray48 = tagInfoShortOrLong40.encodeValue(byteOrder41, intArray47);
        tiffOutputDirectory17.add(tagInfoShortOrLong31, intArray47);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel54 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(12, intArray47, 25, 0, 32908, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData18);
        org.junit.Assert.assertNotNull(tagInfoByte19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
    }

    @Test
    void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType5);
        java.nio.ByteOrder byteOrder7 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_EMBED_POLICY;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts12 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        short[] shortArray27 = new short[] {};
        byte[] byteArray28 = tagInfoShortOrLongOrRational13.encodeValue(byteOrder24, shortArray27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational29 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        short[] shortArray43 = new short[] {};
        byte[] byteArray44 = tagInfoShortOrLongOrRational29.encodeValue(byteOrder40, shortArray43);
        byte[] byteArray45 = tagInfoShorts12.encodeValue(byteOrder24, shortArray43);
        byte[] byteArray47 = tagInfoShort11.encodeValue(byteOrder24, (short) (byte) 10);
        short[] shortArray49 = new short[] { (byte) 0 };
        byte[] byteArray50 = tagInfoShortOrRational10.encodeValue(byteOrder24, shortArray49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals51 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort52 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray75 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray70, 34713, (int) (byte) 0, false, (-65281));
        short short76 = tagInfoShort52.getValue(byteOrder63, byteArray75);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort81 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray82 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort81 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList83 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList83, abstractFieldTypeArray82);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList83, tiffDirectoryType85);
        java.nio.ByteOrder byteOrder87 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray89 = tagInfoByte86.encodeValue(byteOrder87, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray90 = tagInfoSRationals51.getValue(byteOrder63, byteArray89);
        byte[] byteArray91 = tagInfoSRationals9.encodeValue(byteOrder24, rationalNumberArray90);
        byte[] byteArray93 = tagInfoLong8.encodeValue(byteOrder24, 34676);
        float[] floatArray94 = tagInfoFloats6.getValue(byteOrder7, byteArray93);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data95 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 'a', 21, byteArray93);
        byte[] byteArray96 = data95.getData();
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(tagInfoLong8);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(tagInfoShorts12);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals51);
        org.junit.Assert.assertNotNull(tagInfoShort52);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short76 + "' != '" + (short) 4096 + "'", short76 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[116, -121, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[4.8591E-41]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[116, -121, 0, 0]");
    }

    @Test
    void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(0, "E");
    }

    @Test
    void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataFloat3.getValue(64, 34661, 34661);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (64, 34661)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int int9 = tiffRasterDataInt2.getWidth();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType10 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(32946, 1678379530, 64, 65000);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32946, 1678379530)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType10 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType10.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.imaging.internal.Debug.debug("32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        int int5 = tiffRasterDataFloat3.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat3.getSimpleStatistics((float) 23);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = tiffRasterDataFloat3.getIntValue(336, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (336, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 6 + "'", int5 == 6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        float[] floatArray3 = new float[] { 16 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat4 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(69, 22, floatArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[16.0]");
    }

    @Test
    void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(16, 32809, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (16, 32809)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("10 (0xa: hi!): ", (int) (short) 0, tiffDirectoryType2);
    }

    @Test
    void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = tiffImageParser0.getMetadata(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        java.lang.String str55 = tiffField50.getValueDescription();
        // The following exception was thrown during execution in test generation
        try {
            long long56 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType78, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType85);
        java.lang.Object obj88 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte87);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData89 = tiffDirectory66.getJpegImageData();
        boolean boolean90 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray91 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips93 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray91, 32844);
        int int94 = strips93.getImageDataLength();
        int int95 = strips93.rowsPerStrip;
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) strips93);
        int int97 = strips93.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray98 = strips93.getImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(jpegImageData89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(dataElementArray91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32844 + "'", int95 == 32844);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 32844 + "'", int97 == 32844);
        org.junit.Assert.assertNotNull(dataElementArray98);
    }

    @Test
    void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt4 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType5 = tiffRasterDataInt4.getDataType();
        float[] floatArray6 = tiffRasterDataInt4.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat7 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(34677, (-1), floatArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType5 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType5.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 65536, tiffDirectoryType11, true);
        int int16 = fieldTypeShort6.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Bad Type: \n\n", 258, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 1751720192);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("Bad Type", (-2), tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("VBad Type: \n\n", 30, 9, tiffDirectoryType12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        int int3 = strips2.getImageDataLength();
        int int4 = strips2.rowsPerStrip;
        int int5 = strips2.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray6 = strips2.getImageData();
        boolean boolean7 = strips2.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32844 + "'", int4 == 32844);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(dataElementArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        long[] longArray54 = tiffField50.getLongArrayValue();
        int int55 = tiffField50.getDirectoryType();
        java.lang.String str56 = tiffField50.getTagName();
        java.lang.String str57 = tiffField50.getDescriptionWithoutValue();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = tiffField50.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Unknown Tag (0x8003)" + "'", str56, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str57, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        float[] floatArray8 = tiffRasterDataFloat3.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(23, 20, 34712, 32769);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (23, 20)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(floatArray8);
    }

    @Test
    void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImageParser0.getDefaultParameters();
        java.lang.String str6 = tiffImageParser0.getDefaultExtension();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters8.setPixelDensity(pixelDensity9);
        java.lang.Integer int11 = tiffImagingParameters8.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet14 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters13.setOutputSet(tiffOutputSet14);
        java.lang.String str16 = tiffImagingParameters13.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory17 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters18 = tiffImagingParameters13.setBufferedImageFactory(bufferedImageFactory17);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory19 = tiffImagingParameters13.getBufferedImageFactory();
        int int20 = tiffImagingParameters13.getSubImageWidth();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters22 = tiffImagingParameters13.setT4Options((java.lang.Integer) 2);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters24 = tiffImagingParameters22.setStrict(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo25 = tiffImageParser0.getImageInfo(file7, tiffImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tif" + "'", str6, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters18);
        org.junit.Assert.assertNull(bufferedImageFactory19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters22);
        org.junit.Assert.assertNotNull(tiffImagingParameters24);
    }

    @Test
    void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        int int78 = tiffOutputField74.getSortHint();
        int int79 = tiffOutputField74.count;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
    }

    @Test
    void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        int int5 = tiffRasterDataFloat3.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat3.getSimpleStatistics((float) 23);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(79, (int) '#', (float) (-16751104));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (79, 35)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 6 + "'", int5 == 6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        java.nio.ByteOrder byteOrder8 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = tiffImageParser0.getAllBufferedImages(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int[] intArray3 = tiffRasterDataInt2.getIntData();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue((-16759808), 32898, 1751720192, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-16759808, 32898)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText88 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        java.lang.String str90 = tiffDirectory66.getFieldValue(tagInfoGpsText88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts91 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        short[] shortArray93 = tiffDirectory66.getFieldValue(tagInfoShorts91, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement94 = tiffDirectory66.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoGpsText88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(tagInfoShorts91);
        org.junit.Assert.assertNull(shortArray93);
    }

    @Test
    void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte((-16759808), "Bad TypeUnknown Tag (0x8003): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, tiffDirectoryType11);
        java.lang.String str15 = fieldTypeShort7.getName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong16 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless64 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray62);
        java.nio.ByteOrder byteOrder65 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField67 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_21, (long) 34676, (long) 7, byteArray62, byteOrder65, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType68 = tiffField67.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType69 = tiffField67.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement70 = tiffField67.getOversizeValueElement();
        int int71 = tiffField67.getOffset();
        int int72 = tiffField67.getDirectoryType();
        java.lang.Object obj73 = fieldTypeLong16.getValue(tiffField67);
        java.lang.Object obj74 = fieldTypeShort7.getValue(tiffField67);
        int int75 = tiffField67.getTag();
        java.lang.Object obj76 = fieldTypeByte2.getValue(tiffField67);
        java.lang.String str77 = tiffField67.getDescriptionWithoutValue();
        java.io.PrintWriter printWriter78 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField67.dump(printWriter78, "T");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(fieldTypeLong16);
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(abstractFieldType68);
        org.junit.Assert.assertNotNull(abstractFieldType69);
        org.junit.Assert.assertNotNull(abstractTiffElement70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 31 + "'", int72 == 31);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 32771 + "'", int75 == 32771);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str77, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = tiffRasterDataInt2.getIntValue((-2), (int) (byte) 1, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-2, 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        boolean boolean87 = tiffDirectory70.hasJpegImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong88 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ACTIVE_AREA;
        int[] intArray90 = tiffDirectory70.getFieldValue(tagInfoShortOrLong88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals91 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_WHITE_XY;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray93 = tiffDirectory70.getFieldValue(tagInfoRationals91, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns94 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray96 = tiffDirectory70.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUnknowns94, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"Annotations\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong88);
        org.junit.Assert.assertNull(intArray90);
        org.junit.Assert.assertNotNull(tagInfoRationals91);
        org.junit.Assert.assertNull(rationalNumberArray93);
        org.junit.Assert.assertNotNull(tagInfoUnknowns94);
    }

    @Test
    void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles24 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        double[] doubleArray25 = tiffImageMetadata8.getFieldValue(tagInfoDoubles24);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.GpsInfo gpsInfo26 = tiffImageMetadata8.getGpsInfo();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.GpsInfo gpsInfo27 = tiffImageMetadata8.getGpsInfo();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort32 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList34 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, abstractFieldTypeArray33);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, tiffDirectoryType36);
        byte[] byteArray38 = tiffImageMetadata8.getFieldValue(tagInfoByte37);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tagInfoDoubles24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(gpsInfo26);
        org.junit.Assert.assertNull(gpsInfo27);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(byteArray38);
    }

    @Test
    void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(73, 277408);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 34712);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 32845, (float) 30, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified values must be v0<v1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.convertYCbCrtoRGB((int) 'a', (int) (byte) 10, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-16714752) + "'", int3 == (-16714752));
    }

    @Test
    void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        int int23 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SHARPNESS_1;
        tiffOutputDirectory16.add(tagInfoShort24, (short) (byte) -1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ROW_INTERLEAVE_FACTOR;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts28 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_TIME_ZONE_OFFSET;
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser29 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters30 = tiffImageParser29.getDefaultParameters();
        java.nio.ByteOrder byteOrder31 = tiffImageParser29.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts32 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational33 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        short[] shortArray47 = new short[] {};
        byte[] byteArray48 = tagInfoShortOrLongOrRational33.encodeValue(byteOrder44, shortArray47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational49 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        short[] shortArray63 = new short[] {};
        byte[] byteArray64 = tagInfoShortOrLongOrRational49.encodeValue(byteOrder60, shortArray63);
        byte[] byteArray65 = tagInfoShorts32.encodeValue(byteOrder44, shortArray63);
        byte[] byteArray66 = tagInfoSShorts28.encodeValue(byteOrder31, shortArray63);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoShortOrLong27, shortArray63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 1 value(s), not 0");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong27);
        org.junit.Assert.assertNotNull(tagInfoSShorts28);
        org.junit.Assert.assertNotNull(tiffImagingParameters30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoShorts32);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational49);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
    }

    @Test
    void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.addInteroperabilityDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
    }

    @Test
    void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(11, 89, 23.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (11, 89)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        int int79 = tiffOutputField77.tag;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50717 + "'", int79 == 50717);
    }

    @Test
    void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("Tiff-Custom", 95, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("ImageColorIndicator", 73, 32773, tiffDirectoryType8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong0 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_XCLIP_PATH_UNITS;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader10 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder11 = tiffReader10.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy12 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        short[] shortArray52 = new short[] { (byte) 0 };
        byte[] byteArray53 = tagInfoShortOrRational13.encodeValue(byteOrder27, shortArray52);
        byte[] byteArray54 = tagInfoByteOrShort8.encodeValue(byteOrder11, shortArray52);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy55 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder11);
        byte[] byteArray57 = tagInfoLong0.encodeValue(byteOrder11, (-4));
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy58 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder11);
        java.awt.image.BufferedImage bufferedImage59 = null;
        java.io.OutputStream outputStream60 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters61 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity62 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters63 = tiffImagingParameters61.setPixelDensity(pixelDensity62);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters65 = tiffImagingParameters61.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory66 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters67 = tiffImagingParameters61.setBufferedImageFactory(bufferedImageFactory66);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = tiffImagingParameters67.setReadThumbnails(false);
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossy58.writeImage(bufferedImage59, outputStream60, tiffImagingParameters69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLong0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, -1, -1, -4]");
        org.junit.Assert.assertNotNull(tiffImagingParameters63);
        org.junit.Assert.assertNotNull(tiffImagingParameters65);
        org.junit.Assert.assertNotNull(tiffImagingParameters67);
        org.junit.Assert.assertNotNull(tiffImagingParameters69);
    }

    @Test
    void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("A", (int) (byte) 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("ImageDataElement", 2, 32771, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics((float) (-4));
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        int int7 = tiffRasterDataFloat3.getWidth();
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 16 + "'", int7 == 16);
    }

    @Test
    void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType11);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = tagInfoByteOrShort12.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        short[] shortArray38 = new short[] {};
        byte[] byteArray39 = tagInfoShortOrLongOrRational24.encodeValue(byteOrder35, shortArray38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        short[] shortArray54 = new short[] {};
        byte[] byteArray55 = tagInfoShortOrLongOrRational40.encodeValue(byteOrder51, shortArray54);
        byte[] byteArray56 = tagInfoShorts23.encodeValue(byteOrder35, shortArray54);
        byte[] byteArray58 = tagInfoShort22.encodeValue(byteOrder35, (short) (byte) 10);
        byte[] byteArray65 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int66 = tagInfoDirectory21.getValue(byteOrder35, byteArray65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort67 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        byte[] byteArray85 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray90 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray85, 34713, (int) (byte) 0, false, (-65281));
        short short91 = tagInfoShort67.getValue(byteOrder78, byteArray90);
        byte[] byteArray92 = tagInfoByteOrShort12.encodeValue(byteOrder35, byteArray90);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet93 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder35);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor94 = tiffOutputSet93.iterator();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters95 = tiffImagingParameters5.setOutputSet(tiffOutputSet93);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory96 = tiffOutputSet93.getOrCreateExifDirectory();
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList97 = tiffOutputDirectory96.getFields();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(tagInfoShorts23);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational40);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1678379530 + "'", int66 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort67);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short91 + "' != '" + (short) 4096 + "'", short91 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor94);
        org.junit.Assert.assertNotNull(tiffImagingParameters95);
        org.junit.Assert.assertNotNull(tiffOutputDirectory96);
        org.junit.Assert.assertNotNull(tiffOutputFieldList97);
    }

    @Test
    void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(32897, (int) (short) 4096, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32897, 4096)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort20, 5, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: 37, length: 12, last: 49", 65536, abstractFieldTypeList8, 80, tiffDirectoryType22, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("TIFF image data: 0 bytes", 25, 69, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Unknown Tag (0x8003): ", 15, abstractFieldTypeList8, 3, tiffDirectoryType32, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("TIFF image data: 0 bytesBad Type: \n\n", 258, 4, tiffDirectoryType40);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("10 (0xa: hi!): ", (-3), abstractFieldTypeList8, (int) '#', tiffDirectoryType40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType52, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("N", 6, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("N", 100, 79, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("10 (0xa: hi!): ", 32845, abstractFieldTypeList8, 277408, tiffDirectoryType52, true);
        boolean boolean59 = tagInfo58.isText();
        org.junit.Assert.assertNotNull(abstractFieldTypeList8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType40 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType40.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType52 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType52.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader3 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder4 = tiffReader3.getByteOrder();
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        byte[] byteArray10 = tagInfoLongs1.encodeValue(byteOrder4, intArray8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory12 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter13 = null;
        int[] intArray19 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration26 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader28 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder29 = tiffReader28.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles30 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled31 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory12, photometricInterpreter13, 10, (int) (byte) 10, (-65281), intArray19, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration26, byteOrder29, tiles30);
        byte[] byteArray33 = tagInfoShort11.encodeValue(byteOrder29, (short) 4096);
        int[] intArray38 = new int[] { (byte) 1, 14, 22 };
        int int39 = org.apache.commons.imaging.internal.SafeOperations.add(intArray38);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel44 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(37, intArray38, 0, 6, 13, false);
        byte[] byteArray45 = tagInfoLongs1.encodeValue(byteOrder29, intArray38);
        int[] intArray53 = new int[] { (byte) 1, 14, 22 };
        int int54 = org.apache.commons.imaging.internal.SafeOperations.add(intArray53);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(73, intArray53, 37, 64, 17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette59 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(8, intArray38, 0, 9, (-16751104), intArray53);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingFormatException; message: bitsPerPixel 1 (maxI = 5) is too large or colorMap is too small 3");
        } catch (org.apache.commons.imaging.ImagingFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongs1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[16, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 37 + "'", int39 == 37);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 37 + "'", int54 == 37);
    }

    @Test
    void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList74 = directory72.getAllFields();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(tiffFieldList74);
    }

    @Test
    void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.getFieldType(30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Field type 30 is unsupported");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
    }

    @Test
    void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("Unknown Tag (0x8003): ", 14, 255, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("", 22, 16, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("N", 10, 65535, tiffDirectoryType19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement((long) 71, 32771);
        java.lang.String str3 = imageDataElement2.getElementDescription();
        java.lang.String str4 = imageDataElement2.getElementDescription();
        java.lang.String str5 = imageDataElement2.getElementDescription();
        java.lang.String str6 = imageDataElement2.getElementDescription();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ImageDataElement" + "'", str3, "ImageDataElement");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ImageDataElement" + "'", str4, "ImageDataElement");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ImageDataElement" + "'", str5, "ImageDataElement");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ImageDataElement" + "'", str6, "ImageDataElement");
    }

    @Test
    void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.Object obj53 = tiffField50.getValue();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement54 = tiffField50.getOversizeValueElement();
        // The following exception was thrown during execution in test generation
        try {
            long long55 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(abstractTiffElement54);
    }

    @Test
    void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("SLong");
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter15 = null;
        int[] intArray21 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration28 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader30 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder31 = tiffReader30.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles32 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled33 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory14, photometricInterpreter15, 10, (int) (byte) 10, (-65281), intArray21, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration28, byteOrder31, tiles32);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray21, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray21, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel47 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray21, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters48 = tiffImagingParameters5.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel47);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters50 = tiffImagingParameters5.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters52 = tiffImagingParameters50.setStrict(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = tiffImageParser0.getXmpXml(byteSource4, (org.apache.commons.imaging.common.XmpImagingParameters<org.apache.commons.imaging.formats.tiff.TiffImagingParameters>) tiffImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tiffImagingParameters48);
        org.junit.Assert.assertNotNull(tiffImagingParameters50);
        org.junit.Assert.assertNotNull(tiffImagingParameters52);
    }

    @Test
    void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        tiffRasterDataFloat3.setValue(3, 5, (float) 12);
        float[] floatArray9 = tiffRasterDataFloat3.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(4, 32896, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (4, 32896)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray9);
    }

    @Test
    void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList4 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList4, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean16 = tiffDirectoryType15.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n", 19, abstractFieldTypeList4, tiffDirectoryType15);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = tagInfoByte17.dataTypes;
        org.junit.Assert.assertNotNull(abstractFieldTypeList4);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(abstractFieldTypeList18);
    }

    @Test
    void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = tiffImageParser0.getFormatCompliance(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_FREE_OFFSETS;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray70 = tiffDirectory66.getFieldValue(tagInfoLongs68, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"FreeOffsets\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
    }

    @Test
    void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setOutputSet(tiffOutputSet11);
        java.lang.Integer int13 = tiffImagingParameters12.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters12.setReadThumbnails(false);
        java.lang.Integer int16 = tiffImagingParameters15.getCompression();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory17 = tiffImagingParameters15.getBufferedImageFactory();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray18 = tiffImageParser0.getIccProfileBytes(byteSource4, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bufferedImageFactory17);
    }

    @Test
    void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters0.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setLzwCompressionBlockSize((java.lang.Integer) (-65281));
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
    }

    @Test
    void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        boolean boolean87 = tiffDirectory70.hasJpegImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong88 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ACTIVE_AREA;
        int[] intArray90 = tiffDirectory70.getFieldValue(tagInfoShortOrLong88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals91 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_WHITE_XY;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray93 = tiffDirectory70.getFieldValue(tagInfoRationals91, false);
        boolean boolean94 = tiffDirectory70.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational95 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXPOSURE_COMPENSATION;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber96 = tiffDirectory70.getFieldValue(tagInfoSRational95);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"ExposureCompensation\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong88);
        org.junit.Assert.assertNull(intArray90);
        org.junit.Assert.assertNotNull(tagInfoRationals91);
        org.junit.Assert.assertNull(rationalNumberArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(tagInfoSRational95);
    }

    @Test
    void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        float[] floatArray6 = tiffRasterDataInt2.getData();
        int int7 = tiffRasterDataInt2.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataInt2.getValue((int) (short) 16, (-4), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (16, -4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt3.getSimpleStatistics();
        float[] floatArray6 = tiffRasterDataInt3.getData();
        int int7 = tiffRasterDataInt3.getSamplesPerPixel();
        int[] intArray8 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(73, intArray8, (int) (short) 1, 100, (int) (byte) 0);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder13 = null;
        int[] intArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr12.interpretPixel(imageBuilder13, intArray14, 9006, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from int array because \"samples\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational5 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII_OR_RATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("S", (-65536), abstractFieldTypeList8, 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("W", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational5, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("Float", 65000, 32773, tiffDirectoryType16);
        org.junit.Assert.assertNotNull(fieldTypeRational5);
        org.junit.Assert.assertNotNull(abstractFieldTypeList8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        java.lang.Integer int6 = tiffImagingParameters5.getCompression();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setT6Options((java.lang.Integer) 25);
        int[] intArray13 = new int[] { (byte) 1, 14, 22 };
        int int14 = org.apache.commons.imaging.internal.SafeOperations.add(intArray13);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb18 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(0, intArray13, 1678379530, 5, 29);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters5.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb18);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 37 + "'", int14 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
    }

    @Test
    void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii2 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MAKE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((-1), "W");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("M", (int) (byte) -1, (int) (short) 100, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("N", 64, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, (int) '#', tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory20 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter21 = null;
        int[] intArray27 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration34 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader36 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder37 = tiffReader36.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles38 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled39 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory20, photometricInterpreter21, 10, (int) (byte) 10, (-65281), intArray27, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration34, byteOrder37, tiles38);
        byte[] byteArray41 = tagInfoShort19.encodeValue(byteOrder37, (short) 4096);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField42 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii2, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, 50717, byteArray41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("VBad Type: \n\nBad Type: \n\n", (-2), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, 32769);
        org.junit.Assert.assertNotNull(tagInfoAscii2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShort19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[16, 0]");
    }

    @Test
    void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MODEL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType1 = tagInfoAscii0.directoryType;
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType1 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType1.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        tiffImagingParameters8.clearSubImage();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.setBufferedImageFactory(bufferedImageFactory10);
        int int12 = tiffImagingParameters11.getSubImageY();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap dataParserBitmap0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap();
        int int1 = dataParserBitmap0.getBasicChannelsCount();
        int[] intArray5 = new int[] { 32, 69, 32845 };
        int[] intArray9 = new int[] { 32, 69, 32845 };
        int[][] intArray10 = new int[][] { intArray5, intArray9 };
        int[] intArray14 = new int[] { 32, 69, 32845 };
        int[] intArray18 = new int[] { 32, 69, 32845 };
        int[][] intArray19 = new int[][] { intArray14, intArray18 };
        int[] intArray23 = new int[] { 32, 69, 32845 };
        int[] intArray27 = new int[] { 32, 69, 32845 };
        int[][] intArray28 = new int[][] { intArray23, intArray27 };
        int[] intArray32 = new int[] { 32, 69, 32845 };
        int[] intArray36 = new int[] { 32, 69, 32845 };
        int[][] intArray37 = new int[][] { intArray32, intArray36 };
        int[][][] intArray38 = new int[][][] { intArray10, intArray19, intArray28, intArray37 };
        java.awt.image.BufferedImage bufferedImage39 = null;
        org.apache.commons.imaging.formats.psd.PsdImageContents psdImageContents40 = null;
        // The following exception was thrown during execution in test generation
        try {
            dataParserBitmap0.parseData(intArray38, bufferedImage39, psdImageContents40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getRaster()\" because \"bi\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[32, 69, 32845]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
    }

    @Test
    void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList4 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort16, 5, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: 37, length: 12, last: 49", 65536, abstractFieldTypeList4, 80, tiffDirectoryType18, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("TIFF image data: 0 bytes", 25, 69, tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Unknown Tag (0x8003): ", 15, abstractFieldTypeList4, 3, tiffDirectoryType28, false);
        java.lang.String str32 = tagInfo31.getDescription();
        org.junit.Assert.assertNotNull(abstractFieldTypeList4);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "15 (0xf: Unknown Tag (0x8003): ): " + "'", str32, "15 (0xf: Unknown Tag (0x8003): ): ");
    }

    @Test
    void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        java.lang.String str80 = tiffOutputField77.toString("N");
        byte[] byteArray81 = tiffOutputField77.getData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
    }

    @Test
    void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_ALPHA_DATA_DISCARD;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField19 = tiffOutputDirectory16.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 48, (int) (short) 0, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoSByte36.encodeValue(byteOrder37, (byte) 0);
        tiffOutputDirectory16.add(tagInfoSBytes24, byteArray39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational41 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals42 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort43 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort48 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList50 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, abstractFieldTypeArray49);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, tiffDirectoryType52);
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray56 = tagInfoByte53.encodeValue(byteOrder54, (byte) 0);
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray66 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray61, 34713, (int) (byte) 0, false, (-65281));
        short short67 = tagInfoShort43.getValue(byteOrder54, byteArray66);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray81 = tagInfoSRationals42.getValue(byteOrder54, byteArray80);
        tiffOutputDirectory16.add(tagInfoShortOrRational41, rationalNumberArray81);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType33 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType33.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrRational41);
        org.junit.Assert.assertNotNull(tagInfoSRationals42);
        org.junit.Assert.assertNotNull(tagInfoShort43);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short67 + "' != '" + (short) 4096 + "'", short67 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray81);
    }

    @Test
    void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder2 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setOutputSet(tiffOutputSet11);
        java.lang.String str13 = tiffImagingParameters10.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory14 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters10.setBufferedImageFactory(bufferedImageFactory14);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory16 = tiffImagingParameters10.getBufferedImageFactory();
        int int17 = tiffImagingParameters10.getSubImageWidth();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters10.setT4Options((java.lang.Integer) 2);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage20 = tiffImageParser0.getBufferedImage(file4, tiffImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNull(bufferedImageFactory16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
    }

    @Test
    void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        boolean boolean88 = tiffOutputSet85.isEmpty();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips4 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 0);
        int int5 = strips4.getImageDataLength();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement dataElement7 = strips4.getImageData(17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 17 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        java.lang.String str8 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setBufferedImageFactory(bufferedImageFactory9);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory11 = tiffImagingParameters5.getBufferedImageFactory();
        boolean boolean12 = tiffImagingParameters5.isStrict();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNull(bufferedImageFactory11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.lang.String str5 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = tiffImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Tiff-Custom" + "'", str5, "Tiff-Custom");
    }

    @Test
    void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.lang.String str5 = tiffImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        int int10 = tiffImagingParameters9.getSubImageY();
        java.lang.String str11 = tiffImagingParameters9.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter12 = tiffImagingParameters9.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setLzwCompressionBlockSize((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = tiffImageParser0.getIccProfileBytes(file6, tiffImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Tiff-Custom" + "'", str5, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(photometricInterpreter12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
    }

    @Test
    void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(88, 0, (-16751104));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (88, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType12, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort8, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("M", 7, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("A", 65000, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory18 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter19 = null;
        int[] intArray25 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration32 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader34 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder35 = tiffReader34.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles36 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled37 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory18, photometricInterpreter19, 10, (int) (byte) 10, (-65281), intArray25, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration32, byteOrder35, tiles36);
        byte[] byteArray39 = tagInfoSLong17.encodeValue(byteOrder35, 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 0, 0]");
    }

    @Test
    void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        java.lang.String str80 = tiffOutputField74.toString();
        tiffOutputField74.setSortHint(0);
        int int83 = tiffOutputField74.count;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo84 = tiffOutputField74.tagInfo;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 32769 + "'", int83 == 32769);
        org.junit.Assert.assertNotNull(tagInfo84);
    }

    @Test
    void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        int int5 = tiffRasterDataInt2.getHeight();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(69, (-2), (float) (-65536));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (69, -2)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.limit(34713, 93, 32898);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32898 + "'", int3 == 32898);
    }

    @Test
    void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int[] intArray55 = tiffField51.getIntArrayValue();
        tiffField51.dump();
        int int57 = tiffField51.getOffset();
        java.lang.Object obj58 = tiffField51.getValue();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataInt2.getSimpleStatistics((float) 0L);
        // The following exception was thrown during execution in test generation
        try {
            float float14 = tiffRasterDataInt2.getValue((-5), (-16751104), 30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-5, -16751104)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.findDirectory(32908);
        tiffOutputSet85.dump();
        boolean boolean92 = tiffOutputSet85.isEmpty();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        java.lang.String str93 = directory91.toString("Element, offset: 37, length: 12, last: 49");
        int int94 = directory91.type;
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Element, offset: 37, length: 12, last: 49Bad Type: \n\n" + "'", str93, "Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 88 + "'", int94 == 88);
    }

    @Test
    void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        java.lang.String str90 = tiffOutputSet85.toString();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory92 = tiffOutputSet85.findDirectory(21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str90, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        org.junit.Assert.assertNull(tiffOutputDirectory92);
    }

    @Test
    void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("ImageColorIndicator", 65000, 10, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("", (int) '4', 34661, tiffDirectoryType14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", 65535, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): Bad Type: \n\n", 17, 6, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("TTiffOutputSet {\r\nTbyteOrder: LITTLE_ENDIAN\r\nT\tdirectory 0: Gps (-3)\r\nT}\r\n", (int) (short) 100, 50725, tiffDirectoryType16);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray5 = photometricInterpreterFloat4.getMinXY();
        float float6 = photometricInterpreterFloat4.getMeanFound();
        float float7 = photometricInterpreterFloat4.getMaxFound();
        int[] intArray8 = photometricInterpreterFloat4.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray8, 25, 69, 65536, true);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat20 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics21 = tiffRasterDataFloat20.getSimpleStatistics();
        int[] intArray22 = tiffRasterDataFloat20.getIntData();
        int[] intArray23 = tiffRasterDataFloat20.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette photometricInterpreterPalette24 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette(32947, intArray8, (int) '#', (int) (byte) 0, 19, intArray23);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader29 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder30 = tiffReader29.getByteOrder();
        int[] intArray34 = new int[] { (byte) 1, 14, 22 };
        int int35 = org.apache.commons.imaging.internal.SafeOperations.add(intArray34);
        byte[] byteArray36 = tagInfoLongs27.encodeValue(byteOrder30, intArray34);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab40 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab((int) (byte) 0, intArray34, 16, (int) (byte) 1, 29);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterPalette24.interpretPixel(imageBuilder25, intArray34, 32, 32946);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + Float.NEGATIVE_INFINITY + "'", float7 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(tagInfoLongs27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 37 + "'", int35 == 37);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
    }

    @Test
    void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("Bad Type: \n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: Bad Type: ??");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("A");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        int int75 = fieldTypeRational1.getSize();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 8 + "'", int75 == 8);
    }

    @Test
    void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        int int6 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray7 = tiles5.tiles;
        int int8 = tiles5.getTileHeight();
        boolean boolean9 = tiles5.stripsNotTiles();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray10 = tiles5.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips12 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray10, (int) (short) 1);
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(dataElementArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8 == 14);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(dataElementArray10);
    }

    @Test
    void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText60 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        tiffOutputDirectory16.add(tagInfoGpsText60, "K");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort63 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_OPIPROXY;
        tiffOutputDirectory16.add(tagInfoShort63, (short) 4096);
        int int66 = tiffOutputDirectory16.getItemLength();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor67 = tiffOutputDirectory16.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoGpsText60);
        org.junit.Assert.assertNotNull(tagInfoShort63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 42 + "'", int66 == 42);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor67);
    }

    @Test
    void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder58 = tiffHeader56.byteOrder;
        long long59 = tiffHeader56.offsetToFirstIFD;
        long long60 = tiffHeader56.offsetToFirstIFD;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 64L + "'", long59 == 64L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 64L + "'", long60 == 64L);
    }

    @Test
    void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        int int5 = tiffRasterDataFloat3.getHeight();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(14, 8, 50717, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (14, 8)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 6 + "'", int5 == 6);
    }

    @Test
    void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray4 = photometricInterpreterFloat3.getMinXY();
        float float5 = photometricInterpreterFloat3.getMeanFound();
        float float6 = photometricInterpreterFloat3.getMaxFound();
        int[] intArray7 = photometricInterpreterFloat3.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray7, 25, 69, 65536, true);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder13 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt16 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int[] intArray17 = tiffRasterDataInt16.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterBiLevel12.interpretPixel(imageBuilder13, intArray17, 52, 24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + Float.NEGATIVE_INFINITY + "'", float6 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 79);
        int int5 = tiffRasterStatistics4.getCountOfNulls();
        float float6 = tiffRasterStatistics4.getMinValue();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
    }

    @Test
    void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        tiffOutputSet85.dump();
        java.lang.String str90 = tiffOutputSet85.toString();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType93 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType93);
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSRational94);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField97 = tiffOutputSet85.findField((-1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str90, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType93 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType93.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffOutputField97);
    }

    @Test
    void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_ALPHA_DATA_DISCARD;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField27 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte25, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText28 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_USER_COMMENT;
        java.lang.String str29 = tiffImageMetadata8.getFieldValue(tagInfoGpsText28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet30 = tiffImageMetadata8.getOutputSet();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"byteOrder\" because \"this.contents.header\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNotNull(tagInfoByte25);
        org.junit.Assert.assertNull(tiffField27);
        org.junit.Assert.assertNotNull(tagInfoGpsText28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat5 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray6 = photometricInterpreterFloat5.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt7 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt((int) (short) -1, (-16751104), 65535, intArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
    }

    @Test
    void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.apache.commons.imaging.internal.Debug.debug("TTiffOutputSet {\r\nTbyteOrder: LITTLE_ENDIAN\r\nT\tdirectory 0: Gps (-3)\r\nT}\r\n");
    }

    @Test
    void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        int int6 = tiffImagingParameters5.getSubImageWidth();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setPixelDensity(pixelDensity7);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory9 = tiffImagingParameters8.getBufferedImageFactory();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(bufferedImageFactory9);
    }

    @Test
    void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int int9 = tiffRasterDataInt2.getWidth();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType10 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            float float14 = tiffRasterDataInt2.getValue(32896, 32897, 42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32896, 32897)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType10 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType10.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        long long68 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs69 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_LOOK_TABLE_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLongs69);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType77 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray81 = tiffDirectory66.getFieldValue(tagInfoRationals79, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"ImageColorIndicator\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 9L + "'", long68 == 9L);
        org.junit.Assert.assertNotNull(tagInfoLongs69);
        org.junit.Assert.assertNull(tiffField70);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType77 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType77.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_CELL_WIDTH;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        java.lang.String str53 = tiffField51.getDescriptionWithoutValue();
        java.lang.String str54 = tiffField51.getFieldTypeName();
        java.lang.Object obj55 = tagInfoShort0.getValue(tiffField51);
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str53, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        tiffRasterDataFloat3.setValue(3, 5, (float) 12);
        // The following exception was thrown during execution in test generation
        try {
            float float12 = tiffRasterDataFloat3.getValue((int) '#', (-3), 32895);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (35, -3)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals2 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray28 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray23, 34713, (int) (byte) 0, false, (-65281));
        short short29 = tagInfoShort5.getValue(byteOrder16, byteArray28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray43 = tagInfoSRationals4.getValue(byteOrder16, byteArray42);
        byte[] byteArray44 = tagInfoRationals2.encodeValue(byteOrder3, rationalNumberArray43);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData45 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 32769, 32895, byteArray44);
        org.junit.Assert.assertNotNull(tagInfoRationals2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tagInfoSRationals4);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short29 + "' != '" + (short) 4096 + "'", short29 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
    }

    @Test
    void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk dataParserCmyk0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserCmyk();
        int int1 = dataParserCmyk0.getBasicChannelsCount();
        int int2 = dataParserCmyk0.getBasicChannelsCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
    }

    @Test
    void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte((int) (byte) 0, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffImageMetadata8.getAllFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles11 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        java.lang.Object obj12 = tiffImageMetadata8.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDoubles11);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = tiffImageMetadata8.findDirectory(5);
        java.lang.String str15 = tiffImageMetadata8.toString();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoDoubles11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(tiffDirectory14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str55 = tiffMetadataItem54.getText();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data47 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray46);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data48 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray46);
        byte[] byteArray49 = data48.getData();
        byte[] byteArray50 = data48.getData();
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
    }

    @Test
    void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort44, 5, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("S", 32946, 34712, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("ImageLayer", (int) ' ', (int) (byte) -1, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("TIFF image data: 0 bytes", 0, 10, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = tiffContents24.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoFloats52);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffField53);
    }

    @Test
    void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("S", 34661, (int) ' ', tiffDirectoryType11);
        boolean boolean16 = tagInfoSBytes15.isText();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("", 11, 1, tiffDirectoryType3);
    }

    @Test
    void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem52 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        int int53 = tiffField50.getOffset();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement56 = tiffField50.new OversizeValueElement(32773, 7);
        java.lang.String str57 = oversizeValueElement56.getElementDescription();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "OversizeValueElement, tag: Unknown Tag, fieldType: hi!" + "'", str57, "OversizeValueElement, tag: Unknown Tag, fieldType: hi!");
    }

    @Test
    void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("TIFF image data: 0 bytes", 4, 95, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("K", 32845, (-3), tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nTiffOutputSet {\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nbyteOrder: LITTLE_ENDIAN\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 0: Exif (-2)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 1: Root (0)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n}\r\n", 32896, (-16751104), tiffDirectoryType15, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort23 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort28 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, abstractFieldTypeArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoByte33.encodeValue(byteOrder34, (byte) 0);
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray46 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray41, 34713, (int) (byte) 0, false, (-65281));
        short short47 = tagInfoShort23.getValue(byteOrder34, byteArray46);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray61 = tagInfoSRationals22.getValue(byteOrder34, byteArray60);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt64 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int65 = tiffRasterDataInt64.getHeight();
        int[] intArray66 = tiffRasterDataInt64.getIntData();
        byte[] byteArray67 = tagInfoLongOrIfd21.encodeValue(byteOrder34, intArray66);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoSRationals22);
        org.junit.Assert.assertNotNull(tagInfoShort23);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short47 + "' != '" + (short) 4096 + "'", short47 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataFloat3.getSimpleStatistics((float) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(65, 0, (float) 65535);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (65, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_ICCPROFILE;
        tiffOutputDirectory16.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor29 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong30 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_JPG_FROM_RAW_LENGTH_SUB_IFD2;
        tiffOutputDirectory16.add(tagInfoLong30, 32766);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort43, 6, tiffDirectoryType48, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType48);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray59 = photometricInterpreterFloat58.getMinXY();
        float float60 = photometricInterpreterFloat58.getMeanFound();
        float float61 = photometricInterpreterFloat58.getMaxFound();
        int[] intArray62 = photometricInterpreterFloat58.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel67 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray62, 25, 69, 65536, true);
        byte[] byteArray68 = tagInfoSLongs53.encodeValue(byteOrder54, intArray62);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat71 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 7, 79.0f);
        float float72 = photometricInterpreterFloat71.getMinFound();
        int[] intArray73 = photometricInterpreterFloat71.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoSLongs53, intArray73);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 48 value(s), not 2");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor29);
        org.junit.Assert.assertNotNull(tagInfoLong30);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType48 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType48.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float60 + "' != '" + 0.0f + "'", float60 == 0.0f);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + Float.NEGATIVE_INFINITY + "'", float61 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + Float.POSITIVE_INFINITY + "'", float72 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", 95, 34661, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("PreviewImageLength", 0, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean26 = tiffDirectoryType25.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("A", (int) (byte) 1, tiffDirectoryType25);
        tiffOutputDirectory16.add(tagInfoSByte27, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField30 = null;
        tiffOutputDirectory16.add(tiffOutputField30);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType25 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType25.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList75 = tiffDirectory66.getDirectoryEntries();
        java.nio.ByteOrder byteOrder76 = tiffDirectory66.getByteOrder();
        int int77 = tiffDirectory66.size();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters78 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity79 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters80 = tiffImagingParameters78.setPixelDensity(pixelDensity79);
        java.lang.Integer int81 = tiffImagingParameters78.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters83 = tiffImagingParameters78.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity84 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters85 = tiffImagingParameters78.setPixelDensity(pixelDensity84);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter86 = tiffImagingParameters85.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.PixelDensity pixelDensity87 = tiffImagingParameters85.getPixelDensity();
        org.apache.commons.imaging.PixelDensity pixelDensity88 = tiffImagingParameters85.getPixelDensity();
        java.awt.image.BufferedImage bufferedImage89 = tiffDirectory66.getTiffImage(tiffImagingParameters85);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNotNull(tiffFieldList75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(tiffImagingParameters83);
        org.junit.Assert.assertNotNull(tiffImagingParameters85);
        org.junit.Assert.assertNull(photometricInterpreter86);
        org.junit.Assert.assertNull(pixelDensity87);
        org.junit.Assert.assertNull(pixelDensity88);
        org.junit.Assert.assertNull(bufferedImage89);
    }

    @Test
    void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort20, 5, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("S", 32946, 34712, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("ImageLayer", (int) ' ', (int) (byte) -1, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 32896, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("TIFF image data: 0 bytesBad Type: \n\n", 277408, tiffDirectoryType22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65536, tiffDirectoryType16, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65000, tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytes", 65000, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader50 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder51 = tiffReader50.getByteOrder();
        byte[] byteArray53 = tagInfoSLong48.encodeValue(byteOrder51, 1678379530);
        byte[] byteArray55 = tagInfoByte36.encodeValue(byteOrder51, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless56 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray55);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray60 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_1D(byteArray55, 34661, 42, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
    }

    @Test
    void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        int[] intArray6 = new int[] { (byte) 1, 14, 22 };
        int int7 = org.apache.commons.imaging.internal.SafeOperations.add(intArray6);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(37, intArray6, 0, 6, 13, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt13 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(0, 6, intArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 37 + "'", int7 == 37);
    }

    @Test
    void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab24 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab((int) (short) 1, intArray8, 32769, 3, (int) (byte) 10);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder25 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat28 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray29 = photometricInterpreterFloat28.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterCieLab24.interpretPixel(imageBuilder25, intArray29, 0, 32845);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
    }

    @Test
    void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        java.lang.String str87 = tiffOutputSet85.toString();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getGpsDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str87, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        org.junit.Assert.assertNull(tiffOutputDirectory88);
    }

    @Test
    void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("Unknown Tag (0x8003): ", 14, 255, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n}\r\n", (int) (byte) 1, (int) (short) 1, tiffDirectoryType16);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        tiffImagingParameters10.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters10.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity14 = tiffImagingParameters10.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters10.setXmpXml("V");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<byte[]> byteArrayList17 = tiffImageParser0.collectRawImageData(byteSource4, tiffImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNull(pixelDensity14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
    }

    @Test
    void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong2 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray9 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray10 = tagInfoShortOrLong2.encodeValue(byteOrder3, intArray9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = null;
        float[] floatArray24 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray25 = tagInfoFloats19.encodeValue(byteOrder20, floatArray24);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField26 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong2, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat13, 32844, byteArray25);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data27 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 255, 6, byteArray25);
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressModifiedHuffman(byteArray25, (int) (short) 10, 0);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
    }

    @Test
    void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(71, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n}\r\n");
    }

    @Test
    void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips7 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) '4');
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray8 = strips7.getImageData();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertNotNull(dataElementArray8);
    }

    @Test
    void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt5 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt5.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt5.getSimpleStatistics();
        float[] floatArray8 = tiffRasterDataInt5.getData();
        float[] floatArray9 = tiffRasterDataInt5.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics11 = tiffRasterDataInt5.getSimpleStatistics((float) (-2));
        float[] floatArray12 = tiffRasterDataInt5.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat13 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(255, 48, 65535, floatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics11);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.limit(71, 18, 6);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 6 + "'", int3 == 6);
    }

    @Test
    void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65536, tiffDirectoryType16, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65000, tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF image data: 0 bytes", 65000, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader51 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder52 = tiffReader51.getByteOrder();
        byte[] byteArray54 = tagInfoSLong49.encodeValue(byteOrder52, 1678379530);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory55 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory((int) 'a', byteOrder52);
        byte[] byteArray57 = tagInfoByte36.encodeValue(byteOrder52, (byte) 1);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1]");
    }

    @Test
    void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        java.lang.Integer int6 = tiffImagingParameters5.getCompression();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setLzwCompressionBlockSize((java.lang.Integer) 65535);
        java.lang.Integer int9 = tiffImagingParameters8.getT4Options();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(32909, 32771, (-16759808), 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32909, 32771)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = tiffImageParser0.getIccProfileBytes(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange(23.0f, (float) 73, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType80 = tiffOutputField74.abstractFieldType;
        byte[] byteArray81 = tiffOutputField74.getData();
        int int82 = tiffOutputField74.tag;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertNotNull(abstractFieldType80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 258 + "'", int82 == 258);
    }

    @Test
    void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat5 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray6 = photometricInterpreterFloat5.getMinXY();
        float float7 = photometricInterpreterFloat5.getMeanFound();
        int int9 = photometricInterpreterFloat5.mapValueToArgb((float) 88);
        int[] intArray10 = photometricInterpreterFloat5.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt11 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(0, 65, (int) (short) 100, intArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7 == 0.0f);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
    }

    @Test
    void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        boolean boolean8 = tiffImagingParameters7.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setXmpXml("A");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters7.setSubImage(4, 64, 32895, 34712);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory17 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter18 = null;
        int[] intArray24 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration31 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader33 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder34 = tiffReader33.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles35 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled36 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory17, photometricInterpreter18, 10, (int) (byte) 10, (-65281), intArray24, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration31, byteOrder34, tiles35);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb40 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray24, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters41 = tiffImagingParameters7.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb40);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration31 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration31.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(tiffImagingParameters41);
    }

    @Test
    void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        boolean boolean80 = tiffDirectory66.hasJpegImageData();
        int int81 = tiffDirectory66.type;
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 88 + "'", int81 == 88);
    }

    @Test
    void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.lang.String str5 = tiffImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        int int10 = tiffImagingParameters9.getSubImageY();
        java.lang.String str11 = tiffImagingParameters9.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters9.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setT6Options((java.lang.Integer) 35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo17 = tiffImageParser0.getImageInfo(file6, tiffImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Tiff-Custom" + "'", str5, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
    }

    @Test
    void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_NOISE_PROFILE;
        int int1 = tagInfoDoubles0.tag;
        org.junit.Assert.assertNotNull(tagInfoDoubles0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 51041 + "'", int1 == 51041);
    }

    @Test
    void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int int9 = tiffRasterDataInt2.getHeight();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance6 = tiffImageParser0.getFormatCompliance(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
    }

    @Test
    void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue((int) 'a', 64, (float) 255);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (97, 64)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(89, "Unknown Tag (0x8003): ");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: -1, length: 97, last: 96", 14, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeDouble4, 12);
    }

    @Test
    void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("32771 (0x8003: Unknown Tag):  (34676 hi!)");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("JPEG image data: 1 bytes");
        java.nio.ByteOrder byteOrder8 = tiffImageParser0.getByteOrder();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setPixelDensity(pixelDensity11);
        int int13 = tiffImagingParameters12.getSubImageY();
        java.lang.String str14 = tiffImagingParameters12.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter15 = tiffImagingParameters12.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters12.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters17.setT4Options((java.lang.Integer) 30);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters21 = tiffImagingParameters19.setReadThumbnails(false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters23 = tiffImagingParameters19.setReadThumbnails(true);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray24 = tiffImageParser0.getIccProfileBytes(file9, tiffImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(photometricInterpreter15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
        org.junit.Assert.assertNotNull(tiffImagingParameters21);
        org.junit.Assert.assertNotNull(tiffImagingParameters23);
    }

    @Test
    void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        java.nio.ByteOrder byteOrder8 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = tiffImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        java.nio.ByteOrder byteOrder6 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts7 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        short[] shortArray22 = new short[] {};
        byte[] byteArray23 = tagInfoShortOrLongOrRational8.encodeValue(byteOrder19, shortArray22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        short[] shortArray38 = new short[] {};
        byte[] byteArray39 = tagInfoShortOrLongOrRational24.encodeValue(byteOrder35, shortArray38);
        byte[] byteArray40 = tagInfoShorts7.encodeValue(byteOrder19, shortArray38);
        byte[] byteArray41 = tagInfoByteOrShort4.encodeValue(byteOrder6, shortArray38);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless42 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray41);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertNotNull(tagInfoShorts7);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
    }

    @Test
    void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader92 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder59, 23, (long) 64, true);
        long long93 = tiffHeader92.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder94 = tiffHeader92.byteOrder;
        byte[] byteArray96 = tagInfoFloat33.encodeValue(byteOrder94, (float) (-16759808));
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray99 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressModifiedHuffman(byteArray96, 32769, 65535);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to compress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 64L + "'", long93 == 64L);
        org.junit.Assert.assertNotNull(byteOrder94);
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[0, -68, 127, -53]");
    }

    @Test
    void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        int[] intArray5 = new int[] { (byte) 1, 14, 22 };
        int int6 = org.apache.commons.imaging.internal.SafeOperations.add(intArray5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel11 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(37, intArray5, 0, 6, 13, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr15 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(2, intArray5, 29, 32845, (int) '4');
        org.apache.commons.imaging.common.ImageBuilder imageBuilder16 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt19 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(12, 15);
        int[] intArray20 = tiffRasterDataInt19.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr15.interpretPixel(imageBuilder16, intArray20, 14, 80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 37 + "'", int6 == 37);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        tiffImageMetadata8.add("TIFF image data: 0 bytes", "");
        tiffImageMetadata8.add("S", "TIFF image data: 0 bytes");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray47 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray42, 34713, (int) (byte) 0, false, (-65281));
        short short48 = tagInfoShort24.getValue(byteOrder35, byteArray47);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray62 = tagInfoSRationals23.getValue(byteOrder35, byteArray61);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless63 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray61);
        java.nio.ByteOrder byteOrder64 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField66 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_20, (long) 34676, (long) 7, byteArray61, byteOrder64, 9);
        long[] longArray67 = tiffField66.getLongArrayValue();
        long long68 = tiffField66.getCount();
        java.lang.String str69 = tiffField66.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem70 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField66);
        java.lang.String str71 = tiffMetadataItem70.getKeyword();
        tiffImageMetadata8.add((org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem) tiffMetadataItem70);
        tiffImageMetadata8.add("", "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ");
        tiffImageMetadata8.add("[TagInfo. tag: 48320 (0xbcc0, name: ImageOffset]", "hi!");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader79 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray80 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList81 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList81, tiffDirectoryArray80);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray83 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList84 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList84, tiffFieldArray83);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents86 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader79, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList81, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList84);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata87 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents86);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents88 = tiffImageMetadata87.contents;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals89 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        int int90 = tagInfoRationals89.tag;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField91 = tiffContents88.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoRationals89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray92 = tiffImageMetadata8.getFieldValue(tagInfoRationals89);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem cannot be cast to class org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory (org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem and org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory are in unnamed module of loader 'app')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tagInfoSRationals23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short48 + "' != '" + (short) 4096 + "'", short48 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray62);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 34676L + "'", long68 == 34676L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Unknown Tag (0x8003)" + "'", str71, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(tiffDirectoryArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(tiffContents88);
        org.junit.Assert.assertNotNull(tagInfoRationals89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 22 + "'", int90 == 22);
        org.junit.Assert.assertNull(tiffField91);
    }

    @Test
    void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType14, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort9, 65536, tiffDirectoryType14, true);
        boolean boolean19 = tiffDirectoryType14.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("N", 34905, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Gps (-3)\r\n}\r\n", 30, 64, tiffDirectoryType14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray3 = photometricInterpreterFloat2.getMinXY();
        float float4 = photometricInterpreterFloat2.getMeanFound();
        int int6 = photometricInterpreterFloat2.mapValueToArgb((float) 88);
        int[] intArray7 = photometricInterpreterFloat2.getMaxXY();
        float float8 = photometricInterpreterFloat2.getMinFound();
        float float9 = photometricInterpreterFloat2.getMinFound();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + Float.POSITIVE_INFINITY + "'", float8 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + Float.POSITIVE_INFINITY + "'", float9 == Float.POSITIVE_INFINITY);
    }

    @Test
    void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 79);
        boolean boolean5 = tiffRasterStatistics4.isAnExcludedValueSet();
        float float6 = tiffRasterStatistics4.getExcludedValue();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 79.0f + "'", float6 == 79.0f);
    }

    @Test
    void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong85 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_T6_OPTIONS;
        java.lang.Object obj86 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLong85);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(tagInfoLong85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SHORT_OR_LONG;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("M", 95, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("M", 20, 65536, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 3, abstractFieldTypeList21, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoByte35, (byte) 1);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational44 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII_OR_RATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("S", (-65536), abstractFieldTypeList47, 0, tiffDirectoryType55, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("W", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational44, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType77 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType77, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort73, tiffDirectoryType77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("ImageColorIndicator", 0, 32897, tiffDirectoryType77, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TIFF Header", 34712, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational44, tiffDirectoryType77);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("15 (0xf: Unknown Tag (0x8003): ): ", 34661, tiffDirectoryType77);
        tiffOutputDirectory16.add(tagInfoDouble86, (double) 64);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertNotNull(abstractFieldTypeList21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(fieldTypeRational44);
        org.junit.Assert.assertNotNull(abstractFieldTypeList47);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType55 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType55.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType77 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType77.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(34712, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            float float6 = tiffRasterDataFloat2.getValue(65000, 32896, 43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (65000, 32896)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        tiffImagingParameters5.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity9 = tiffImagingParameters5.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters5.setCompression((java.lang.Integer) 7);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(pixelDensity9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
    }

    @Test
    void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt4 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        float[] floatArray5 = tiffRasterDataInt4.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat6 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(0, 4, floatArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory6 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter7 = null;
        int[] intArray13 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration20 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader22 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder23 = tiffReader22.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles24 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled25 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory6, photometricInterpreter7, 10, (int) (byte) 10, (-65281), intArray13, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration20, byteOrder23, tiles24);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray13, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters30 = tiffImagingParameters2.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb29);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters32 = tiffImagingParameters30.setFileName("TIFF Header");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat35 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray36 = photometricInterpreterFloat35.getMaxXY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters37 = tiffImagingParameters30.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat35);
        tiffImagingParameters37.clearSubImage();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(tiffImagingParameters30);
        org.junit.Assert.assertNotNull(tiffImagingParameters32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(tiffImagingParameters37);
    }

    @Test
    void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList5 = tiffImageParser0.getAllBufferedImages(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType1 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType((-16759808));
        org.junit.Assert.assertNull(tiffDirectoryType1);
    }

    @Test
    void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = tiffImageParser0.getMetadata(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
    }

    @Test
    void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData93 = tiffDirectory89.getJpegImageData();
        java.nio.ByteOrder byteOrder94 = tiffDirectory89.getByteOrder();
        int int95 = tiffDirectory89.length;
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(jpegImageData93);
        org.junit.Assert.assertNotNull(byteOrder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 6 + "'", int95 == 6);
    }

    @Test
    void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 64L);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataFloat3.getDataType();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(32803, "TIFF Header");
        int int3 = fieldTypeShort2.getType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        long[] longArray55 = tiffField54.getLongArrayValue();
        long long56 = tiffField54.getCount();
        java.lang.String str57 = tiffField54.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem58 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField54);
        java.lang.Object obj59 = tiffField54.getValue();
        java.lang.Object obj60 = fieldTypeShort2.getValue(tiffField54);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = tiffField54.getIntValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32803 + "'", int3 == 32803);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 34676L + "'", long56 == 34676L);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_TONE_CURVE;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList11 = tiffContents9.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader16 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder17 = tiffReader16.getByteOrder();
        int[] intArray21 = new int[] { (byte) 1, 14, 22 };
        int int22 = org.apache.commons.imaging.internal.SafeOperations.add(intArray21);
        byte[] byteArray23 = tagInfoLongs14.encodeValue(byteOrder17, intArray21);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory24 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList11, (long) 34905, (long) 255, byteOrder17);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet25 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType32, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("ImageColorIndicator", 31, (-1), tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong36 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PREVIEW_IMAGE_LENGTH_SUB_IFD1;
        java.lang.String str37 = tagInfoLong36.name;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational38 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort39 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts40 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational41 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray47 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort46 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList48 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList48, abstractFieldTypeArray47);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType50 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList48, tiffDirectoryType50);
        java.nio.ByteOrder byteOrder52 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray54 = tagInfoByte51.encodeValue(byteOrder52, (byte) 0);
        short[] shortArray55 = new short[] {};
        byte[] byteArray56 = tagInfoShortOrLongOrRational41.encodeValue(byteOrder52, shortArray55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational57 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        short[] shortArray71 = new short[] {};
        byte[] byteArray72 = tagInfoShortOrLongOrRational57.encodeValue(byteOrder68, shortArray71);
        byte[] byteArray73 = tagInfoShorts40.encodeValue(byteOrder52, shortArray71);
        byte[] byteArray75 = tagInfoShort39.encodeValue(byteOrder52, (short) (byte) 10);
        short[] shortArray77 = new short[] { (byte) 0 };
        byte[] byteArray78 = tagInfoShortOrRational38.encodeValue(byteOrder52, shortArray77);
        byte[] byteArray80 = tagInfoLong36.encodeValue(byteOrder52, (-3));
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt83 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType84 = tiffRasterDataInt83.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics85 = tiffRasterDataInt83.getSimpleStatistics();
        float[] floatArray86 = tiffRasterDataInt83.getData();
        byte[] byteArray87 = tagInfoFloats35.encodeValue(byteOrder52, floatArray86);
        float[] floatArray88 = tagInfoFloats0.getValue(byteOrder17, byteArray87);
        org.junit.Assert.assertNotNull(tagInfoFloats0);
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldList11);
        org.junit.Assert.assertNotNull(tagInfoLongs14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 37 + "'", int22 == 37);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLong36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PreviewImageLength" + "'", str37, "PreviewImageLength");
        org.junit.Assert.assertNotNull(tagInfoShortOrRational38);
        org.junit.Assert.assertNotNull(tagInfoShort39);
        org.junit.Assert.assertNotNull(tagInfoShorts40);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational41);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational57);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-3, -1, -1, -1]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType84 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType84.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics85);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory6 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter7 = null;
        int[] intArray13 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration20 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader22 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder23 = tiffReader22.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles24 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled25 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory6, photometricInterpreter7, 10, (int) (byte) 10, (-65281), intArray13, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration20, byteOrder23, tiles24);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray13, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters30 = tiffImagingParameters2.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb29);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters32 = tiffImagingParameters30.setFileName("TIFF Header");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters34 = tiffImagingParameters30.setLzwCompressionBlockSize((java.lang.Integer) 34905);
        java.lang.String str35 = tiffImagingParameters34.getXmpXml();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(tiffImagingParameters30);
        org.junit.Assert.assertNotNull(tiffImagingParameters32);
        org.junit.Assert.assertNotNull(tiffImagingParameters34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension5 = tiffImageParser0.getImageSize(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory15 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter16 = null;
        int[] intArray22 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration29 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader31 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder32 = tiffReader31.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles33 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled34 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory15, photometricInterpreter16, 10, (int) (byte) 10, (-65281), intArray22, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration29, byteOrder32, tiles33);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray22, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray22, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel48 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray22, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters49 = tiffImagingParameters6.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel48);
        int[] intArray54 = new int[] { (byte) 1, 14, 22 };
        int int55 = org.apache.commons.imaging.internal.SafeOperations.add(intArray54);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel60 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(37, intArray54, 0, 6, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters61 = tiffImagingParameters6.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel60);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension62 = tiffImageParser0.getImageSize(byteSource5, tiffImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration29 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration29.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(tiffImagingParameters49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 37 + "'", int55 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters61);
    }

    @Test
    void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        java.lang.Object obj54 = tiffField50.getValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        int int4 = tiffRasterDataInt2.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(7, 1678379530, 77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (7, 1678379530)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 1L, 23.0f, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt5 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int[] intArray6 = tiffRasterDataInt5.getIntData();
        float[] floatArray7 = tiffRasterDataInt5.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat8 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(20, 100, (-16776961), floatArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster samples-per-pixel specification must be at least 1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField84 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts83);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters85 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity86 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters87 = tiffImagingParameters85.setPixelDensity(pixelDensity86);
        int int88 = tiffImagingParameters87.getSubImageY();
        java.lang.String str89 = tiffImagingParameters87.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters90 = tiffImagingParameters87.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters92 = tiffImagingParameters87.setFileName("hi!");
        java.awt.image.BufferedImage bufferedImage93 = tiffDirectory66.getTiffImage(tiffImagingParameters92);
        int int94 = tiffImagingParameters92.getSubImageY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters96 = tiffImagingParameters92.setLzwCompressionBlockSize((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType81 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType81.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField84);
        org.junit.Assert.assertNotNull(tiffImagingParameters87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(tiffImagingParameters90);
        org.junit.Assert.assertNotNull(tiffImagingParameters92);
        org.junit.Assert.assertNull(bufferedImage93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters96);
    }

    @Test
    void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("M", (int) (short) 0, tiffDirectoryType8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32898, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            float float6 = tiffRasterDataFloat2.getValue(0, 32845, 89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 32845)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.imaging.internal.Debug.debug(throwable0, 69);
    }

    @Test
    void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText88 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        java.lang.String str90 = tiffDirectory66.getFieldValue(tagInfoGpsText88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts91 = null;
        short[] shortArray93 = tiffDirectory66.getFieldValue(tagInfoShorts91, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong94 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_IMAGE_TYPE;
        // The following exception was thrown during execution in test generation
        try {
            int int95 = tiffDirectory66.getFieldValue(tagInfoLong94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"ImageType\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoGpsText88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(shortArray93);
        org.junit.Assert.assertNotNull(tagInfoLong94);
    }

    @Test
    void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(95, "hi!");
    }

    @Test
    void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        int[] intArray5 = new int[] { (byte) 1, 14, 22 };
        int int6 = org.apache.commons.imaging.internal.SafeOperations.add(intArray5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel11 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((int) '4', intArray5, 1, 11, 7, true);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel16 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32895, intArray5, 9, (int) (short) -1, (int) '4', false);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 37 + "'", int6 == 37);
    }

    @Test
    void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData86 = tiffDirectory66.getTiffImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor87 = tiffDirectory66.iterator();
        boolean boolean88 = tiffDirectory66.hasTiffImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNull(abstractTiffImageData86);
        org.junit.Assert.assertNotNull(tiffFieldItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = tiffRasterDataInt2.getIntValue(32, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32, 14)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        boolean boolean86 = tiffDirectory66.hasTiffImageData();
        java.nio.ByteOrder byteOrder87 = tiffDirectory66.getByteOrder();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = tiffDirectory66.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(byteOrder87);
    }

    @Test
    void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii18 = org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants.EXIF_TAG_MD_PREP_TIME;
        java.lang.String[] strArray19 = new java.lang.String[] {};
        tiffOutputDirectory16.add(tagInfoAscii18, strArray19);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor21 = tiffOutputDirectory16.iterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoAscii18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor21);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
    }

    @Test
    void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SLONG;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.String str54 = tiffField51.getValueDescription();
        int int55 = tiffField51.getOffset();
        java.lang.Object obj56 = fieldTypeLong0.getValue(tiffField51);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray57 = tiffField51.getDoubleArrayValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@23da2262 for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeLong0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 7, 79.0f);
        float float3 = photometricInterpreterFloat2.getMinFound();
        int[] intArray4 = photometricInterpreterFloat2.getMaxXY();
        org.apache.commons.imaging.common.ImageBuilder imageBuilder5 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder11 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray17 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray18 = tagInfoShortOrLong10.encodeValue(byteOrder11, intArray17);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr22 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(9, intArray17, 79, (int) (short) 100, 13);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt23 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(34712, 32895, 34713, intArray17);
        photometricInterpreterFloat2.interpretPixel(imageBuilder5, intArray17, 1751720192, 4);
        int int28 = photometricInterpreterFloat2.mapValueToArgb((float) '4');
        float float29 = photometricInterpreterFloat2.getMaxFound();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.POSITIVE_INFINITY + "'", float3 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong10);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-6316129) + "'", int28 == (-6316129));
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 4.857E-41f + "'", float29 == 4.857E-41f);
    }

    @Test
    void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        org.apache.commons.imaging.PixelDensity pixelDensity9 = tiffImagingParameters8.getPixelDensity();
        boolean boolean10 = tiffImagingParameters8.isSubImageSet();
        boolean boolean11 = tiffImagingParameters8.isSubImageSet();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(pixelDensity9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setFileName("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        org.apache.commons.imaging.PixelDensity pixelDensity9 = tiffImagingParameters6.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet10 = tiffImagingParameters6.getOutputSet();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(pixelDensity9);
        org.junit.Assert.assertNull(tiffOutputSet10);
    }

    @Test
    void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int int55 = tiffField51.getSortHint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = tiffField51.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@26145213");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 9 + "'", int55 == 9);
    }

    @Test
    void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_FOCAL_LENGTH;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals1 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder2 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort4 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort9 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, abstractFieldTypeArray10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder15 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray17 = tagInfoByte14.encodeValue(byteOrder15, (byte) 0);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray27 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray22, 34713, (int) (byte) 0, false, (-65281));
        short short28 = tagInfoShort4.getValue(byteOrder15, byteArray27);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray42 = tagInfoSRationals3.getValue(byteOrder15, byteArray41);
        byte[] byteArray43 = tagInfoRationals1.encodeValue(byteOrder2, rationalNumberArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType52, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort57 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts58 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational59 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        short[] shortArray73 = new short[] {};
        byte[] byteArray74 = tagInfoShortOrLongOrRational59.encodeValue(byteOrder70, shortArray73);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational75 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort80 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray81 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort80 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList82 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList82, abstractFieldTypeArray81);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList82, tiffDirectoryType84);
        java.nio.ByteOrder byteOrder86 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray88 = tagInfoByte85.encodeValue(byteOrder86, (byte) 0);
        short[] shortArray89 = new short[] {};
        byte[] byteArray90 = tagInfoShortOrLongOrRational75.encodeValue(byteOrder86, shortArray89);
        byte[] byteArray91 = tagInfoShorts58.encodeValue(byteOrder70, shortArray89);
        byte[] byteArray93 = tagInfoShort57.encodeValue(byteOrder70, (short) (byte) 10);
        byte[] byteArray95 = tagInfoSLong56.encodeValue(byteOrder70, 24);
        byte[] byteArray98 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressModifiedHuffman(byteArray95, 9006, (int) (byte) -1);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray99 = tagInfoRationals0.getValue(byteOrder2, byteArray95);
        org.junit.Assert.assertNotNull(tagInfoRationals0);
        org.junit.Assert.assertNotNull(tagInfoRationals1);
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tagInfoSRationals3);
        org.junit.Assert.assertNotNull(tagInfoShort4);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short28 + "' != '" + (short) 4096 + "'", short28 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType52 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType52.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort57);
        org.junit.Assert.assertNotNull(tagInfoShorts58);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational75);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[24, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray98), "[]");
        org.junit.Assert.assertNotNull(rationalNumberArray99);
    }

    @Test
    void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet5 = tiffImagingParameters0.getOutputSet();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNull(tiffOutputSet5);
    }

    @Test
    void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataFloat3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics((float) (short) 100);
        float float11 = tiffRasterStatistics10.getMaxValue();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.0f + "'", float11 == 0.0f);
    }

    @Test
    void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType17, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("M", 3, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("13 (0xd: E): ", 30, 32766, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 25, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("280 (0x118: MinSampleValue): ", 17, tiffDirectoryType17);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(23, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 32844, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeByte4, 34661);
    }

    @Test
    void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData86 = tiffDirectory66.getTiffImageData();
        int int87 = tiffDirectory66.type;
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNull(abstractTiffImageData86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 88 + "'", int87 == 88);
    }

    @Test
    void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        int int5 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = tiffRasterDataInt2.getIntValue(5056, 89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (5056, 89)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt5 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt5.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt5.getSimpleStatistics((float) 12);
        float[] floatArray9 = tiffRasterDataInt5.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat10 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(11, 23, 0, floatArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster samples-per-pixel specification must be at least 1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(32898, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
    }

    @Test
    void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        int int5 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt2.getSimpleStatistics((float) 77);
        float float8 = tiffRasterStatistics7.getMeanValue();
        int int9 = tiffRasterStatistics7.getCountOfNulls();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, 6, 0);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles8 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, 32896, (int) (short) 100);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray9 = tiles8.getImageData();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertNotNull(dataElementArray9);
    }

    @Test
    void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("Tiff-Custom", 5056, 12, tiffDirectoryType3);
    }

    @Test
    void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        java.lang.String str8 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setBufferedImageFactory(bufferedImageFactory9);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setT6Options((java.lang.Integer) 3);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
    }

    @Test
    void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(89, "MBad Type: \n\nUnknown Tag (0x8003): ");
    }

    @Test
    void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float float5 = tiffRasterStatistics4.getMeanValue();
        int int6 = tiffRasterStatistics4.getCountOfNulls();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension5 = tiffImageParser0.getImageSize(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        java.nio.ByteOrder byteOrder93 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet94 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder93);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory95 = tiffOutputSet94.getOrCreateGpsDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory96 = tiffOutputSet94.addExifDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(byteOrder93);
        org.junit.Assert.assertNotNull(tiffOutputDirectory95);
    }

    @Test
    void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CONTRAST_1;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = tagInfoShort7.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("hi!", (int) (byte) -1, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): Bad Type: \n\n", 65000, tiffDirectoryType8, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("10 (0xa: hi!): ", 4, 32766, tiffDirectoryType8);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData92 = directory91.getJpegImageData();
        java.lang.String str94 = directory91.toString("VBad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData95 = directory91.getJpegImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList96 = directory91.getAllFields();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNull(jpegImageData92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "VBad Type: \n\nBad Type: \n\n" + "'", str94, "VBad Type: \n\nBad Type: \n\n");
        org.junit.Assert.assertNull(jpegImageData95);
        org.junit.Assert.assertNotNull(tiffFieldList96);
    }

    @Test
    void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList6 = tiffImageParser0.getAllBufferedImages(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
    }

    @Test
    void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(1678379530, "306 (0x132: DateTime): ");
    }

    @Test
    void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType11);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = tagInfoByteOrShort12.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        short[] shortArray38 = new short[] {};
        byte[] byteArray39 = tagInfoShortOrLongOrRational24.encodeValue(byteOrder35, shortArray38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        short[] shortArray54 = new short[] {};
        byte[] byteArray55 = tagInfoShortOrLongOrRational40.encodeValue(byteOrder51, shortArray54);
        byte[] byteArray56 = tagInfoShorts23.encodeValue(byteOrder35, shortArray54);
        byte[] byteArray58 = tagInfoShort22.encodeValue(byteOrder35, (short) (byte) 10);
        byte[] byteArray65 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int66 = tagInfoDirectory21.getValue(byteOrder35, byteArray65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort67 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        byte[] byteArray85 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray90 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray85, 34713, (int) (byte) 0, false, (-65281));
        short short91 = tagInfoShort67.getValue(byteOrder78, byteArray90);
        byte[] byteArray92 = tagInfoByteOrShort12.encodeValue(byteOrder35, byteArray90);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet93 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder35);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor94 = tiffOutputSet93.iterator();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters95 = tiffImagingParameters5.setOutputSet(tiffOutputSet93);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor96 = tiffOutputSet93.iterator();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(tagInfoShorts23);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational40);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1678379530 + "'", int66 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort67);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short91 + "' != '" + (short) 4096 + "'", short91 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor94);
        org.junit.Assert.assertNotNull(tiffImagingParameters95);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor96);
    }

    @Test
    void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MAKE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((-1), "W");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("M", (int) (byte) -1, (int) (short) 100, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("N", 64, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort5, (int) '#', tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort17 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory18 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter19 = null;
        int[] intArray25 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration32 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader34 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder35 = tiffReader34.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles36 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled37 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory18, photometricInterpreter19, 10, (int) (byte) 10, (-65281), intArray25, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration32, byteOrder35, tiles36);
        byte[] byteArray39 = tagInfoShort17.encodeValue(byteOrder35, (short) 4096);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort5, 50717, byteArray39);
        byte[] byteArray43 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT6(byteArray39, 13, (int) (byte) 1);
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShort17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[16, 0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0]");
    }

    @Test
    void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXPOSURE_INDEX_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        java.lang.Object obj53 = tagInfoRational0.getValue(tiffField51);
        java.lang.String str54 = tiffField51.toString();
        int int55 = tiffField51.getSortHint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = tiffField51.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@6fc1cda");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRational0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str54, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 9 + "'", int55 == 9);
    }

    @Test
    void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        java.awt.image.BufferedImage bufferedImage80 = tiffDirectory66.getTiffImage();
        int int81 = tiffDirectory66.size();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals82 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CAMERA_CALIBRATION_1;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray84 = tiffDirectory66.getFieldValue(tagInfoSRationals82, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"CameraCalibration1\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertNull(bufferedImage80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(tagInfoSRationals82);
    }

    @Test
    void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType36);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType36);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoSByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory43 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder40);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData44 = tiffOutputDirectory43.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory43.add(tagInfoByte45, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData48 = null;
        tiffOutputDirectory43.setJpegImageData(jpegImageData48);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData50 = tiffOutputDirectory43.getRawJpegImageData();
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte52 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PREVIEW_SETTINGS_NAME;
        java.lang.String[] strArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoAsciiOrByte52, strArray53);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown data type: null");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType36 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType36.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData44);
        org.junit.Assert.assertNotNull(tagInfoByte45);
        org.junit.Assert.assertNull(jpegImageData50);
        org.junit.Assert.assertNotNull(tagInfoAsciiOrByte52);
    }

    @Test
    void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.lang.String str4 = tiffImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        java.lang.Integer int10 = tiffImagingParameters7.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters7.setXmpXml("V");
        tiffImagingParameters12.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters12.setFileName("M");
        java.lang.Integer int16 = tiffImagingParameters12.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters18 = tiffImagingParameters12.setReadThumbnails(true);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters20 = tiffImagingParameters18.setFileName("ColorSpace");
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage5, outputStream6, tiffImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(tiffImagingParameters18);
        org.junit.Assert.assertNotNull(tiffImagingParameters20);
    }

    @Test
    void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_PRE_PROFILE_MATRIX;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader2 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder3 = tiffReader2.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder17 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray19 = tagInfoSByte16.encodeValue(byteOrder17, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory20 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder17);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData21 = tiffOutputDirectory20.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory20.add(tagInfoByte22, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField26 = tiffOutputDirectory20.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType34);
        tiffOutputDirectory20.add(tagInfoFloat37, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData40 = null;
        tiffOutputDirectory20.setJpegImageData(jpegImageData40);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField43 = tiffOutputDirectory20.findField(29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational44 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals45 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_DELTA_V;
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType50 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        byte[] byteArray66 = tagInfoDouble51.encodeValue(byteOrder62, (double) 32773);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals45.getValue(byteOrder46, byteArray66);
        tiffOutputDirectory20.add(tagInfoShortOrLongOrRational44, rationalNumberArray67);
        byte[] byteArray69 = tagInfoSRationals0.encodeValue(byteOrder3, rationalNumberArray67);
        org.junit.Assert.assertNotNull(tagInfoSRationals0);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData21);
        org.junit.Assert.assertNotNull(tagInfoByte22);
        org.junit.Assert.assertNull(tiffOutputField26);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffOutputField43);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational44);
        org.junit.Assert.assertNotNull(tagInfoSRationals45);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType50 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType50.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 0, 0, 64, -32, 0, -96]");
    }

    @Test
    void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = directory72.getOutputDirectory(byteOrder91);
        java.awt.image.BufferedImage bufferedImage95 = directory72.getThumbnail();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData96 = directory72.getTiffImageData();
        int int97 = directory72.type;
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertNull(bufferedImage95);
        org.junit.Assert.assertNull(abstractTiffImageData96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 88 + "'", int97 == 88);
    }

    @Test
    void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(18, (int) (short) 10, 4);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setIntValue(277408, 32947, (int) (short) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (277408, 32947)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList10 = tiffContents9.getElements();
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader11 = tiffContents9.header;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(abstractTiffElementList10);
        org.junit.Assert.assertNull(tiffHeader11);
    }

    @Test
    void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        int int61 = tiffOutputDirectory16.getItemLength();
        org.apache.commons.imaging.common.BinaryOutputStream binaryOutputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.writeItem(binaryOutputStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.BinaryOutputStream.write2Bytes(int)\" because \"bos\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 18 + "'", int61 == 18);
    }

    @Test
    void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator61 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType70 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader75 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder76 = tiffReader75.getByteOrder();
        byte[] byteArray78 = tagInfoSLong73.encodeValue(byteOrder76, 1678379530);
        tiffOutputDirectory16.add(tagInfoSLong73, 64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort81 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_SAMPLES_PER_PIXEL;
        tiffOutputDirectory16.add(tagInfoShort81, (short) 4096);
        org.apache.commons.imaging.common.BinaryOutputStream binaryOutputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.writeItem(binaryOutputStream84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.BinaryOutputStream.write2Bytes(int)\" because \"bos\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator61);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType70 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType70.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(tagInfoShort81);
    }

    @Test
    void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        tiffImageMetadata8.add("TIFF image data: 0 bytes", "");
        tiffImageMetadata8.add("S", "TIFF image data: 0 bytes");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffImageMetadata.GpsInfo gpsInfo16 = tiffImageMetadata8.getGpsInfo();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem cannot be cast to class org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory (org.apache.commons.imaging.common.GenericImageMetadata$GenericImageMetadataItem and org.apache.commons.imaging.formats.tiff.TiffImageMetadata$Directory are in unnamed module of loader 'app')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
    }

    @Test
    void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        byte[] byteArray52 = tiffField50.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType53 = tiffField50.getFieldType();
        long long54 = tiffField50.getCount();
        // The following exception was thrown during execution in test generation
        try {
            long long55 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 34676L + "'", long54 == 34676L);
    }

    @Test
    void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational((-2), "ImageDataElement");
    }

    @Test
    void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 32897);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = tiffRasterDataFloat3.getIntValue(32803, (int) (byte) 10, 32769);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32803, 10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
    }

    @Test
    void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = tiffMetadataItem54.getTiffField();
        java.lang.String str56 = tiffMetadataItem54.getText();
        org.apache.commons.imaging.formats.tiff.TiffField tiffField57 = tiffMetadataItem54.getTiffField();
        java.lang.String str58 = tiffMetadataItem54.getText();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(tiffField55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(tiffField57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = tiffImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem52 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        int int53 = tiffField50.getOffset();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement56 = tiffField50.new OversizeValueElement(32773, 7);
        // The following exception was thrown during execution in test generation
        try {
            long long57 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
    }

    @Test
    void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean6 = tiffImagingParameters5.isSubImageSet();
        int int7 = tiffImagingParameters5.getSubImageWidth();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("OversizeValueElement, tag: Unknown Tag, fieldType: hi!Unknown Tag (0x8003): ");
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension11 = tiffImageParser0.getImageSize(file4, tiffImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
    }

    @Test
    void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader11 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray12 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList13 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList13, tiffDirectoryArray12);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray15 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList16, tiffFieldArray15);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents18 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader11, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList13, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList16);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList19 = tiffContents18.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator20 = tiffFieldList19.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort35 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray58 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray53, 34713, (int) (byte) 0, false, (-65281));
        short short59 = tagInfoShort35.getValue(byteOrder46, byteArray58);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray73 = tagInfoSRationals34.getValue(byteOrder46, byteArray72);
        byte[] byteArray75 = tagInfoSByte33.encodeValue(byteOrder46, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory76 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList19, (long) 34712, (long) 9, byteOrder46);
        java.nio.ByteOrder byteOrder77 = tiffDirectory76.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("TIFF image data: 0 bytes", (int) (byte) 1, 31, tiffDirectoryType84);
        short[] shortArray88 = tiffDirectory76.getFieldValue(tagInfoSShorts86, false);
        short[] shortArray89 = tiffImageMetadata8.getFieldValue(tagInfoSShorts86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals90 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray91 = tiffImageMetadata8.getFieldValue(tagInfoSRationals90);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList92 = tiffImageMetadata8.getAllFields();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffContents9);
        org.junit.Assert.assertNotNull(tiffDirectoryArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tiffFieldList19);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals34);
        org.junit.Assert.assertNotNull(tagInfoShort35);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short59 + "' != '" + (short) 4096 + "'", short59 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray73);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType84 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType84.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray88);
        org.junit.Assert.assertNull(shortArray89);
        org.junit.Assert.assertNotNull(tagInfoSRationals90);
        org.junit.Assert.assertNull(rationalNumberArray91);
        org.junit.Assert.assertNotNull(tiffFieldList92);
    }

    @Test
    void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        tiffOutputSet85.removeField(0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
    }

    @Test
    void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        java.nio.ByteOrder byteOrder3 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = null;
        org.apache.commons.imaging.formats.tiff.TiffReader.Listener listener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffReader1.read(byteSource4, formatCompliance5, listener6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        tiffOutputSet85.removeField((int) '4');
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory91 = tiffOutputSet85.getExifDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
        org.junit.Assert.assertNull(tiffOutputDirectory91);
    }

    @Test
    void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("VBad Type: \n\n", (int) '4', 16, tiffDirectoryType5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt3.getSimpleStatistics((float) 12);
        float[] floatArray7 = tiffRasterDataInt3.getData();
        int[] intArray8 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(95, intArray8, (-2), 71, 1751720192);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt4 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType5 = tiffRasterDataInt4.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt4.getSimpleStatistics();
        float[] floatArray7 = tiffRasterDataInt4.getData();
        float[] floatArray8 = tiffRasterDataInt4.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat9 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(0, (int) ' ', floatArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType5 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType5.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo75 = tiffOutputField74.tagInfo;
        int int76 = tiffOutputField74.getSortHint();
        int int77 = tiffOutputField74.tag;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
    }

    @Test
    void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", (int) (byte) 10, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 1, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Gps (-3)\r\n}\r\n", 34676, 77, tiffDirectoryType10, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        byte[] byteArray52 = tiffField50.getByteArrayValue();
        int int53 = tiffField50.getOffset();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
    }

    @Test
    void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        java.lang.Integer int6 = tiffImagingParameters2.getT6Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.asThis();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
    }

    @Test
    void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.findDirectory(32898);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertNull(tiffOutputDirectory88);
    }

    @Test
    void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        tiffOutputDirectory16.sortFields();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType76);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort71, 6, tiffDirectoryType76, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType76);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", (int) (short) 1, 32771, tiffDirectoryType76);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField82 = tiffOutputDirectory16.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns81);
        tiffOutputDirectory16.removeField(32771);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType93 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType93);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType93);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte96 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType93);
        tiffOutputDirectory16.add(tagInfoSByte96, (byte) 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType76 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType76.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffOutputField82);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType93 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType93.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = tiffRasterDataInt2.getIntValue(32845, 69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32845, 69)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale dataParserGrayscale0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserGrayscale();
        int int1 = dataParserGrayscale0.getBasicChannelsCount();
        int int2 = dataParserGrayscale0.getBasicChannelsCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters2.setT6Options((java.lang.Integer) 12);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory6 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter7 = null;
        int[] intArray13 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration20 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader22 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder23 = tiffReader22.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles24 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled25 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory6, photometricInterpreter7, 10, (int) (byte) 10, (-65281), intArray13, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration20, byteOrder23, tiles24);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray13, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters30 = tiffImagingParameters2.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb29);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(tiffImagingParameters30);
    }

    @Test
    void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("N");
        java.nio.ByteOrder byteOrder8 = tiffImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator61 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType70 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader75 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder76 = tiffReader75.getByteOrder();
        byte[] byteArray78 = tagInfoSLong73.encodeValue(byteOrder76, 1678379530);
        tiffOutputDirectory16.add(tagInfoSLong73, 64);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader81 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray82 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList83 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList83, tiffDirectoryArray82);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray85 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList86 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList86, tiffFieldArray85);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents88 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader81, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList83, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList86);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList89 = tiffContents88.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort90 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CUSTOM_RENDERED;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField91 = tiffContents88.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShort90);
        tiffOutputDirectory16.add(tagInfoShort90, (short) (byte) 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator61);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType70 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType70.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tiffFieldList89);
        org.junit.Assert.assertNotNull(tagInfoShort90);
        org.junit.Assert.assertNull(tiffField91);
    }

    @Test
    void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii(0, "ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n");
    }

    @Test
    void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField50.getFieldType();
        int int55 = tiffField50.getBytesLength();
        // The following exception was thrown during execution in test generation
        try {
            double double56 = tiffField50.getDoubleValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 277408 + "'", int55 == 277408);
    }

    @Test
    void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType36);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType36);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoSByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory43 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder40);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData44 = tiffOutputDirectory43.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory43.add(tagInfoByte45, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData48 = null;
        tiffOutputDirectory43.setJpegImageData(jpegImageData48);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData50 = tiffOutputDirectory43.getRawJpegImageData();
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory43);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType64 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort62, 5, tiffDirectoryType64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("262 (0x106: PhotometricInterpretation): Bad Type: \n\n", 32768, 29, tiffDirectoryType64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_DELTA_V;
        java.nio.ByteOrder byteOrder69 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType73 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType73);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort79 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray80 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort79 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList81 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList81, abstractFieldTypeArray80);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType83 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList81, tiffDirectoryType83);
        java.nio.ByteOrder byteOrder85 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray87 = tagInfoByte84.encodeValue(byteOrder85, (byte) 0);
        byte[] byteArray89 = tagInfoDouble74.encodeValue(byteOrder85, (double) 32773);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray90 = tagInfoSRationals68.getValue(byteOrder69, byteArray89);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoBytes67, byteArray89);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 29 value(s), not 8");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType36 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType36.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData44);
        org.junit.Assert.assertNotNull(tagInfoByte45);
        org.junit.Assert.assertNull(jpegImageData50);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType64 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType64.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoSRationals68);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType73 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType73.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertNotNull(rationalNumberArray90);
    }

    @Test
    void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(1, 79, 21, (float) 65536);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (1, 79)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
    }

    @Test
    void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        java.lang.String str80 = tiffOutputField74.toString();
        tiffOutputField74.setSortHint(32844);
        int int83 = tiffOutputField74.count;
        int int84 = tiffOutputField74.tag;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 32769 + "'", int83 == 32769);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 258 + "'", int84 == 258);
    }

    @Test
    void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "N");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SLONG;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.String str57 = tiffField54.getValueDescription();
        int int58 = tiffField54.getOffset();
        java.lang.Object obj59 = fieldTypeLong3.getValue(tiffField54);
        java.lang.Object obj60 = fieldTypeDouble2.getValue(tiffField54);
        java.lang.String str61 = tiffField54.getTagName();
        int int62 = tiffField54.getTag();
        org.junit.Assert.assertNotNull(fieldTypeLong3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Unknown Tag (0x8003)" + "'", str61, "Unknown Tag (0x8003)");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32771 + "'", int62 == 32771);
    }

    @Test
    void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        int int23 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SHARPNESS_1;
        tiffOutputDirectory16.add(tagInfoShort24, (short) (byte) -1);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = tagInfoShort24.dataTypes;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(abstractFieldTypeList27);
    }

    @Test
    void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals12 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort15 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray38 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray33, 34713, (int) (byte) 0, false, (-65281));
        short short39 = tagInfoShort15.getValue(byteOrder26, byteArray38);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort44 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList46 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, abstractFieldTypeArray45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, tiffDirectoryType48);
        java.nio.ByteOrder byteOrder50 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray52 = tagInfoByte49.encodeValue(byteOrder50, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray53 = tagInfoSRationals14.getValue(byteOrder26, byteArray52);
        byte[] byteArray54 = tagInfoRationals12.encodeValue(byteOrder13, rationalNumberArray53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort60 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, abstractFieldTypeArray61);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType64 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, tiffDirectoryType64);
        java.nio.ByteOrder byteOrder66 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray68 = tagInfoByte65.encodeValue(byteOrder66, (byte) 0);
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray78 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray73, 34713, (int) (byte) 0, false, (-65281));
        short short79 = tagInfoShort55.getValue(byteOrder66, byteArray78);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless80 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray78);
        short[] shortArray81 = tagInfoShorts11.getValue(byteOrder13, byteArray78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii82 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder83 = null;
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray91 = tagInfoAscii82.encodeValue(byteOrder83, strArray90);
        org.apache.commons.imaging.common.RationalNumber rationalNumber92 = tagInfoRational10.getValue(byteOrder13, byteArray91);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader96 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder13, (int) '#', (long) (-3), true);
        java.nio.ByteOrder byteOrder97 = tiffHeader96.byteOrder;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts11);
        org.junit.Assert.assertNotNull(tagInfoRationals12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(tagInfoSRationals14);
        org.junit.Assert.assertNotNull(tagInfoShort15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short39 + "' != '" + (short) 4096 + "'", short39 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort55);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short79 + "' != '" + (short) 4096 + "'", short79 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[4096]");
        org.junit.Assert.assertNotNull(tagInfoAscii82);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(rationalNumber92);
        org.junit.Assert.assertNotNull(byteOrder97);
    }

    @Test
    void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(0, 32771, 89, (float) 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 32771)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals0 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_TIME_STAMP;
        java.lang.String str1 = tagInfoRationals0.toString();
        java.lang.String str2 = tagInfoRationals0.toString();
        org.junit.Assert.assertNotNull(tagInfoRationals0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]" + "'", str1, "[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]" + "'", str2, "[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]");
    }

    @Test
    void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList6 = tiffImageParser0.getAllBufferedImages(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
    }

    @Test
    void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray3 = strips2.getImageData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement dataElement5 = strips2.getImageData(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertNotNull(dataElementArray3);
    }

    @Test
    void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        tiffImagingParameters11.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setFileName("M");
        java.lang.Integer int15 = tiffImagingParameters11.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters11.setReadThumbnails(true);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray18 = tiffImageParser0.getIccProfileBytes(file5, tiffImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
    }

    @Test
    void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds68 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CFAPATTERN;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds68, false);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator71 = tiffDirectory66.spliterator();
        int int72 = tiffDirectory66.type;
        boolean boolean73 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean77 = tiffDirectoryType76.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("TIFF Header", 73, tiffDirectoryType76);
        boolean boolean79 = tagInfoFloat78.isText();
        // The following exception was thrown during execution in test generation
        try {
            float float80 = tiffDirectory66.getFieldValue(tagInfoFloat78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"TIFF Header\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoUndefineds68);
        org.junit.Assert.assertNull(tiffField70);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 88 + "'", int72 == 88);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType76 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType76.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType1 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(51041);
        org.junit.Assert.assertNull(tiffDirectoryType1);
    }

    @Test
    void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Bad TypeUnknown Tag (0x8003): ", 95, tiffDirectoryType8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor19 = tiffOutputDirectory16.iterator();
        java.lang.String str20 = tiffOutputDirectory16.description();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Bad Type" + "'", str20, "Bad Type");
    }

    @Test
    void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(43, "262 (0x106: PhotometricInterpretation): ");
    }

    @Test
    void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong7 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray39 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray34, 34713, (int) (byte) 0, false, (-65281));
        short short40 = tagInfoShort16.getValue(byteOrder27, byteArray39);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray54 = tagInfoSRationals15.getValue(byteOrder27, byteArray53);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless55 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray53);
        java.nio.ByteOrder byteOrder56 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField58 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_12, (long) 34676, (long) 7, byteArray53, byteOrder56, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffField58.getFieldType();
        byte[] byteArray60 = tiffField58.getByteArrayValue();
        java.lang.Object obj61 = fieldTypeLong7.getValue(tiffField58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType72, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("Bad Type", 32803, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("258 (0x102: BitsPerSample): ", (-6316129), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong7, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n", (-1), tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nTiffOutputSet {\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nbyteOrder: LITTLE_ENDIAN\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 0: Exif (-2)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 1: Root (0)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n}\r\n", 32909, 0, tiffDirectoryType72);
        org.junit.Assert.assertNotNull(fieldTypeLong7);
        org.junit.Assert.assertNotNull(tagInfoSRationals15);
        org.junit.Assert.assertNotNull(tagInfoShort16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 4096 + "'", short40 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray54);
        org.junit.Assert.assertNotNull(abstractFieldType59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType72 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType72.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_BACKGROUND_COLOR_INDICATOR;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField24 = tiffOutputDirectory16.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong25 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoLong25, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"length\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tagInfoByte23);
        org.junit.Assert.assertNull(tiffOutputField24);
    }

    @Test
    void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList10 = tiffContents7.getElements();
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader11 = tiffContents7.header;
        // The following exception was thrown during execution in test generation
        try {
            tiffContents7.dissect();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"offset\" because \"element\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(abstractTiffElementList10);
        org.junit.Assert.assertNull(tiffHeader11);
    }

    @Test
    void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType77 = tiffOutputField74.abstractFieldType;
        byte[] byteArray78 = tiffOutputField74.getData();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(abstractFieldType77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
    }

    @Test
    void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList14, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType32, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList14, 34905, tiffDirectoryType32, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList14, 34712, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("A", 35, abstractFieldTypeList14, 32897, tiffDirectoryType48, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("E", (int) (byte) -1, (-1), tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("", 0, 37, tiffDirectoryType63, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("K", 32897, abstractFieldTypeList14, 34712, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Directory: Exif IFD (-2)", 0, abstractFieldTypeList14, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n}\r\n", 35, tiffDirectoryType72);
        org.junit.Assert.assertNotNull(abstractFieldTypeList14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType48 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType48.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType72 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType72.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = tiffRasterDataInt2.getIntValue((int) ' ', 5, 34677);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32, 5)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort17, 5, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("S", 32946, 34712, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("258 (0x102: BitsPerSample): ", 69, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("VBad Type: \n\n", 69, tiffDirectoryType19);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList26 = tagInfoRational25.dataTypes;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(abstractFieldTypeList26);
    }

    @Test
    void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.nio.ByteOrder byteOrder84 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts85 = null;
        short[] shortArray87 = tiffDirectory66.getFieldValue(tagInfoShorts85, false);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor88 = tiffDirectory66.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType91 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational92 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("S", 18, tiffDirectoryType91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber93 = tiffDirectory66.getFieldValue(tagInfoRational92);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"S\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(shortArray87);
        org.junit.Assert.assertNotNull(tiffFieldItor88);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType91 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType91.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType5 = tiffRasterDataInt2.getDataType();
        int int6 = tiffRasterDataInt2.getHeight();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType5 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType5.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory3 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter4 = null;
        int[] intArray10 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration17 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader19 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder20 = tiffReader19.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles21 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled22 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory3, photometricInterpreter4, 10, (int) (byte) 10, (-65281), intArray10, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration17, byteOrder20, tiles21);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab26 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray10, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr30 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(6, intArray10, 258, 65536, 73);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr34 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr(64, intArray10, 48, 34677, 0);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder35 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat38 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray39 = photometricInterpreterFloat38.getMinXY();
        float float40 = photometricInterpreterFloat38.getMeanFound();
        int int42 = photometricInterpreterFloat38.mapValueToArgb((float) 88);
        int[] intArray43 = photometricInterpreterFloat38.getMinXY();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr34.interpretPixel(imageBuilder35, intArray43, 43, 65000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.0f + "'", float40 == 0.0f);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
    }

    @Test
    void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        tiffImagingParameters8.clearSubImage();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.setBufferedImageFactory(bufferedImageFactory10);
        int int12 = tiffImagingParameters8.getSubImageX();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters8.setFileName("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n}\r\n");
        int int15 = tiffImagingParameters8.getSubImageWidth();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(32803, "TIFF Header");
        int int5 = fieldTypeShort4.getType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        long[] longArray57 = tiffField56.getLongArrayValue();
        long long58 = tiffField56.getCount();
        java.lang.String str59 = tiffField56.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem60 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField56);
        java.lang.Object obj61 = tiffField56.getValue();
        java.lang.Object obj62 = fieldTypeShort4.getValue(tiffField56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType71 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType71);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList73 = tagInfoByteOrShort72.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", (-16759808), abstractFieldTypeList73, 15, tiffDirectoryType81);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType89 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (-3), (-1), tiffDirectoryType89, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong93 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("SByte", 0, abstractFieldTypeList73, 9, tiffDirectoryType89, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("32771 (0x8003: Unknown Tag):  (34676 hi!)", 32766, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, 50717, tiffDirectoryType89, true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32803 + "'", int5 == 32803);
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 34676L + "'", long58 == 34676L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType71 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType71.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList73);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType81 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType81.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType89 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType89.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, tiffDirectoryType10);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = tagInfoByte13.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("262 (0x106: PhotometricInterpretation): ", 34905, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("258 (0x102: BitsPerSample): ", 34905, abstractFieldTypeList14, 100, tiffDirectoryType27, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("T", 34661, (-1), tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("306 (0x132: DateTime): ", 37, 93, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("TIFF image data: 0 bytesBad Type: \n\nTiffOutputSet {\r\nTIFF image data: 0 bytesBad Type: \n\nbyteOrder: LITTLE_ENDIAN\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 0: Gps (-3)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 1: Root (0)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 2: Exif (-2)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 3: Interoperability (-4)\r\nTIFF image data: 0 bytesBad Type: \n\n}\r\n", 31, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData36 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData36);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType45);
        tiffOutputDirectory16.add(tagInfoFloat48, (float) 34712);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort66 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType70 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType70, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort66, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("M", 7, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("W", 32766, 7, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("T", 18, 20, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("TIFF Header", 255, 95, tiffDirectoryType70);
        java.lang.String str78 = tagInfoAsciiOrRational77.toString();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii79 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder80 = null;
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray88 = tagInfoAscii79.encodeValue(byteOrder80, strArray87);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoAsciiOrRational77, strArray87);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 95 byte(s), not 6");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType70 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType70.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[TagInfo. tag: 255 (0xff, name: TIFF Header]" + "'", str78, "[TagInfo. tag: 255 (0xff, name: TIFF Header]");
        org.junit.Assert.assertNotNull(tagInfoAscii79);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
    }

    @Test
    void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.getInteroperabilityDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.addRootDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles91 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_DOUBLE_PARAMS_TAG;
        double[] doubleArray95 = new double[] { Float.POSITIVE_INFINITY, 32844, 100.0d };
        tiffOutputDirectory90.add(tagInfoDoubles91, doubleArray95);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList97 = tiffOutputDirectory90.getFields();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tagInfoAscii87);
        org.junit.Assert.assertNull(tiffOutputField88);
        org.junit.Assert.assertNull(tiffOutputDirectory89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
        org.junit.Assert.assertNotNull(tagInfoDoubles91);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[Infinity, 32844.0, 100.0]");
        org.junit.Assert.assertNotNull(tiffOutputFieldList97);
    }

    @Test
    void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        int int52 = tiffField50.getSortHint();
        int int53 = tiffField50.getBytesLength();
        // The following exception was thrown during execution in test generation
        try {
            long long54 = tiffField50.getLongValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9 + "'", int52 == 9);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 277408 + "'", int53 == 277408);
    }

    @Test
    void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("Element, offset: 37, length: 12, last: 49");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: Element, offset: 37, length: 12, last: 49");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii(71, "Element, offset: 37, length: 12, last: 49");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational3 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXPOSURE_INDEX_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        java.lang.Object obj56 = tagInfoRational3.getValue(tiffField54);
        java.lang.Object obj57 = fieldTypeAscii2.getValue(tiffField54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = tiffField54.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@57af30e4");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRational3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
    }

    @Test
    void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader9 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder10 = tiffReader9.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy11 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts14 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        short[] shortArray29 = new short[] {};
        byte[] byteArray30 = tagInfoShortOrLongOrRational15.encodeValue(byteOrder26, shortArray29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        short[] shortArray45 = new short[] {};
        byte[] byteArray46 = tagInfoShortOrLongOrRational31.encodeValue(byteOrder42, shortArray45);
        byte[] byteArray47 = tagInfoShorts14.encodeValue(byteOrder26, shortArray45);
        byte[] byteArray49 = tagInfoShort13.encodeValue(byteOrder26, (short) (byte) 10);
        short[] shortArray51 = new short[] { (byte) 0 };
        byte[] byteArray52 = tagInfoShortOrRational12.encodeValue(byteOrder26, shortArray51);
        byte[] byteArray53 = tagInfoByteOrShort7.encodeValue(byteOrder10, shortArray51);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray58 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray53, 34677, 32898, true, 77);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to compress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(tagInfoShorts14);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational31);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0]");
    }

    @Test
    void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader3 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder4 = tiffReader3.getByteOrder();
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        byte[] byteArray10 = tagInfoLongs1.encodeValue(byteOrder4, intArray8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab14 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab((int) (byte) 0, intArray8, 16, (int) (byte) 1, 29);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder15 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType26 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType26);
        int int31 = tagInfoSLongs30.length;
        java.nio.ByteOrder byteOrder32 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat36 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray37 = photometricInterpreterFloat36.getMinXY();
        float float38 = photometricInterpreterFloat36.getMeanFound();
        float float39 = photometricInterpreterFloat36.getMaxFound();
        int[] intArray40 = photometricInterpreterFloat36.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel45 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray40, 25, 69, 65536, true);
        byte[] byteArray46 = tagInfoSLongs30.encodeValue(byteOrder32, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterCieLab14.interpretPixel(imageBuilder15, intArray40, 32809, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongs1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 0.0f + "'", float38 == 0.0f);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + Float.NEGATIVE_INFINITY + "'", float39 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(false);
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters3.setPixelDensity(pixelDensity4);
        java.lang.Integer int6 = tiffImagingParameters3.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters3.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory12 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter13 = null;
        int[] intArray19 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration26 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader28 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder29 = tiffReader28.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles30 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled31 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory12, photometricInterpreter13, 10, (int) (byte) 10, (-65281), intArray19, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration26, byteOrder29, tiles30);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab35 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray19, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel40 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray19, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel45 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray19, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters46 = tiffImagingParameters3.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel45);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters48 = tiffImagingParameters3.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        boolean boolean49 = tiffImagingParameters3.isReadThumbnails();
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffContents tiffContents51 = tiffReader1.readContents(byteSource2, tiffImagingParameters3, formatCompliance50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(tiffImagingParameters46);
        org.junit.Assert.assertNotNull(tiffImagingParameters48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("V", 48, 89, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((int) (short) -1, "E");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts17 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational18 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort23 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList25 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, abstractFieldTypeArray24);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, tiffDirectoryType27);
        java.nio.ByteOrder byteOrder29 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray31 = tagInfoByte28.encodeValue(byteOrder29, (byte) 0);
        short[] shortArray32 = new short[] {};
        byte[] byteArray33 = tagInfoShortOrLongOrRational18.encodeValue(byteOrder29, shortArray32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational34 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        short[] shortArray48 = new short[] {};
        byte[] byteArray49 = tagInfoShortOrLongOrRational34.encodeValue(byteOrder45, shortArray48);
        byte[] byteArray50 = tagInfoShorts17.encodeValue(byteOrder29, shortArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField51 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField(14, (org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds12, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeAscii15, 4, byteArray50);
        int int52 = tiffOutputField51.tag;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts17);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational18);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational34);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 14 + "'", int52 == 14);
    }

    @Test
    void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType1 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(14);
        org.junit.Assert.assertNull(tiffDirectoryType1);
    }

    @Test
    void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        org.apache.commons.imaging.internal.Debug.debug("Bad Type");
    }

    @Test
    void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = tiffRasterDataInt2.getIntValue(22, 11, 34712);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (22, 11)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort34, 6, tiffDirectoryType39, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType39);
        java.nio.ByteOrder byteOrder45 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat49 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray50 = photometricInterpreterFloat49.getMinXY();
        float float51 = photometricInterpreterFloat49.getMeanFound();
        float float52 = photometricInterpreterFloat49.getMaxFound();
        int[] intArray53 = photometricInterpreterFloat49.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel58 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray53, 25, 69, 65536, true);
        byte[] byteArray59 = tagInfoSLongs44.encodeValue(byteOrder45, intArray53);
        int[] intArray60 = tiffImageMetadata8.getFieldValue(tagInfoSLongs44);
        tiffImageMetadata8.add("262 (0x106: PhotometricInterpretation): ", "Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.0f + "'", float51 == 0.0f);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + Float.NEGATIVE_INFINITY + "'", float52 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNull(intArray60);
    }

    @Test
    void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement56 = tiffField53.getOversizeValueElement();
        java.lang.String str57 = tiffField53.toString();
        java.lang.Object obj58 = fieldTypeLong2.getValue(tiffField53);
        int int59 = tiffField53.getDirectoryType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = tiffField53.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@6179bd32");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(abstractTiffElement56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 31 + "'", int59 == 31);
    }

    @Test
    void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser68 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = tiffImageParser68.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage70 = tiffDirectory66.getTiffImage(tiffImagingParameters69);
        boolean boolean71 = tiffImagingParameters69.isSubImageSet();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tiffImagingParameters69);
        org.junit.Assert.assertNull(bufferedImage70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort10, 6, tiffDirectoryType15, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType15);
        java.nio.ByteOrder byteOrder21 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray26 = photometricInterpreterFloat25.getMinXY();
        float float27 = photometricInterpreterFloat25.getMeanFound();
        float float28 = photometricInterpreterFloat25.getMaxFound();
        int[] intArray29 = photometricInterpreterFloat25.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel34 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray29, 25, 69, 65536, true);
        byte[] byteArray35 = tagInfoSLongs20.encodeValue(byteOrder21, intArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader45 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder46 = tiffReader45.getByteOrder();
        byte[] byteArray48 = tagInfoByte43.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat51 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray52 = photometricInterpreterFloat51.getMinXY();
        byte[] byteArray53 = tagInfoSLongs20.encodeValue(byteOrder46, intArray52);
        int int54 = org.apache.commons.imaging.internal.SafeOperations.add(intArray52);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 0.0f + "'", float27 == 0.0f);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + Float.NEGATIVE_INFINITY + "'", float28 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType41 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType41.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("32771 (0x8003: Unknown Tag): ", 65, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("32771 (0x8003: Unknown Tag): ", 7, 29, tiffDirectoryType5, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PREVIEW_APPLICATION_VERSION;
        org.junit.Assert.assertNotNull(tagInfoAsciiOrByte0);
    }

    @Test
    void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataFloat3.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataFloat3.getValue(336, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (336, 4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong2 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray9 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray10 = tagInfoShortOrLong2.encodeValue(byteOrder3, intArray9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = null;
        float[] floatArray24 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray25 = tagInfoFloats19.encodeValue(byteOrder20, floatArray24);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField26 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong2, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat13, 32844, byteArray25);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data27 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 255, 6, byteArray25);
        long long28 = data27.offset;
        int int29 = data27.getDataLength();
        org.junit.Assert.assertNotNull(tagInfoShortOrLong2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 255L + "'", long28 == 255L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 12 + "'", int29 == 12);
    }

    @Test
    void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        java.io.OutputStream outputStream4 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType8);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = tagInfoByteOrShort9.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort19 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts20 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational21 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort26 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList28 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList28, abstractFieldTypeArray27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList28, tiffDirectoryType30);
        java.nio.ByteOrder byteOrder32 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray34 = tagInfoByte31.encodeValue(byteOrder32, (byte) 0);
        short[] shortArray35 = new short[] {};
        byte[] byteArray36 = tagInfoShortOrLongOrRational21.encodeValue(byteOrder32, shortArray35);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational37 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        short[] shortArray51 = new short[] {};
        byte[] byteArray52 = tagInfoShortOrLongOrRational37.encodeValue(byteOrder48, shortArray51);
        byte[] byteArray53 = tagInfoShorts20.encodeValue(byteOrder32, shortArray51);
        byte[] byteArray55 = tagInfoShort19.encodeValue(byteOrder32, (short) (byte) 10);
        byte[] byteArray62 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int63 = tagInfoDirectory18.getValue(byteOrder32, byteArray62);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort64 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort69 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray70 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort69 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList71 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList71, abstractFieldTypeArray70);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType73 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList71, tiffDirectoryType73);
        java.nio.ByteOrder byteOrder75 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray77 = tagInfoByte74.encodeValue(byteOrder75, (byte) 0);
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray87 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray82, 34713, (int) (byte) 0, false, (-65281));
        short short88 = tagInfoShort64.getValue(byteOrder75, byteArray87);
        byte[] byteArray89 = tagInfoByteOrShort9.encodeValue(byteOrder32, byteArray87);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet90 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder32);
        tiffOutputSet90.removeField(32768);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator93 = tiffOutputSet90.spliterator();
        tiffOutputSet90.setGpsInDegrees((double) 10L, (double) (-4));
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossy3.write(outputStream4, tiffOutputSet90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: outputStream");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort19);
        org.junit.Assert.assertNotNull(tagInfoShorts20);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational21);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational37);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1678379530 + "'", int63 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort64);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short88 + "' != '" + (short) 4096 + "'", short88 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator93);
    }

    @Test
    void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        int int19 = tiffOutputDirectory16.getItemLength();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField21 = tiffOutputDirectory16.findField(4);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", (int) (byte) 10, tiffDirectoryType29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 1, tiffDirectoryType29);
        tiffOutputDirectory16.add(tagInfoDouble32, (double) 32895);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType50 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType50, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort45, 65536, tiffDirectoryType50, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("", 8, 22, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("E", 7, (int) (short) 100, tiffDirectoryType50);
        double[] doubleArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoDoubles56, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"values\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
        org.junit.Assert.assertNull(tiffOutputField21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType29 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType29.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType50 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType50.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32773, (int) '#');
    }

    @Test
    void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        java.lang.String str80 = tiffOutputField74.toString();
        tiffOutputField74.setSortHint(32844);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType83 = tiffOutputField74.abstractFieldType;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertNotNull(abstractFieldType83);
    }

    @Test
    void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        byte[] byteArray52 = tiffField50.getByteArrayValue();
        int int53 = tiffField50.getDirectoryType();
        long[] longArray54 = tiffField50.getLongArrayValue();
        int[] intArray55 = tiffField50.getIntArrayValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 31 + "'", int53 == 31);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
    }

    @Test
    void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getOrCreateRootDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
    }

    @Test
    void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb dataParserRgb0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserRgb();
        int int1 = dataParserRgb0.getBasicChannelsCount();
        int int2 = dataParserRgb0.getBasicChannelsCount();
        int int3 = dataParserRgb0.getBasicChannelsCount();
        int[][][] intArray4 = new int[][][] {};
        java.awt.image.BufferedImage bufferedImage5 = null;
        org.apache.commons.imaging.formats.psd.PsdImageContents psdImageContents6 = null;
        // The following exception was thrown during execution in test generation
        try {
            dataParserRgb0.parseData(intArray4, bufferedImage5, psdImageContents6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getRaster()\" because \"bi\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(intArray4);
    }

    @Test
    void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub dataParserStub0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub();
        int int1 = dataParserStub0.getBasicChannelsCount();
        int int2 = dataParserStub0.getBasicChannelsCount();
        int int3 = dataParserStub0.getBasicChannelsCount();
        int int4 = dataParserStub0.getBasicChannelsCount();
        int int5 = dataParserStub0.getBasicChannelsCount();
        int int6 = dataParserStub0.getBasicChannelsCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = tiffRasterDataInt2.getIntValue(32897, 16, 32947);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32897, 16)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CONTRAST_1;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = tagInfoShort5.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("Tiff-Custom", 20, 32, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", (int) (short) -1, tiffDirectoryType6);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, 5, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (int) (short) 10, 17, tiffDirectoryType15, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("OversizeValueElement, tag: Unknown Tag, fieldType: hi!", (-16751104), (int) (short) -1, tiffDirectoryType15, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder1 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray7 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray8 = tagInfoShortOrLong0.encodeValue(byteOrder1, intArray7);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = null;
        float[] floatArray22 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray23 = tagInfoFloats17.encodeValue(byteOrder18, floatArray22);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField24 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat11, 32844, byteArray23);
        int int25 = tiffOutputField24.tag;
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType26 = tiffOutputField24.abstractFieldType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo27 = tiffOutputField24.tagInfo;
        org.junit.Assert.assertNotNull(tagInfoShortOrLong0);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50717 + "'", int25 == 50717);
        org.junit.Assert.assertNotNull(abstractFieldType26);
        org.junit.Assert.assertNotNull(tagInfo27);
    }

    @Test
    void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType9, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, 65536, tiffDirectoryType9, true);
        int int14 = fieldTypeShort4.getType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort23 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort28 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, abstractFieldTypeArray29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList30, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder34 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray36 = tagInfoByte33.encodeValue(byteOrder34, (byte) 0);
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray46 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray41, 34713, (int) (byte) 0, false, (-65281));
        short short47 = tagInfoShort23.getValue(byteOrder34, byteArray46);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray61 = tagInfoSRationals22.getValue(byteOrder34, byteArray60);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless62 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray60);
        java.nio.ByteOrder byteOrder63 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField65 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_19, (long) 34676, (long) 7, byteArray60, byteOrder63, 9);
        long[] longArray66 = tiffField65.getLongArrayValue();
        long long67 = tiffField65.getCount();
        java.lang.Object obj68 = tiffField65.getValue();
        java.lang.String str69 = tiffField65.toString();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement70 = tiffField65.getOversizeValueElement();
        java.lang.Object obj71 = fieldTypeShort4.getValue(tiffField65);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(tagInfoSRationals22);
        org.junit.Assert.assertNotNull(tagInfoShort23);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short47 + "' != '" + (short) 4096 + "'", short47 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray61);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[]");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 34676L + "'", long67 == 34676L);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str69, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(abstractTiffElement70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        int int78 = tiffOutputField74.getSortHint();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType79 = tiffOutputField74.abstractFieldType;
        java.lang.String str80 = tiffOutputField74.toString();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(abstractFieldType79);
    }

    @Test
    void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics();
        int int9 = tiffRasterDataInt2.getSamplesPerPixel();
        int int10 = tiffRasterDataInt2.getWidth();
        int int11 = tiffRasterDataInt2.getSamplesPerPixel();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData86 = tiffDirectory66.getTiffImageData();
        tiffDirectory66.dump();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong88 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_TILE_BYTE_COUNTS;
        // The following exception was thrown during execution in test generation
        try {
            int int89 = tiffDirectory66.getSingleFieldValue(tagInfoShortOrLong88);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"TileByteCounts\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNull(abstractTiffImageData86);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong88);
    }

    @Test
    void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setOutputSet(tiffOutputSet11);
        java.lang.String str13 = tiffImagingParameters10.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory14 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters10.setBufferedImageFactory(bufferedImageFactory14);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory16 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters10.setBufferedImageFactory(bufferedImageFactory16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<byte[]> byteArrayList18 = tiffImageParser0.collectRawImageData(byteSource4, tiffImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
    }

    @Test
    void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType9);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = tagInfoByteOrShort10.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", (-16759808), abstractFieldTypeList11, 15, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (-3), (-1), tiffDirectoryType27, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("SByte", 0, abstractFieldTypeList11, 9, tiffDirectoryType27, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong33 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_JPG_FROM_RAW_START_SUB_IFD;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = tagInfoLong33.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("JPEG image data: 1 bytes", 1678379530, abstractFieldTypeList11, 15, tiffDirectoryType34, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLong33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType34 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType34.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(0, "ImageLayer");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.String str57 = tiffField54.getValueDescription();
        int[] intArray58 = tiffField54.getIntArrayValue();
        java.lang.Object obj59 = fieldTypeByte3.getValue(tiffField54);
        java.lang.Object obj60 = fieldTypeRational2.getValue(tiffField54);
        java.lang.String str61 = tiffField54.getValueDescription();
        org.junit.Assert.assertNotNull(fieldTypeByte3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter4 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = tiffImageParser0.dumpImageFile(printWriter4, byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
        tiffOutputSet85.dump();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getRootDirectory();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator91 = tiffOutputSet85.spliterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNull(tiffOutputDirectory88);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator91);
    }

    @Test
    void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataFloat3.getSimpleStatistics((float) 80);
        // The following exception was thrown during execution in test generation
        try {
            float float12 = tiffRasterDataFloat3.getValue(32771, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32771, 29)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32946, (float) 32895);
        float float3 = photometricInterpreterFloat2.getMaxFound();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.NEGATIVE_INFINITY + "'", float3 == Float.NEGATIVE_INFINITY);
    }

    @Test
    void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters6.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters6.setBufferedImageFactory(bufferedImageFactory11);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters12.setFileName("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters12.asThis();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = tiffImageParser0.getIccProfileBytes(byteSource5, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
    }

    @Test
    void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(3, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        long[] longArray54 = tiffField53.getLongArrayValue();
        long long55 = tiffField53.getCount();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem57 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField53);
        java.lang.Object obj58 = tiffField53.getValue();
        java.lang.String str59 = tiffField53.getTagName();
        java.lang.Object obj60 = fieldTypeFloat2.getValue(tiffField53);
        int int61 = fieldTypeFloat2.getType();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 34676L + "'", long55 == 34676L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Unknown Tag (0x8003)" + "'", str59, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
    }

    @Test
    void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = tiffImageParser0.canAcceptExtension(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, 6, tiffDirectoryType18, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("A", (int) (short) 1, 80, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("[TagInfo. tag: 255 (0xff, name: TIFF Header]", 24, 34677, tiffDirectoryType18);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        java.lang.Integer int9 = tiffImagingParameters6.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setXmpXml("V");
        tiffImagingParameters11.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters11.setFileName("M");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<byte[]> byteArrayList15 = tiffImageParser0.collectRawImageData(byteSource5, tiffImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
    }

    @Test
    void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int int9 = tiffRasterDataInt2.getWidth();
        int int10 = tiffRasterDataInt2.getWidth();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics12 = tiffRasterDataInt2.getSimpleStatistics((float) 25);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics13 = tiffRasterDataInt2.getSimpleStatistics();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(tiffRasterStatistics12);
        org.junit.Assert.assertNotNull(tiffRasterStatistics13);
    }

    @Test
    void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(2189672, "MBad Type: \n\n");
    }

    @Test
    void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters0.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat10 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray11 = photometricInterpreterFloat10.getMinXY();
        float float12 = photometricInterpreterFloat10.getMeanFound();
        float float13 = photometricInterpreterFloat10.getMaxFound();
        float float14 = photometricInterpreterFloat10.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat10);
        int int17 = photometricInterpreterFloat10.mapValueToArgb((float) (-2));
        int[] intArray18 = photometricInterpreterFloat10.getMinXY();
        int int20 = photometricInterpreterFloat10.mapValueToArgb((float) 22);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + Float.NEGATIVE_INFINITY + "'", float13 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats18 = null;
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt21 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType22 = tiffRasterDataInt21.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics23 = tiffRasterDataInt21.getSimpleStatistics();
        float[] floatArray24 = tiffRasterDataInt21.getData();
        int int25 = tiffRasterDataInt21.getSamplesPerPixel();
        int[] intArray26 = tiffRasterDataInt21.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics27 = tiffRasterDataInt21.getSimpleStatistics();
        float[] floatArray28 = tiffRasterDataInt21.getData();
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoFloats18, floatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"length\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType22 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType22.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics23);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator87 = tiffOutputSet85.spliterator();
        tiffOutputSet85.removeField((int) (short) 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator87);
    }

    @Test
    void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        java.lang.String str80 = tiffOutputField77.toString("N");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo81 = tiffOutputField77.tagInfo;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfo81);
    }

    @Test
    void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts2 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort8 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, abstractFieldTypeArray9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList10, tiffDirectoryType12);
        java.nio.ByteOrder byteOrder14 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray16 = tagInfoByte13.encodeValue(byteOrder14, (byte) 0);
        short[] shortArray17 = new short[] {};
        byte[] byteArray18 = tagInfoShortOrLongOrRational3.encodeValue(byteOrder14, shortArray17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort24 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList26, abstractFieldTypeArray25);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList26, tiffDirectoryType28);
        java.nio.ByteOrder byteOrder30 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray32 = tagInfoByte29.encodeValue(byteOrder30, (byte) 0);
        short[] shortArray33 = new short[] {};
        byte[] byteArray34 = tagInfoShortOrLongOrRational19.encodeValue(byteOrder30, shortArray33);
        byte[] byteArray35 = tagInfoShorts2.encodeValue(byteOrder14, shortArray33);
        byte[] byteArray40 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray35, 1, (-65281), false, 7);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData41 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 21, 18, byteArray40);
        byte[] byteArray42 = jpegImageData41.getData();
        org.junit.Assert.assertNotNull(tagInfoShorts2);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational3);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational19);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0, 16]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 16]");
    }

    @Test
    void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList10 = tiffContents7.getElements();
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList11 = tiffContents7.getElements();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList12 = tiffContents7.tiffFields;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(abstractTiffElementList10);
        org.junit.Assert.assertNotNull(abstractTiffElementList11);
        org.junit.Assert.assertNotNull(tiffFieldList12);
    }

    @Test
    void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean1 = tiffImagingParameters0.isSubImageSet();
        int int2 = tiffImagingParameters0.getSubImageWidth();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.asThis();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet4 = tiffImagingParameters3.getOutputSet();
        java.lang.String str5 = tiffImagingParameters3.getXmpXml();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNull(tiffOutputSet4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_ALPHA_DATA_DISCARD;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField27 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte25, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText28 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_USER_COMMENT;
        java.lang.String str29 = tiffImageMetadata8.getFieldValue(tagInfoGpsText28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals37 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort38 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray61 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray56, 34713, (int) (byte) 0, false, (-65281));
        short short62 = tagInfoShort38.getValue(byteOrder49, byteArray61);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort67 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray68 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort67 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList69 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList69, abstractFieldTypeArray68);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType71 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList69, tiffDirectoryType71);
        java.nio.ByteOrder byteOrder73 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray75 = tagInfoByte72.encodeValue(byteOrder73, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray76 = tagInfoSRationals37.getValue(byteOrder49, byteArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless77 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray75);
        java.nio.ByteOrder byteOrder78 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField80 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_34, (long) 34676, (long) 7, byteArray75, byteOrder78, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType81 = tiffField80.getFieldType();
        boolean boolean82 = tiffField80.isLocalValue();
        java.lang.String str83 = tiffField80.getFieldTypeName();
        java.lang.String str84 = tiffField80.getValueDescription();
        java.lang.String str85 = tiffField80.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType86 = tiffField80.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = tagInfoGpsText28.getValue(tiffField80);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: GPS text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNotNull(tagInfoByte25);
        org.junit.Assert.assertNull(tiffField27);
        org.junit.Assert.assertNotNull(tagInfoGpsText28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(tagInfoSRationals37);
        org.junit.Assert.assertNotNull(tagInfoShort38);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short62 + "' != '" + (short) 4096 + "'", short62 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray76);
        org.junit.Assert.assertNotNull(abstractFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(abstractFieldType86);
    }

    @Test
    void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType63);
        tiffOutputDirectory16.add(tagInfoSShort64, (short) 10);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField68 = tiffOutputDirectory16.findField(65000);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData69 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType80 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("258 (0x102: BitsPerSample): ", 32, (int) (short) -1, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat88 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics89 = tiffRasterDataFloat88.getSimpleStatistics();
        int[] intArray90 = tiffRasterDataFloat88.getIntData();
        tiffOutputDirectory16.add(tagInfoShortOrLongOrRational84, intArray90);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertNull(tiffOutputField68);
        org.junit.Assert.assertNull(abstractTiffImageData69);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType80 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType80.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tiffRasterStatistics89);
        org.junit.Assert.assertNotNull(intArray90);
    }

    @Test
    void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData93 = tiffDirectory89.getTiffImageData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement94 = tiffDirectory89.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(abstractTiffImageData93);
    }

    @Test
    void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        boolean boolean6 = tiles5.stripsNotTiles();
        boolean boolean7 = tiles5.stripsNotTiles();
        int int8 = tiles5.getTileHeight();
        int int9 = tiles5.getTileHeight();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 14 + "'", int8 == 14);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 14 + "'", int9 == 14);
    }

    @Test
    void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "PreviewImageLength");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader3 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray4 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList5, tiffDirectoryArray4);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray7 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList8, tiffFieldArray7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents10 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList8);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata11 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents10);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = tiffImageMetadata11.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffImageMetadata11.getAllFields();
        tiffImageMetadata11.add("Tiff-Custom", "T");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort17 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts18 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort24 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList26, abstractFieldTypeArray25);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList26, tiffDirectoryType28);
        java.nio.ByteOrder byteOrder30 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray32 = tagInfoByte29.encodeValue(byteOrder30, (byte) 0);
        short[] shortArray33 = new short[] {};
        byte[] byteArray34 = tagInfoShortOrLongOrRational19.encodeValue(byteOrder30, shortArray33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational35 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        short[] shortArray49 = new short[] {};
        byte[] byteArray50 = tagInfoShortOrLongOrRational35.encodeValue(byteOrder46, shortArray49);
        byte[] byteArray51 = tagInfoShorts18.encodeValue(byteOrder30, shortArray49);
        byte[] byteArray53 = tagInfoShort17.encodeValue(byteOrder30, (short) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray54 = fieldTypeDouble2.writeData((java.lang.Object) "T", byteOrder30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid data: T (java.lang.String)");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(tiffContents12);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tagInfoShort17);
        org.junit.Assert.assertNotNull(tagInfoShorts18);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational19);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational35);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0]");
    }

    @Test
    void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addExifDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
    }

    @Test
    void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType63);
        tiffOutputDirectory16.add(tagInfoSShort64, (short) 10);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField68 = tiffOutputDirectory16.findField(65000);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData69 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader70 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray71 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList72 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList72, tiffDirectoryArray71);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray74 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList75 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList75, tiffFieldArray74);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents77 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader70, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList72, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList75);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata78 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents77);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType85);
        byte[] byteArray88 = tiffImageMetadata78.getFieldValue(tagInfoSBytes87);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString89 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str90 = tiffImageMetadata78.getFieldValue(tagInfoXpString89);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText91 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean92 = tagInfoGpsText91.isText();
        java.lang.String str93 = tiffImageMetadata78.getFieldValue(tagInfoGpsText91);
        tiffOutputDirectory16.add(tagInfoGpsText91, "JPEG image data: 1 bytes");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertNull(tiffOutputField68);
        org.junit.Assert.assertNull(abstractTiffImageData69);
        org.junit.Assert.assertNotNull(tiffDirectoryArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNotNull(tagInfoXpString89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(tagInfoGpsText91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration1 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf((-3));
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration1 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration1.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
    }

    @Test
    void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.DOUBLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType21, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort16, 65536, tiffDirectoryType21, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("", 8, 22, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("E", 7, (int) (short) 100, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Unknown Tag (0x8003): ", 25, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("262 (0x106: PhotometricInterpretation): ", (int) (byte) -1, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeDouble2, 88, tiffDirectoryType21, false);
        int int31 = fieldTypeDouble2.getSize();
        org.apache.commons.imaging.formats.tiff.TiffField tiffField32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fieldTypeDouble2.getValue(tiffField32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffField.getByteArrayValue()\" because \"entry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeDouble2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
    }

    @Test
    void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong((int) '4', "VBad Type: \n\nBad Type: \n\n");
    }

    @Test
    void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters0.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter8 = tiffImagingParameters7.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setCompression((java.lang.Integer) 93);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters7.setSubImage(2, 32769, 32947, 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity17 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters18 = tiffImagingParameters16.setPixelDensity(pixelDensity17);
        int int19 = tiffImagingParameters18.getSubImageY();
        java.lang.String str20 = tiffImagingParameters18.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory22 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter23 = null;
        int[] intArray29 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration36 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader38 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder39 = tiffReader38.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles40 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled41 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory22, photometricInterpreter23, 10, (int) (byte) 10, (-65281), intArray29, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration36, byteOrder39, tiles40);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb45 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(34676, intArray29, (int) (byte) -1, 4, 5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters46 = tiffImagingParameters18.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterRgb45);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters48 = tiffImagingParameters46.setFileName("TIFF Header");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat51 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray52 = photometricInterpreterFloat51.getMaxXY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters53 = tiffImagingParameters46.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat51);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters54 = tiffImagingParameters7.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat51);
        float float55 = photometricInterpreterFloat51.getMaxFound();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(photometricInterpreter8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNotNull(tiffImagingParameters18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration36 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration36.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(tiffImagingParameters46);
        org.junit.Assert.assertNotNull(tiffImagingParameters48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(tiffImagingParameters53);
        org.junit.Assert.assertNotNull(tiffImagingParameters54);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + Float.NEGATIVE_INFINITY + "'", float55 == Float.NEGATIVE_INFINITY);
    }

    @Test
    void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("280 (0x118: MinSampleValue): ", (int) (byte) 100, 7, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("JPEG image data: 1 bytes", (-6316129), tiffDirectoryType13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        float[] floatArray7 = tiffRasterDataFloat3.getData();
        int[] intArray8 = tiffRasterDataFloat3.getIntData();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(11, 89, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (11, 89)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(intArray8);
    }

    @Test
    void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType2);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs4 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_FREE_OFFSETS;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless52 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray50);
        java.nio.ByteOrder byteOrder53 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_9, (long) 34676, (long) 7, byteArray50, byteOrder53, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField55.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField55.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement58 = tiffField55.getOversizeValueElement();
        java.lang.Object obj59 = tagInfoLongs4.getValue(tiffField55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = tagInfoXpString3.getValue(tiffField55);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType2 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType2.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLongs4);
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertNotNull(abstractTiffElement58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        int int9 = tiffRasterDataInt2.getWidth();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics11 = tiffRasterDataInt2.getSimpleStatistics((float) (-2));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(tiffRasterStatistics11);
    }

    @Test
    void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(34661, "TIFF image data: 0 bytesBad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        long[] longArray54 = tiffField53.getLongArrayValue();
        long long55 = tiffField53.getCount();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        java.lang.Object obj57 = fieldTypeLong2.getValue(tiffField53);
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 34676L + "'", long55 == 34676L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        java.lang.String str1 = org.apache.commons.imaging.formats.tiff.TiffDirectory.description(51041);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Bad Type" + "'", str1, "Bad Type");
    }

    @Test
    void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int[] intArray55 = tiffField51.getIntArrayValue();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement58 = tiffField51.new OversizeValueElement((int) (short) 16, 16);
        java.lang.String str59 = oversizeValueElement58.getElementDescription();
        java.lang.String str60 = oversizeValueElement58.getElementDescription();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "OversizeValueElement, tag: Unknown Tag, fieldType: hi!" + "'", str59, "OversizeValueElement, tag: Unknown Tag, fieldType: hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "OversizeValueElement, tag: Unknown Tag, fieldType: hi!" + "'", str60, "OversizeValueElement, tag: Unknown Tag, fieldType: hi!");
    }

    @Test
    void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity2 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters1.setPixelDensity(pixelDensity2);
        int int4 = tiffImagingParameters3.getSubImageY();
        java.lang.String str5 = tiffImagingParameters3.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters3.asThis();
        int int7 = tiffImagingParameters6.getSubImageWidth();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters6.setPixelDensity(pixelDensity8);
        org.apache.commons.imaging.internal.Debug.debug("M", (java.lang.Object) tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
    }

    @Test
    void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_PHOTOMETRIC_INTERPRETATION;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong1 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_OFFSET_SCHEMA;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort11 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList13, abstractFieldTypeArray12);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList13, tiffDirectoryType15);
        java.nio.ByteOrder byteOrder17 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray19 = tagInfoByte16.encodeValue(byteOrder17, (byte) 0);
        byte[] byteArray21 = tagInfoDouble6.encodeValue(byteOrder17, (double) 32773);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational34 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort35 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts36 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational37 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        short[] shortArray51 = new short[] {};
        byte[] byteArray52 = tagInfoShortOrLongOrRational37.encodeValue(byteOrder48, shortArray51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        short[] shortArray67 = new short[] {};
        byte[] byteArray68 = tagInfoShortOrLongOrRational53.encodeValue(byteOrder64, shortArray67);
        byte[] byteArray69 = tagInfoShorts36.encodeValue(byteOrder48, shortArray67);
        byte[] byteArray71 = tagInfoShort35.encodeValue(byteOrder48, (short) (byte) 10);
        short[] shortArray73 = new short[] { (byte) 0 };
        byte[] byteArray74 = tagInfoShortOrRational34.encodeValue(byteOrder48, shortArray73);
        byte[] byteArray76 = tagInfoSByte33.encodeValue(byteOrder48, (byte) 0);
        byte[] byteArray78 = tagInfoDouble6.encodeValue(byteOrder48, (double) 77);
        byte[] byteArray80 = tagInfoSLong1.encodeValue(byteOrder48, 77);
        byte[] byteArray82 = tagInfoShort0.encodeValue(byteOrder48, (short) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray85 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressModifiedHuffman(byteArray82, 7, 34712);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to decompress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(tagInfoSLong1);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrRational34);
        org.junit.Assert.assertNotNull(tagInfoShort35);
        org.junit.Assert.assertNotNull(tagInfoShorts36);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational37);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational53);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[0]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 0, 0, 0, 0, 64, 83, 64]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[77, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 0]");
    }

    @Test
    void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        java.awt.Color color2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 29, (float) 37, color2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator90 = tiffOutputSet85.spliterator();
        java.lang.String str91 = tiffOutputSet85.toString();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor92 = tiffOutputSet85.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Gps (-3)\r\n\tdirectory 1: Root (0)\r\n\tdirectory 2: Exif (-2)\r\n\tdirectory 3: Interoperability (-4)\r\n}\r\n" + "'", str91, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Gps (-3)\r\n\tdirectory 1: Root (0)\r\n\tdirectory 2: Exif (-2)\r\n\tdirectory 3: Interoperability (-4)\r\n}\r\n");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor92);
    }

    @Test
    void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(64, "");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt5 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt5.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt5.getSimpleStatistics((float) 12);
        float[] floatArray9 = tiffRasterDataInt5.getData();
        int[] intArray10 = tiffRasterDataInt5.getIntData();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType26 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort21, 6, tiffDirectoryType26, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("TIFF image data: 0 bytesBad Type: \n\n", 34905, 48, tiffDirectoryType26);
        java.nio.ByteOrder byteOrder32 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat36 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray37 = photometricInterpreterFloat36.getMinXY();
        float float38 = photometricInterpreterFloat36.getMeanFound();
        float float39 = photometricInterpreterFloat36.getMaxFound();
        int[] intArray40 = photometricInterpreterFloat36.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel45 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(95, intArray40, 25, 69, 65536, true);
        byte[] byteArray46 = tagInfoSLongs31.encodeValue(byteOrder32, intArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader56 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder57 = tiffReader56.getByteOrder();
        byte[] byteArray59 = tagInfoByte54.encodeValue(byteOrder57, (byte) 0);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat62 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray63 = photometricInterpreterFloat62.getMinXY();
        byte[] byteArray64 = tagInfoSLongs31.encodeValue(byteOrder57, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray65 = fieldTypeByte2.writeData((java.lang.Object) tiffRasterDataInt5, byteOrder57);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid data: org.apache.commons.imaging.formats.tiff.TiffRasterDataInt@372df8dd (org.apache.commons.imaging.formats.tiff.TiffRasterDataInt)");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 0.0f + "'", float38 == 0.0f);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + Float.NEGATIVE_INFINITY + "'", float39 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType52 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType52.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub dataParserStub0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserStub();
        int int1 = dataParserStub0.getBasicChannelsCount();
        int int2 = dataParserStub0.getBasicChannelsCount();
        int int3 = dataParserStub0.getBasicChannelsCount();
        int int4 = dataParserStub0.getBasicChannelsCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType53);
        tiffOutputDirectory39.add(tagInfoFloat56, (float) 32803);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor60 = tiffOutputDirectory16.iterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator61 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType70 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType70);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader75 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder76 = tiffReader75.getByteOrder();
        byte[] byteArray78 = tagInfoSLong73.encodeValue(byteOrder76, 1678379530);
        tiffOutputDirectory16.add(tagInfoSLong73, 64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort81 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_SAMPLES_PER_PIXEL;
        tiffOutputDirectory16.add(tagInfoShort81, (short) 4096);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData84 = tiffOutputDirectory16.getRawJpegImageData();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType53 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType53.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor60);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator61);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType70 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType70.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[100, 10, 10, 10]");
        org.junit.Assert.assertNotNull(tagInfoShort81);
        org.junit.Assert.assertNull(jpegImageData84);
    }
}

