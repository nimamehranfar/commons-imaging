package org.apache.commons.imaging.randoop;

import org.junit.FixMethodOrder;
import org.junit.jupiter.api.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression8Test {

    public static boolean debug = false;

    @Test
    void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals21 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort27 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, abstractFieldTypeArray28);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, tiffDirectoryType31);
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray35 = tagInfoByte32.encodeValue(byteOrder33, (byte) 0);
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray45 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray40, 34713, (int) (byte) 0, false, (-65281));
        short short46 = tagInfoShort22.getValue(byteOrder33, byteArray45);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort51 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList53 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList53, abstractFieldTypeArray52);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList53, tiffDirectoryType55);
        java.nio.ByteOrder byteOrder57 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray59 = tagInfoByte56.encodeValue(byteOrder57, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray60 = tagInfoSRationals21.getValue(byteOrder33, byteArray59);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless61 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray59);
        java.nio.ByteOrder byteOrder62 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField64 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_18, (long) 34676, (long) 7, byteArray59, byteOrder62, 9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType67 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF image data: 0 bytes", (int) '#', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_18, 2, tiffDirectoryType67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("tif", 34712, (int) '4', tiffDirectoryType67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("MBad Type: \n\n", 0, 1678379530, tiffDirectoryType67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("32771 (0x8003: Unknown Tag):  (34676 hi!)Unknown Tag (0x8003): ", 32844, 255, tiffDirectoryType67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("Exif", 65535, 1, tiffDirectoryType67);
        org.junit.Assert.assertNotNull(tagInfoSRationals21);
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short46 + "' != '" + (short) 4096 + "'", short46 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType67 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType67.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImageParser0.getDefaultParameters();
        java.lang.String str6 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder7 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setPixelDensity(pixelDensity10);
        java.lang.Integer int12 = tiffImagingParameters9.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet15 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setOutputSet(tiffOutputSet15);
        java.lang.String str17 = tiffImagingParameters14.getXmpXml();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory18 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters14.setBufferedImageFactory(bufferedImageFactory18);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters21 = tiffImagingParameters14.setCompression((java.lang.Integer) 34661);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters23 = tiffImagingParameters14.setT6Options((java.lang.Integer) 32844);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension24 = tiffImageParser0.getImageSize(byteSource8, tiffImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tif" + "'", str6, "tif");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
        org.junit.Assert.assertNotNull(tiffImagingParameters21);
        org.junit.Assert.assertNotNull(tiffImagingParameters23);
    }

    @Test
    void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = tiffImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(64, 71, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

//    @Test
//    void test4005() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4005");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getOrCreateRootDirectory();
//        java.lang.String str89 = tiffOutputSet85.toString("E");
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getOrCreateGpsDirectory();
//        java.lang.String str91 = tiffOutputDirectory90.description();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
//        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n" + "'", str89, "ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
//        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Gps" + "'", str91, "Gps");
//    }

    @Test
    void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList7 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList7, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("Bad TypeUnknown Tag (0x8003): ", 65, 80, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n", 16, tiffDirectoryType14);
        org.junit.Assert.assertNotNull(abstractFieldTypeList7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii68 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_TRACK_REF;
        java.lang.String[] strArray69 = tiffImageMetadata8.getFieldValue(tagInfoAscii68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts70 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        java.lang.Object obj71 = tiffImageMetadata8.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts70);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory73 = tiffImageMetadata8.findDirectory(258);
        java.lang.String str75 = tiffImageMetadata8.toString("VBad Type: \n\n");
        tiffImageMetadata8.add("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ", "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(tagInfoAscii68);
        org.junit.Assert.assertNull(strArray69);
        org.junit.Assert.assertNotNull(tagInfoShorts70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(tiffDirectory73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        java.lang.String str52 = tiffField50.getDescriptionWithoutValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        java.lang.Object obj54 = tiffField50.getValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str52, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips4 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement dataElement6 = strips4.getImageData(277408);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 277408 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataElementArray0);
    }

    @Test
    void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(89, "");
    }

    @Test
    void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory6 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter7 = null;
        int[] intArray13 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration20 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader22 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder23 = tiffReader22.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles24 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled25 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory6, photometricInterpreter7, 10, (int) (byte) 10, (-65281), intArray13, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration20, byteOrder23, tiles24);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray13, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel34 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray13, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel39 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray13, 9, 13, 13, false);
        int int40 = org.apache.commons.imaging.internal.SafeOperations.add(intArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt41 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(64, 277408, 80, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 34905 + "'", int40 == 34905);
    }

    @Test
    void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("SLong");
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory14 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter15 = null;
        int[] intArray21 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration28 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader30 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder31 = tiffReader30.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles32 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled33 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory14, photometricInterpreter15, 10, (int) (byte) 10, (-65281), intArray21, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration28, byteOrder31, tiles32);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray21, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray21, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel47 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray21, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters48 = tiffImagingParameters5.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel47);
        int int49 = tiffImagingParameters48.getSubImageX();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters51 = tiffImagingParameters48.setT6Options((java.lang.Integer) 13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = tiffImageParser0.getMetadata(file4, tiffImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tiffImagingParameters48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters51);
    }

    @Test
    void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean8 = tiffDirectoryType7.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("TIFF Header", 73, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("Exif", 51041, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("Unknown Tag (0x8003): ", 277408, 32, tiffDirectoryType7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        java.awt.Color color1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue paletteEntryForValue2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue((float) 277408, color1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts80 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_KEY_DIRECTORY_TAG;
        short[] shortArray82 = tiffDirectory66.getFieldValue(tagInfoShorts80, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = tiffDirectory66.getFieldValue(tagInfoGpsText83, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertNotNull(tagInfoShorts80);
        org.junit.Assert.assertNull(shortArray82);
    }

    @Test
    void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(93, 32896);
    }

    @Test
    void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        tiffOutputSet85.removeField((int) '4');
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getGpsDirectory();
        tiffOutputSet85.removeField(34905);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
    }

    @Test
    void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.nio.ByteOrder byteOrder84 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts85 = null;
        short[] shortArray87 = tiffDirectory66.getFieldValue(tagInfoShorts85, false);
        java.awt.image.BufferedImage bufferedImage88 = tiffDirectory66.getTiffImage();
        long long89 = tiffDirectory66.getNextDirectoryOffset();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(shortArray87);
        org.junit.Assert.assertNull(bufferedImage88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 9L + "'", long89 == 9L);
    }

    @Test
    void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 43, 65536);
        java.lang.String str3 = stub2.getElementDescription();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Element, offset: 43, length: 65536, last: 65579" + "'", str3, "Element, offset: 43, length: 65536, last: 65579");
    }

    @Test
    void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        float float3 = photometricInterpreterFloat2.getMinFound();
        int[] intArray4 = photometricInterpreterFloat2.getMinXY();
        float float5 = photometricInterpreterFloat2.getMaxFound();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.POSITIVE_INFINITY + "'", float3 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + Float.NEGATIVE_INFINITY + "'", float5 == Float.NEGATIVE_INFINITY);
    }

    @Test
    void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CONTRAST_1;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = tagInfoShort5.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("hi!", (int) (byte) -1, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("15 (0xf: Unknown Tag (0x8003): ): ", (int) (short) 100, 34905, tiffDirectoryType6);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        java.lang.String str92 = directory91.toString();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData93 = directory91.getTiffImageData();
        java.awt.image.BufferedImage bufferedImage94 = directory91.getThumbnail();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Bad Type: \n\n" + "'", str92, "Bad Type: \n\n");
        org.junit.Assert.assertNull(abstractTiffImageData93);
        org.junit.Assert.assertNull(bufferedImage94);
    }

    @Test
    void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("ImageColorIndicator", 17, 13, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("Bad Type", 32946, (-3), tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n", 65536, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MAKE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((-1), "W");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("M", (int) (byte) -1, (int) (short) 100, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("N", 64, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort5, (int) '#', tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort17 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory18 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter19 = null;
        int[] intArray25 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration32 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader34 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder35 = tiffReader34.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles36 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled37 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory18, photometricInterpreter19, 10, (int) (byte) 10, (-65281), intArray25, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration32, byteOrder35, tiles36);
        byte[] byteArray39 = tagInfoShort17.encodeValue(byteOrder35, (short) 4096);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort5, 50717, byteArray39);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat43 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray44 = photometricInterpreterFloat43.getMinXY();
        float float45 = photometricInterpreterFloat43.getMeanFound();
        float float46 = photometricInterpreterFloat43.getMaxFound();
        int[] intArray47 = photometricInterpreterFloat43.getMaxXY();
        int[] intArray48 = photometricInterpreterFloat43.getMinXY();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("M", 34892, tiffDirectoryType57);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser61 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder62 = tiffImageParser61.getByteOrder();
        byte[] byteArray64 = tagInfoDouble60.encodeValue(byteOrder62, (double) 32771);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray65 = fieldTypeShort5.writeData((java.lang.Object) intArray48, byteOrder62);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid data: [I@13fbaa81 ([int[]: 2])");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShort17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[16, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.0f + "'", float45 == 0.0f);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + Float.NEGATIVE_INFINITY + "'", float46 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType57 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType57.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[64, -32, 0, 96, 0, 0, 0, 0]");
    }

    @Test
    void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts1 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MAX_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes2 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_CFAPATTERN_2;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray22 = tagInfoDouble7.encodeValue(byteOrder18, (double) 32773);
        byte[] byteArray23 = null;
        byte[] byteArray24 = tagInfoBytes2.encodeValue(byteOrder18, byteArray23);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType28);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList30 = tagInfoByteOrShort29.dataTypes;
        java.nio.ByteOrder byteOrder31 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts32 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational33 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        short[] shortArray47 = new short[] {};
        byte[] byteArray48 = tagInfoShortOrLongOrRational33.encodeValue(byteOrder44, shortArray47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational49 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        short[] shortArray63 = new short[] {};
        byte[] byteArray64 = tagInfoShortOrLongOrRational49.encodeValue(byteOrder60, shortArray63);
        byte[] byteArray65 = tagInfoShorts32.encodeValue(byteOrder44, shortArray63);
        byte[] byteArray66 = tagInfoByteOrShort29.encodeValue(byteOrder31, shortArray63);
        short[] shortArray67 = tagInfoShorts1.getValue(byteOrder18, byteArray66);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory68 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(95, byteOrder18);
        org.junit.Assert.assertNotNull(tagInfoShorts1);
        org.junit.Assert.assertNotNull(tagInfoBytes2);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList30);
        org.junit.Assert.assertNotNull(tagInfoShorts32);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational49);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
    }

    @Test
    void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts2 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts5 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals6 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder7 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        byte[] byteArray48 = tagInfoRationals6.encodeValue(byteOrder7, rationalNumberArray47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort49 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray72 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray67, 34713, (int) (byte) 0, false, (-65281));
        short short73 = tagInfoShort49.getValue(byteOrder60, byteArray72);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless74 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray72);
        short[] shortArray75 = tagInfoShorts5.getValue(byteOrder7, byteArray72);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField76 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts2, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational3, 32769, byteArray72);
        java.lang.String str78 = tiffOutputField76.toString("");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType79 = tiffOutputField76.abstractFieldType;
        int int80 = abstractFieldType79.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("258 (0x102: BitsPerSample): ", (-16759808), abstractFieldType79);
        org.junit.Assert.assertNotNull(tagInfoShorts2);
        org.junit.Assert.assertNotNull(fieldTypeRational3);
        org.junit.Assert.assertNotNull(tagInfoShorts5);
        org.junit.Assert.assertNotNull(tagInfoRationals6);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort49);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short73 + "' != '" + (short) 4096 + "'", short73 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[4096]");
        org.junit.Assert.assertNotNull(abstractFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 5 + "'", int80 == 5);
    }

    @Test
    void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii69 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_DISTANCE_REF;
        java.lang.String[] strArray71 = tiffDirectory66.getFieldValue(tagInfoAscii69, false);
        tiffDirectory66.dump();
        java.lang.String str73 = tiffDirectory66.getElementDescription();
        boolean boolean74 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tagInfoAscii69);
        org.junit.Assert.assertNull(strArray71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals7 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder8 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort15 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList17 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, abstractFieldTypeArray16);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder21 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray23 = tagInfoByte20.encodeValue(byteOrder21, (byte) 0);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray33 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray28, 34713, (int) (byte) 0, false, (-65281));
        short short34 = tagInfoShort10.getValue(byteOrder21, byteArray33);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray48 = tagInfoSRationals9.getValue(byteOrder21, byteArray47);
        byte[] byteArray49 = tagInfoRationals7.encodeValue(byteOrder8, rationalNumberArray48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort50 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray73 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray68, 34713, (int) (byte) 0, false, (-65281));
        short short74 = tagInfoShort50.getValue(byteOrder61, byteArray73);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless75 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray73);
        short[] shortArray76 = tagInfoShorts6.getValue(byteOrder8, byteArray73);
        int[] intArray77 = new int[] {};
        byte[] byteArray78 = tagInfoShortOrLongOrRational5.encodeValue(byteOrder8, intArray77);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory79 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(34905, byteOrder8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts6);
        org.junit.Assert.assertNotNull(tagInfoRationals7);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short34 + "' != '" + (short) 4096 + "'", short34 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort50);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short74 + "' != '" + (short) 4096 + "'", short74 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[4096]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
    }

//    @Test
//    void test4029() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4029");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        tiffOutputSet85.removeField(32768);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
//        tiffOutputSet85.removeField(6);
//        java.lang.String str93 = tiffOutputSet85.toString("TIFF image data: 0 bytesBad Type: \n\n");
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = tiffOutputSet85.getOrCreateGpsDirectory();
//        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor95 = tiffOutputDirectory94.iterator();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
//        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "TIFF image data: 0 bytesBad Type: \n\nTiffOutputSet {\r\nTIFF image data: 0 bytesBad Type: \n\nbyteOrder: LITTLE_ENDIAN\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 0: Gps (-3)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 1: Root (0)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 2: Exif (-2)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 3: Interoperability (-4)\r\nTIFF image data: 0 bytesBad Type: \n\n}\r\n" + "'", str93, "TIFF image data: 0 bytesBad Type: \n\nTiffOutputSet {\r\nTIFF image data: 0 bytesBad Type: \n\nbyteOrder: LITTLE_ENDIAN\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 0: Gps (-3)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 1: Root (0)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 2: Exif (-2)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 3: Interoperability (-4)\r\nTIFF image data: 0 bytesBad Type: \n\n}\r\n");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
//        org.junit.Assert.assertNotNull(tiffOutputFieldItor95);
//    }

    @Test
    void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble((int) (byte) 0, "M");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, tiffDirectoryType11);
        java.lang.String str15 = fieldTypeShort7.getName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong16 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless64 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray62);
        java.nio.ByteOrder byteOrder65 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField67 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_21, (long) 34676, (long) 7, byteArray62, byteOrder65, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType68 = tiffField67.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType69 = tiffField67.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement70 = tiffField67.getOversizeValueElement();
        int int71 = tiffField67.getOffset();
        int int72 = tiffField67.getDirectoryType();
        java.lang.Object obj73 = fieldTypeLong16.getValue(tiffField67);
        java.lang.Object obj74 = fieldTypeShort7.getValue(tiffField67);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem75 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField67);
        int int76 = tiffField67.getSortHint();
        java.lang.Object obj77 = fieldTypeDouble2.getValue(tiffField67);
        java.lang.String str78 = tiffField67.getTagName();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(fieldTypeLong16);
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(abstractFieldType68);
        org.junit.Assert.assertNotNull(abstractFieldType69);
        org.junit.Assert.assertNotNull(abstractTiffElement70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 31 + "'", int72 == 31);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 9 + "'", int76 == 9);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Unknown Tag (0x8003)" + "'", str78, "Unknown Tag (0x8003)");
    }

    @Test
    void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("TIFF image data: 0 bytesBad Type: \n\n", 4, tiffDirectoryType2);
    }

    @Test
    void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(9, (-16714752), (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (9, -16714752)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 1, "hi!");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SLONG8;
        int int4 = fieldTypeLong8_3.getSize();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless52 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray50);
        java.nio.ByteOrder byteOrder53 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_9, (long) 34676, (long) 7, byteArray50, byteOrder53, 9);
        long[] longArray56 = tiffField55.getLongArrayValue();
        long long57 = tiffField55.getCount();
        java.lang.String str58 = tiffField55.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem59 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField55);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField60 = tiffMetadataItem59.getTiffField();
        java.lang.Object obj61 = fieldTypeLong8_3.getValue(tiffField60);
        java.lang.String str62 = tiffField60.getDescriptionWithoutValue();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement63 = tiffField60.getOversizeValueElement();
        java.lang.Object obj64 = fieldTypeFloat2.getValue(tiffField60);
        org.junit.Assert.assertNotNull(fieldTypeLong8_3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 34676L + "'", long57 == 34676L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(tiffField60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str62, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertNotNull(abstractTiffElement63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational85 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_FOCAL_PLANE_XRESOLUTION;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber86 = tiffDirectory66.getFieldValue(tagInfoRational85);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"FocalPlaneXResolution\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(tagInfoRational85);
    }

    @Test
    void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 52, (float) 1678379530, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("S", (int) (byte) 100, (int) (short) 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText("ImageColorIndicator", 43, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte12 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort21 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort26 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList28 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList28, abstractFieldTypeArray27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList28, tiffDirectoryType30);
        java.nio.ByteOrder byteOrder32 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray34 = tagInfoByte31.encodeValue(byteOrder32, (byte) 0);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray44 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray39, 34713, (int) (byte) 0, false, (-65281));
        short short45 = tagInfoShort21.getValue(byteOrder32, byteArray44);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort50 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList52 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, abstractFieldTypeArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, tiffDirectoryType54);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoByte55.encodeValue(byteOrder56, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray59 = tagInfoSRationals20.getValue(byteOrder32, byteArray58);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless60 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray58);
        java.nio.ByteOrder byteOrder61 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField63 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_17, (long) 34676, (long) 7, byteArray58, byteOrder61, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType64 = tiffField63.getFieldType();
        boolean boolean65 = tiffField63.isLocalValue();
        java.lang.Object obj66 = fieldTypeByte12.getValue(tiffField63);
        int int67 = tiffField63.getSortHint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = tagInfoGpsText11.getValue(tiffField63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: GPS text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(fieldTypeByte12);
        org.junit.Assert.assertNotNull(tagInfoSRationals20);
        org.junit.Assert.assertNotNull(tagInfoShort21);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short45 + "' != '" + (short) 4096 + "'", short45 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray59);
        org.junit.Assert.assertNotNull(abstractFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 9 + "'", int67 == 9);
    }

    @Test
    void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab24 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab((int) (short) 1, intArray8, 32769, 3, (int) (byte) 10);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder25 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray30 = photometricInterpreterFloat29.getMinXY();
        float float31 = photometricInterpreterFloat29.getMeanFound();
        float float32 = photometricInterpreterFloat29.getMaxFound();
        int[] intArray33 = photometricInterpreterFloat29.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab((int) (short) 0, intArray33, 1, (int) (short) 1, 18);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterCieLab24.interpretPixel(imageBuilder25, intArray33, 17, 34905);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.0f + "'", float31 == 0.0f);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + Float.NEGATIVE_INFINITY + "'", float32 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
    }

    @Test
    void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        float[] floatArray8 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataFloat3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics11 = tiffRasterDataFloat3.getSimpleStatistics((float) (-3));
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertNotNull(tiffRasterStatistics11);
    }

    @Test
    void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData86 = tiffDirectory66.getTiffImageData();
        int int87 = tiffDirectory66.size();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNull(abstractTiffImageData86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata32 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType39 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte40 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType39);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType39);
        byte[] byteArray42 = tiffImageMetadata32.getFieldValue(tagInfoSBytes41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString43 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str44 = tiffImageMetadata32.getFieldValue(tagInfoXpString43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText45 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean46 = tagInfoGpsText45.isText();
        java.lang.String str47 = tiffImageMetadata32.getFieldValue(tagInfoGpsText45);
        java.lang.String str48 = tiffImageMetadata8.getFieldValue(tagInfoGpsText45);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents49 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata50 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents49);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader51 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray52 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList53 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList53, tiffDirectoryArray52);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray55 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList56, tiffFieldArray55);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents58 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader51, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList53, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList56);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata59 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType66);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType66);
        byte[] byteArray69 = tiffImageMetadata59.getFieldValue(tagInfoSBytes68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString70 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str71 = tiffImageMetadata59.getFieldValue(tagInfoXpString70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts72 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_JPEG_LOSSLESS_PREDICTORS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField73 = tiffImageMetadata59.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals74 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_COLOR_MATRIX_1;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray75 = tiffImageMetadata59.getFieldValue(tagInfoSRationals74);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray76 = tiffImageMetadata50.getFieldValue(tagInfoSRationals74);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType80 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("SLong", 255, 32897, tiffDirectoryType80);
        double[] doubleArray82 = tiffImageMetadata50.getFieldValue(tagInfoDoubles81);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory84 = tiffImageMetadata50.findDirectory(79);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts85 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_JPEG_LOSSLESS_PREDICTORS;
        java.lang.Object obj86 = tiffImageMetadata50.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts85);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType39 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType39.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(tagInfoXpString43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(tagInfoGpsText45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(tiffContents49);
        org.junit.Assert.assertNotNull(tiffDirectoryArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType66 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType66.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNotNull(tagInfoXpString70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(tagInfoShorts72);
        org.junit.Assert.assertNull(tiffField73);
        org.junit.Assert.assertNotNull(tagInfoSRationals74);
        org.junit.Assert.assertNull(rationalNumberArray75);
        org.junit.Assert.assertNull(rationalNumberArray76);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType80 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType80.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertNull(tiffDirectory84);
        org.junit.Assert.assertNotNull(tagInfoShorts85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataInt2.getValue(37, 16, 1678379530);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (37, 16)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt2.getDataType();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics(0.0f);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
    }

    @Test
    void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray8 = tiffRasterDataInt2.getData();
        // The following exception was thrown during execution in test generation
        try {
            float float12 = tiffRasterDataInt2.getValue(6, (-65536), 17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (6, -65536)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) '#', "A");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4);
    }

    @Test
    void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals2 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray28 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray23, 34713, (int) (byte) 0, false, (-65281));
        short short29 = tagInfoShort5.getValue(byteOrder16, byteArray28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray43 = tagInfoSRationals4.getValue(byteOrder16, byteArray42);
        byte[] byteArray44 = tagInfoRationals2.encodeValue(byteOrder3, rationalNumberArray43);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData45 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 32768, 20, byteArray44);
        int int46 = jpegImageData45.getDataLength();
        org.junit.Assert.assertNotNull(tagInfoRationals2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tagInfoSRationals4);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short29 + "' != '" + (short) 4096 + "'", short29 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(65000, (int) (short) 100, 22, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (65000, 100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder4 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        int int10 = tiffImagingParameters9.getSubImageY();
        java.lang.String str11 = tiffImagingParameters9.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter12 = tiffImagingParameters9.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setLzwCompressionBlockSize((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = tiffImageParser0.getIccProfileBytes(byteSource6, tiffImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(photometricInterpreter12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
    }

    @Test
    void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = directory72.getOutputDirectory(byteOrder91);
        java.awt.image.BufferedImage bufferedImage95 = directory72.getThumbnail();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList96 = directory72.getAllFields();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertNull(bufferedImage95);
        org.junit.Assert.assertNotNull(tiffFieldList96);
    }

    @Test
    void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("S", 65, (int) (byte) -1, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        short[] shortArray29 = new short[] {};
        byte[] byteArray30 = tagInfoShortOrLongOrRational15.encodeValue(byteOrder26, shortArray29);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat33 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int[] intArray34 = photometricInterpreterFloat33.getMaxXY();
        byte[] byteArray35 = tagInfoShortOrLong14.encodeValue(byteOrder26, intArray34);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk39 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(77, intArray34, (int) ' ', 80, 32769);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder40 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory46 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter47 = null;
        int[] intArray53 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration60 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader62 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder63 = tiffReader62.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles64 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled65 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory46, photometricInterpreter47, 10, (int) (byte) 10, (-65281), intArray53, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration60, byteOrder63, tiles64);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab69 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray53, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel74 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray53, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel79 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray53, 9, 13, 13, false);
        int int80 = org.apache.commons.imaging.internal.SafeOperations.add(intArray53);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv84 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(32897, intArray53, 22, (int) (byte) -1, (int) 'a');
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv photometricInterpreterLogLuv88 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv(19, intArray53, 43, 32845, 1751720192);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterCmyk39.interpretPixel(imageBuilder40, intArray53, (-65281), 65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration60 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration60.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 34905 + "'", int80 == 34905);
    }

    @Test
    void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        long long68 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        int int72 = tiffImagingParameters71.getSubImageY();
        int int73 = tiffImagingParameters71.getSubImageWidth();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.PixelDensity pixelDensity75 = tiffImagingParameters71.getPixelDensity();
        java.lang.Integer int76 = tiffImagingParameters71.getT6Options();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 9L + "'", long68 == 9L);
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(pixelDensity75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(32769, 8, 88, (float) 50725);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32769, 8)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        long long68 = tiffDirectory66.getNextDirectoryOffset();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        int int72 = tiffImagingParameters71.getSubImageY();
        int int73 = tiffImagingParameters71.getSubImageWidth();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber76 = tiffDirectory66.getFieldValue(tagInfoRational75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 9L + "'", long68 == 9L);
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(bufferedImage74);
    }

    @Test
    void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData68 = tiffDirectory66.getJpegImageData();
        boolean boolean69 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort82 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType86 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType86, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort82, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType86);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong93 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("ImageColorIndicator", 0, 32897, tiffDirectoryType86, false);
        int[] intArray95 = tiffDirectory66.getFieldValue(tagInfoShortOrLong93, false);
        java.lang.String str96 = tagInfoShortOrLong93.name;
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNull(jpegImageData68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType86 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType86.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(intArray95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "ImageColorIndicator" + "'", str96, "ImageColorIndicator");
    }

    @Test
    void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter5 = tiffImagingParameters2.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setLzwCompressionBlockSize((java.lang.Integer) 1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters7.setT4Options((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(photometricInterpreter5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
    }

    @Test
    void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.lang.String str2 = tiffImageParser0.getName();
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters4.setPixelDensity(pixelDensity5);
        int int7 = tiffImagingParameters6.getSubImageY();
        java.lang.String str8 = tiffImagingParameters6.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters6.asThis();
        int int10 = tiffImagingParameters9.getSubImageWidth();
        org.apache.commons.imaging.PixelDensity pixelDensity11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters9.setPixelDensity(pixelDensity11);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setReadThumbnails(true);
        java.lang.Integer int15 = tiffImagingParameters9.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters9.setCompression((java.lang.Integer) (-65281));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo18 = tiffImageParser0.getImageInfo(file3, tiffImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Tiff-Custom" + "'", str2, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
    }

    @Test
    void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort5 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList7, abstractFieldTypeArray6);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList7, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder11 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray13 = tagInfoByte10.encodeValue(byteOrder11, (byte) 0);
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray23 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray18, 34713, (int) (byte) 0, false, (-65281));
        short short24 = tagInfoShort0.getValue(byteOrder11, byteArray23);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless25 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray23);
        java.io.OutputStream outputStream26 = null;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffImageWriterLossless25.write(outputStream26, tiffOutputSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.write.TiffOutputSet.findField(org.apache.commons.imaging.formats.tiff.taginfos.TagInfo)\" because \"outputSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short24 + "' != '" + (short) 4096 + "'", short24 == (short) 4096);
    }

    @Test
    void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.Object obj53 = tiffField50.getValue();
        java.lang.String str54 = tiffField50.toString();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement55 = tiffField50.getOversizeValueElement();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement56 = tiffField50.getOversizeValueElement();
        int int57 = abstractTiffElement56.length;
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str54, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(abstractTiffElement55);
        org.junit.Assert.assertNotNull(abstractTiffElement56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataInt3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt3.getSimpleStatistics();
        float[] floatArray6 = tiffRasterDataInt3.getData();
        int int7 = tiffRasterDataInt3.getSamplesPerPixel();
        int[] intArray8 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataInt3.getDataType();
        int[] intArray10 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics11 = tiffRasterDataInt3.getSimpleStatistics();
        boolean boolean12 = tiffRasterStatistics11.isAnExcludedValueSet();
        int int13 = tiffRasterStatistics11.getCountOfNulls();
        org.apache.commons.imaging.internal.Debug.debug("Bad Type", (java.lang.Object) tiffRasterStatistics11);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips4 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 0);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray5 = strips4.getImageData();
        boolean boolean6 = strips4.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertNotNull(dataElementArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(48, "ImageDataElement");
    }

    @Test
    void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser69 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImageParser69.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory67.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder0, tiffDirectory67);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData73 = directory72.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory74 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter75 = null;
        int[] intArray81 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration88 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader90 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder91 = tiffReader90.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles92 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled93 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory74, photometricInterpreter75, 10, (int) (byte) 10, (-65281), intArray81, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration88, byteOrder91, tiles92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = directory72.getOutputDirectory(byteOrder91);
        int int95 = directory72.type;
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertNull(abstractTiffImageData73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 88 + "'", int95 == 88);
    }

    @Test
    void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray4 = photometricInterpreterFloat3.getMinXY();
        float float5 = photometricInterpreterFloat3.getMeanFound();
        int int7 = photometricInterpreterFloat3.mapValueToArgb((float) 88);
        int[] intArray8 = photometricInterpreterFloat3.getMaxXY();
        int[] intArray9 = photometricInterpreterFloat3.getMinXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb photometricInterpreterRgb13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb(51041, intArray9, (int) (short) 100, 0, 1678379530);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder14 = null;
        int[] intArray19 = new int[] { (byte) 1, 14, 22 };
        int int20 = org.apache.commons.imaging.internal.SafeOperations.add(intArray19);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(37, intArray19, 0, 6, 13, false);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterRgb13.interpretPixel(imageBuilder14, intArray19, 2, (int) (short) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.ImageBuilder.setRgb(int, int, int)\" because \"imageBuilder\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 37 + "'", int20 == 37);
    }

    @Test
    void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii68 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_TRACK_REF;
        java.lang.String[] strArray69 = tiffImageMetadata8.getFieldValue(tagInfoAscii68);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals70 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CAMERA_CALIBRATION_1;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tiffImageMetadata8.getFieldValue(tagInfoSRationals70);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("N", (int) '4', 34712, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("hi!", (int) ' ', 32809, tiffDirectoryType84);
        short[] shortArray89 = tiffImageMetadata8.getFieldValue(tagInfoSShorts88);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(tagInfoAscii68);
        org.junit.Assert.assertNull(strArray69);
        org.junit.Assert.assertNotNull(tagInfoSRationals70);
        org.junit.Assert.assertNull(rationalNumberArray71);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType84 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType84.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(shortArray89);
    }

    @Test
    void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataInt2.getSimpleStatistics((float) (-3L));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
    }

    @Test
    void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        int int19 = tiffOutputDirectory16.getItemLength();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField21 = tiffOutputDirectory16.findField(4);
        tiffOutputDirectory16.removeField(32768);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong24 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_TILE_BYTE_COUNTS;
        tiffOutputDirectory16.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
        org.junit.Assert.assertNull(tiffOutputField21);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong24);
    }

    @Test
    void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong86 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_RELATED_IMAGE_WIDTH;
        // The following exception was thrown during execution in test generation
        try {
            int int87 = tiffDirectory66.getSingleFieldValue(tagInfoShortOrLong86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"RelatedImageWidth\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong86);
    }

    @Test
    void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType5);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational10 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII_OR_RATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("S", (-65536), abstractFieldTypeList13, 0, tiffDirectoryType21, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("W", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational10, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder29 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray35 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray36 = tagInfoShortOrLong28.encodeValue(byteOrder29, intArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = null;
        float[] floatArray50 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray51 = tagInfoFloats45.encodeValue(byteOrder46, floatArray50);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField52 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong28, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat39, 32844, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField53 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShort7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational10, 14, byteArray51);
        java.lang.String str55 = tiffOutputField53.toString("Float");
        int int56 = tiffOutputField53.count;
        tiffOutputField53.setSortHint((int) (byte) 10);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffOutputField53.abstractFieldType;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType5 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType5.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(fieldTypeRational10);
        org.junit.Assert.assertNotNull(abstractFieldTypeList13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 14 + "'", int56 == 14);
        org.junit.Assert.assertNotNull(abstractFieldType59);
    }

    @Test
    void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(25, 1751720192, 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (25, 1751720192)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.awt.image.BufferedImage bufferedImage3 = null;
        java.io.OutputStream outputStream4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        tiffImagingParameters10.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters10.setFileName("M");
        org.apache.commons.imaging.PixelDensity pixelDensity14 = tiffImagingParameters10.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters10.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters18 = tiffImagingParameters16.setFileName("VBad Type: \n\n");
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage3, outputStream4, tiffImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNull(pixelDensity14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
        org.junit.Assert.assertNotNull(tiffImagingParameters18);
    }

    @Test
    void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean1 = tiffImagingParameters0.isSubImageSet();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.asThis();
        int int3 = tiffImagingParameters2.getSubImageX();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        java.lang.String str78 = tiffOutputField74.toString("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        tiffOutputField74.setSortHint(24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo81 = tiffOutputField74.tagInfo;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo81);
    }

    @Test
    void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        java.lang.Integer int6 = tiffImagingParameters2.getT6Options();
        int int7 = tiffImagingParameters2.getSubImageX();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab dataParserLab0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserLab();
        int int1 = dataParserLab0.getBasicChannelsCount();
        int int2 = dataParserLab0.getBasicChannelsCount();
        int int3 = dataParserLab0.getBasicChannelsCount();
        int int4 = dataParserLab0.getBasicChannelsCount();
        int[] intArray9 = new int[] { 12, 32908, 6, 77 };
        int[] intArray14 = new int[] { 12, 32908, 6, 77 };
        int[] intArray19 = new int[] { 12, 32908, 6, 77 };
        int[] intArray24 = new int[] { 12, 32908, 6, 77 };
        int[] intArray29 = new int[] { 12, 32908, 6, 77 };
        int[] intArray34 = new int[] { 12, 32908, 6, 77 };
        int[][] intArray35 = new int[][] { intArray9, intArray14, intArray19, intArray24, intArray29, intArray34 };
        int[][][] intArray36 = new int[][][] { intArray35 };
        java.awt.image.BufferedImage bufferedImage37 = null;
        org.apache.commons.imaging.formats.psd.PsdImageContents psdImageContents38 = null;
        // The following exception was thrown during execution in test generation
        try {
            dataParserLab0.parseData(intArray36, bufferedImage37, psdImageContents38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getRaster()\" because \"bi\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[12, 32908, 6, 77]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[12, 32908, 6, 77]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[12, 32908, 6, 77]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[12, 32908, 6, 77]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[12, 32908, 6, 77]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[12, 32908, 6, 77]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray36);
    }

    @Test
    void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(14, 9, 32803);
    }

    @Test
    void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        java.awt.Color color2 = null;
        java.awt.Color color3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange paletteEntryForRange4 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForRange((float) 32773, (float) 50717, color2, color3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        int int52 = tiffField50.getSortHint();
        int int53 = tiffField50.getOffset();
        java.nio.ByteOrder byteOrder54 = tiffField50.getByteOrder();
        java.lang.String str55 = tiffField50.getValueDescription();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9 + "'", int52 == 9);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNull(byteOrder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryList89 = tiffOutputSet85.getDirectories();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getInteroperabilityDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryList89);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
    }

    @Test
    void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        int int3 = strips2.getImageDataLength();
        int int4 = strips2.rowsPerStrip;
        boolean boolean5 = strips2.stripsNotTiles();
        int int6 = strips2.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray7 = strips2.getImageData();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32844 + "'", int4 == 32844);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32844 + "'", int6 == 32844);
        org.junit.Assert.assertNotNull(dataElementArray7);
    }

    @Test
    void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.getSortHint();
        tiffOutputField74.setSortHint(64);
        int int80 = tiffOutputField74.count;
        java.lang.String str81 = tiffOutputField74.toString();
        int int82 = tiffOutputField74.count;
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType83 = tiffOutputField74.abstractFieldType;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 32769 + "'", int80 == 32769);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 32769 + "'", int82 == 32769);
        org.junit.Assert.assertNotNull(abstractFieldType83);
    }

    @Test
    void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = tiffImageParser0.getMetadata(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
    }

    @Test
    void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType3);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort9 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, abstractFieldTypeArray10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder15 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray17 = tagInfoByte14.encodeValue(byteOrder15, (byte) 0);
        byte[] byteArray19 = tagInfoDouble4.encodeValue(byteOrder15, (double) 32773);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray55 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray50, 34713, (int) (byte) 0, false, (-65281));
        short short56 = tagInfoShort32.getValue(byteOrder43, byteArray55);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort61 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList63 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, abstractFieldTypeArray62);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, tiffDirectoryType65);
        java.nio.ByteOrder byteOrder67 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray69 = tagInfoByte66.encodeValue(byteOrder67, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray70 = tagInfoSRationals31.getValue(byteOrder43, byteArray69);
        byte[] byteArray72 = tagInfoSByte30.encodeValue(byteOrder43, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader76 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder43, 23, (long) 64, true);
        java.nio.ByteOrder byteOrder77 = tiffHeader76.byteOrder;
        byte[] byteArray79 = tagInfoDouble4.encodeValue(byteOrder77, (double) (short) 4096);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet80 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder77);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory81 = tiffOutputSet80.addGpsDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals31);
        org.junit.Assert.assertNotNull(tagInfoShort32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 4096 + "'", short56 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0, 0, 0, 0, 0, 0, -80, 64]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory81);
    }

    @Test
    void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        int int4 = tiffRasterDataInt2.getSamplesPerPixel();
        int int5 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt2.getSimpleStatistics((float) 7);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(29, 65000, (int) (byte) 10, 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (29, 65000)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        java.lang.String str80 = tiffOutputField77.toString("TIFF image data: 0 bytesBad Type: \n\n");
        int int81 = tiffOutputField77.tag;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 50717 + "'", int81 == 50717);
    }

    @Test
    void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SLONG;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG8;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort15 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList17 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, abstractFieldTypeArray16);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder21 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray23 = tagInfoByte20.encodeValue(byteOrder21, (byte) 0);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray33 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray28, 34713, (int) (byte) 0, false, (-65281));
        short short34 = tagInfoShort10.getValue(byteOrder21, byteArray33);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray48 = tagInfoSRationals9.getValue(byteOrder21, byteArray47);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless49 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray47);
        java.nio.ByteOrder byteOrder50 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField52 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, (long) 34676, (long) 7, byteArray47, byteOrder50, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType53 = tiffField52.getFieldType();
        byte[] byteArray54 = tiffField52.getByteArrayValue();
        java.lang.Object obj55 = fieldTypeLong8_1.getValue(tiffField52);
        long[] longArray56 = tiffField52.getLongArrayValue();
        java.lang.Object obj57 = fieldTypeLong0.getValue(tiffField52);
        java.io.PrintWriter printWriter58 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField52.dump(printWriter58, "262 (0x106: PhotometricInterpretation): ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeLong0);
        org.junit.Assert.assertNotNull(fieldTypeLong8_1);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short34 + "' != '" + (short) 4096 + "'", short34 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray48);
        org.junit.Assert.assertNotNull(abstractFieldType53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0]");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd1 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_SUB_IFD;
        java.nio.ByteOrder byteOrder2 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals9 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder10 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray51 = tagInfoRationals9.encodeValue(byteOrder10, rationalNumberArray50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort52 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray75 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray70, 34713, (int) (byte) 0, false, (-65281));
        short short76 = tagInfoShort52.getValue(byteOrder63, byteArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless77 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray75);
        short[] shortArray78 = tagInfoShorts8.getValue(byteOrder10, byteArray75);
        int[] intArray79 = new int[] {};
        byte[] byteArray80 = tagInfoShortOrLongOrRational7.encodeValue(byteOrder10, intArray79);
        byte[] byteArray81 = tagInfoLongOrIfd1.encodeValue(byteOrder2, intArray79);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk85 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(9, intArray79, (int) '4', 34905, 32947);
        org.junit.Assert.assertNotNull(tagInfoLongOrIfd1);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts8);
        org.junit.Assert.assertNotNull(tagInfoRationals9);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort52);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short76 + "' != '" + (short) 4096 + "'", short76 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[4096]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
    }

    @Test
    void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 34677, (float) 100);
    }

    @Test
    void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor69 = tiffDirectory66.iterator();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffFieldItor69);
    }

    @Test
    void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType6);
        java.nio.ByteOrder byteOrder8 = null;
        float[] floatArray12 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray13 = tagInfoFloats7.encodeValue(byteOrder8, floatArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat14 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(29, 65, 37, floatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
    }

    @Test
    void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoSByte36.encodeValue(byteOrder37, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory40 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder37);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData41 = tiffOutputDirectory40.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory40.add(tagInfoByte42, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField46 = tiffOutputDirectory40.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType54);
        tiffOutputDirectory40.add(tagInfoFloat57, (float) 32803);
        tiffOutputDirectory16.add(tagInfoFloat57, (float) (short) -1);
        int int62 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType67 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("Unknown Tag (0x8003): ", 14, 255, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: -1, length: 97, last: 96", 65536, abstractFieldType67, 88, tiffDirectoryType82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("Bad TypeUnknown Tag (0x8003): ", 80, tiffDirectoryType82);
        tiffOutputDirectory16.add(tagInfoXpString89, "");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray92 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips94 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray92, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray95 = strips94.getImageData();
        int int96 = strips94.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray97 = strips94.getImageData();
        tiffOutputDirectory16.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) strips94);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType33 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType33.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData41);
        org.junit.Assert.assertNotNull(tagInfoByte42);
        org.junit.Assert.assertNull(tiffOutputField46);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 31 + "'", int62 == 31);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType82 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType82.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(dataElementArray92);
        org.junit.Assert.assertNotNull(dataElementArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(dataElementArray97);
    }

    @Test
    void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getName();
        java.nio.ByteOrder byteOrder5 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = tiffImageParser0.canAcceptType(imageFormat6);
        java.lang.String str8 = tiffImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tif" + "'", str8, "tif");
    }

    @Test
    void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("S", 65, (int) (byte) -1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType40);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType40);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader44 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder45 = tiffReader44.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy46 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts49 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational50 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        short[] shortArray64 = new short[] {};
        byte[] byteArray65 = tagInfoShortOrLongOrRational50.encodeValue(byteOrder61, shortArray64);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational66 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort71 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, abstractFieldTypeArray72);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, tiffDirectoryType75);
        java.nio.ByteOrder byteOrder77 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray79 = tagInfoByte76.encodeValue(byteOrder77, (byte) 0);
        short[] shortArray80 = new short[] {};
        byte[] byteArray81 = tagInfoShortOrLongOrRational66.encodeValue(byteOrder77, shortArray80);
        byte[] byteArray82 = tagInfoShorts49.encodeValue(byteOrder61, shortArray80);
        byte[] byteArray84 = tagInfoShort48.encodeValue(byteOrder61, (short) (byte) 10);
        short[] shortArray86 = new short[] { (byte) 0 };
        byte[] byteArray87 = tagInfoShortOrRational47.encodeValue(byteOrder61, shortArray86);
        byte[] byteArray88 = tagInfoByteOrShort42.encodeValue(byteOrder45, shortArray86);
        tiffOutputDirectory16.add(tagInfoShortOrLong34, shortArray86);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField91 = tiffOutputDirectory16.findField(19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType40 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType40.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(tagInfoShorts49);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational50);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational66);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[0]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0, 0]");
        org.junit.Assert.assertNull(tiffOutputField91);
    }

    @Test
    void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = tiffImageParser0.dumpImageFile(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType18, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort14, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("M", 7, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("A", 65000, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n", (int) (short) -1, (int) (short) 16, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("Element, offset: -1, length: 97, last: 96", (-3), 24, tiffDirectoryType18);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.Object obj57 = fieldTypeByte3.getValue(tiffField54);
        java.lang.Object obj58 = fieldTypeFloat2.getValue(tiffField54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = tiffField54.getTagInfo();
        java.lang.String str60 = tiffField54.getFieldTypeName();
        java.lang.String str61 = tiffField54.getFieldTypeName();
        int int62 = tiffField54.getBytesLength();
        org.junit.Assert.assertNotNull(fieldTypeByte3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(tagInfo59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 277408 + "'", int62 == 277408);
    }

    @Test
    void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(65536, 336, 42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.common.AllocationRequestException; message: Allocation limit 1,073,741,824 exceeded: 3,699,376,128");
        } catch (org.apache.commons.imaging.common.AllocationRequestException e) {
            // Expected exception.
        }
    }

    @Test
    void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        long long58 = tiffHeader56.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder59 = tiffHeader56.byteOrder;
        java.lang.String str60 = tiffHeader56.getElementDescription();
        boolean boolean61 = tiffHeader56.bigTiff;
        java.lang.String str62 = tiffHeader56.getElementDescription();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "TIFF Header" + "'", str60, "TIFF Header");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "TIFF Header" + "'", str62, "TIFF Header");
    }

    @Test
    void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((int) (byte) 0, "Bad Type");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("N", 22, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeAscii6);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = tagInfo7.dataTypes;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType23, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort19, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("S", 34661, (int) ' ', tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("AUnknown Tag (0x8003): ", 69, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("TTiffOutputSet {\r\nTbyteOrder: LITTLE_ENDIAN\r\nT\tdirectory 0: Gps (-3)\r\nT}\r\n", 277408, abstractFieldTypeList8, (int) (byte) 0, tiffDirectoryType23, false);
        org.junit.Assert.assertNotNull(abstractFieldTypeList8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte((int) (byte) 0, "OversizeValueElement, tag: Unknown Tag, fieldType: hi!Unknown Tag (0x8003): ");
    }

    @Test
    void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int[] intArray9 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataInt2.getSimpleStatistics();
        int[] intArray11 = tiffRasterDataInt2.getIntData();
        int int12 = org.apache.commons.imaging.internal.SafeOperations.add(intArray11);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = tiffImageParser0.getMetadata(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
    }

    @Test
    void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType78, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType85);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte87 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("ImageLayer", (-4), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort74, tiffDirectoryType85);
        java.lang.Object obj88 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte87);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData89 = tiffDirectory66.getJpegImageData();
        boolean boolean90 = tiffDirectory66.hasTiffRasterData();
        boolean boolean91 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs92 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_FREE_OFFSETS;
        int[] intArray94 = tiffDirectory66.getFieldValue(tagInfoLongs92, false);
        boolean boolean95 = tiffDirectory66.hasTiffImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType85 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType85.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(jpegImageData89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(tagInfoLongs92);
        org.junit.Assert.assertNull(intArray94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType10, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("M", 95, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("M", 20, 65536, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("Unknown Tag (0x8003)", 17, tiffDirectoryType10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        boolean boolean68 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii69 = org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants.EXIF_TAG_GDAL_NO_DATA;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement71 = tiffDirectory66.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(tagInfoAscii69);
        org.junit.Assert.assertNull(tiffField70);
    }

    @Test
    void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        int int85 = tiffDirectory66.type;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters86 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity87 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters88 = tiffImagingParameters86.setPixelDensity(pixelDensity87);
        java.lang.Integer int89 = tiffImagingParameters86.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters91 = tiffImagingParameters86.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet92 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters93 = tiffImagingParameters91.setOutputSet(tiffOutputSet92);
        java.lang.Integer int94 = tiffImagingParameters91.getLzwCompressionBlockSize();
        java.awt.image.BufferedImage bufferedImage95 = tiffDirectory66.getTiffImage(tiffImagingParameters91);
        boolean boolean96 = tiffImagingParameters91.isSubImageSet();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 88 + "'", int85 == 88);
        org.junit.Assert.assertNotNull(tiffImagingParameters88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(tiffImagingParameters91);
        org.junit.Assert.assertNotNull(tiffImagingParameters93);
        org.junit.Assert.assertNull(int94);
        org.junit.Assert.assertNull(bufferedImage95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType14, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort10, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("hi!", (int) (short) 10, (int) (byte) -1, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("GPSAltitude", 19, 0, tiffDirectoryType14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics();
        float[] floatArray6 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataFloat3.getDataType();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) (short) 1, Float.POSITIVE_INFINITY);
    }

    @Test
    void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType26 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort24, 5, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("S", 32946, 34712, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("ImageLayer", (int) ' ', (int) (byte) -1, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 32896, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("S", 32844, 17, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("13 (0xd: E): ", 12, 32947, tiffDirectoryType26, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("ColorSpace", 32773, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("", 32768, tiffDirectoryType13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = tiffImagingParameters0.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals2 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort4 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts5 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort11 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList13 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList13, abstractFieldTypeArray12);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList13, tiffDirectoryType15);
        java.nio.ByteOrder byteOrder17 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray19 = tagInfoByte16.encodeValue(byteOrder17, (byte) 0);
        short[] shortArray20 = new short[] {};
        byte[] byteArray21 = tagInfoShortOrLongOrRational6.encodeValue(byteOrder17, shortArray20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational22 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort27 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, abstractFieldTypeArray28);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, tiffDirectoryType31);
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray35 = tagInfoByte32.encodeValue(byteOrder33, (byte) 0);
        short[] shortArray36 = new short[] {};
        byte[] byteArray37 = tagInfoShortOrLongOrRational22.encodeValue(byteOrder33, shortArray36);
        byte[] byteArray38 = tagInfoShorts5.encodeValue(byteOrder17, shortArray36);
        byte[] byteArray40 = tagInfoShort4.encodeValue(byteOrder17, (short) (byte) 10);
        short[] shortArray42 = new short[] { (byte) 0 };
        byte[] byteArray43 = tagInfoShortOrRational3.encodeValue(byteOrder17, shortArray42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals44 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort45 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort50 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList52 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, abstractFieldTypeArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, tiffDirectoryType54);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoByte55.encodeValue(byteOrder56, (byte) 0);
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray68 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray63, 34713, (int) (byte) 0, false, (-65281));
        short short69 = tagInfoShort45.getValue(byteOrder56, byteArray68);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray75 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort74 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList76 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, abstractFieldTypeArray75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, tiffDirectoryType78);
        java.nio.ByteOrder byteOrder80 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray82 = tagInfoByte79.encodeValue(byteOrder80, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray83 = tagInfoSRationals44.getValue(byteOrder56, byteArray82);
        byte[] byteArray84 = tagInfoSRationals2.encodeValue(byteOrder17, rationalNumberArray83);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder17);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory86 = tiffOutputSet85.addExifDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.addRootDirectory();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters88 = tiffImagingParameters0.setOutputSet(tiffOutputSet85);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.getGpsDirectory();
        org.junit.Assert.assertNull(pixelDensity1);
        org.junit.Assert.assertNotNull(tagInfoSRationals2);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational3);
        org.junit.Assert.assertNotNull(tagInfoShort4);
        org.junit.Assert.assertNotNull(tagInfoShorts5);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational6);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational22);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals44);
        org.junit.Assert.assertNotNull(tagInfoShort45);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short69 + "' != '" + (short) 4096 + "'", short69 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
        org.junit.Assert.assertNotNull(tiffImagingParameters88);
        org.junit.Assert.assertNull(tiffOutputDirectory89);
    }

    @Test
    void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData75 = tiffDirectory66.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns85 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_HISTORY;
        java.lang.Object obj86 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns85);
        java.lang.String str87 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals88 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray90 = tiffDirectory66.getFieldValue(tagInfoSRationals88, false);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData91 = tiffDirectory66.getTiffImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(abstractTiffImageData75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(tagInfoUnknowns85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(tagInfoSRationals88);
        org.junit.Assert.assertNull(rationalNumberArray90);
        org.junit.Assert.assertNotNull(abstractTiffImageData91);
    }

    @Test
    void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getValueDescription();
        int int54 = tiffField50.getOffset();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo55 = tiffField50.getTagInfo();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement58 = tiffField50.new OversizeValueElement((int) (byte) 1, 32946);
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(tagInfo55);
    }

    @Test
    void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata25 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents24);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("", 12, tiffDirectoryType28);
        byte[] byteArray30 = tiffImageMetadata25.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte) tagInfoUnknown29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType50 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("Unknown Tag (0x8003): ", 14, 255, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("ImageColorIndicator", (int) (short) 1, 65, tiffDirectoryType50);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("Bad Type", 32895, (int) '#', tiffDirectoryType50);
        double[] doubleArray58 = tiffImageMetadata25.getFieldValue(tagInfoDoubles57);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType50 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType50.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(doubleArray58);
    }

    @Test
    void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat3 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) (short) 1, (float) 32771);
        float float4 = photometricInterpreterFloat3.getMeanFound();
        int[] intArray5 = photometricInterpreterFloat3.getMaxXY();
        float float6 = photometricInterpreterFloat3.getMinFound();
        float float7 = photometricInterpreterFloat3.getMaxFound();
        int[] intArray8 = photometricInterpreterFloat3.getMaxXY();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(255, intArray8, 20, 0, 14, true);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + Float.POSITIVE_INFINITY + "'", float6 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + Float.NEGATIVE_INFINITY + "'", float7 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
    }

    @Test
    void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT4Options((java.lang.Integer) 34661);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters9.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters9.setXmpXml("");
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
    }

    @Test
    void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean1 = tiffImagingParameters0.isSubImageSet();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setFileName("ImageDataElement");
        java.lang.Integer int4 = tiffImagingParameters3.getT6Options();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNull(int4);
    }

    @Test
    void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str55 = tiffMetadataItem54.getKeyword();
        java.lang.String str57 = tiffMetadataItem54.toString("Bad Type");
        java.lang.String str59 = tiffMetadataItem54.toString("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        java.lang.String str60 = tiffMetadataItem54.getKeyword();
        java.lang.String str61 = tiffMetadataItem54.toString();
        java.lang.String str62 = tiffMetadataItem54.getText();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Unknown Tag (0x8003)" + "'", str55, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Bad TypeUnknown Tag (0x8003): " + "'", str57, "Bad TypeUnknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): " + "'", str59, "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Unknown Tag (0x8003)" + "'", str60, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Unknown Tag (0x8003): " + "'", str61, "Unknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nTiffOutputSet {\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\nbyteOrder: LITTLE_ENDIAN\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 0: Exif (-2)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n\tdirectory 1: Root (0)\r\nTiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n}\r\n", 7, (int) (byte) 0, tiffDirectoryType3);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts5 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_SUB_SAMPLING;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals17 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort18 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort23 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList25 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, abstractFieldTypeArray24);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, tiffDirectoryType27);
        java.nio.ByteOrder byteOrder29 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray31 = tagInfoByte28.encodeValue(byteOrder29, (byte) 0);
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray41 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray36, 34713, (int) (byte) 0, false, (-65281));
        short short42 = tagInfoShort18.getValue(byteOrder29, byteArray41);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort47 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort47 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList49 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList49, abstractFieldTypeArray48);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType51 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList49, tiffDirectoryType51);
        java.nio.ByteOrder byteOrder53 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray55 = tagInfoByte52.encodeValue(byteOrder53, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray56 = tagInfoSRationals17.getValue(byteOrder29, byteArray55);
        byte[] byteArray58 = tagInfoSByte16.encodeValue(byteOrder29, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader62 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder29, 23, (long) 64, true);
        long long63 = tiffHeader62.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder64 = tiffHeader62.byteOrder;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType73 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType73);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType73);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType73);
        java.nio.ByteOrder byteOrder77 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray79 = tagInfoSByte76.encodeValue(byteOrder77, (byte) 0);
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressModifiedHuffman(byteArray79, 9006, 0);
        short[] shortArray83 = tagInfoShorts5.getValue(byteOrder64, byteArray82);
        byte[] byteArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = tagInfoLongs4.getValue(byteOrder64, byteArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"bytes\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShorts5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals17);
        org.junit.Assert.assertNotNull(tagInfoShort18);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short42 + "' != '" + (short) 4096 + "'", short42 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100]");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 64L + "'", long63 == 64L);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType73 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType73.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
    }

    @Test
    void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData36 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData36);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField39 = tiffOutputDirectory16.findField(29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory16.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts44);
        java.lang.String str46 = tiffOutputDirectory16.description();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffOutputField39);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Bad Type" + "'", str46, "Bad Type");
    }

    @Test
    void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator88 = tiffOutputSet85.spliterator();
        tiffOutputSet85.dump();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getOrCreateGpsDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
    }

    @Test
    void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        tiffDirectory66.dump();
        boolean boolean77 = tiffDirectory66.hasTiffRasterData();
        java.nio.ByteOrder byteOrder78 = tiffDirectory66.getByteOrder();
        boolean boolean79 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("JPEG image data: 1 bytes", 23, 65535, tiffDirectoryType3);
    }

    @Test
    void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.imaging.internal.Debug.debug(throwable0, 4);
    }

    @Test
    void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) '#');
        int int6 = tiffRasterStatistics5.getCountOfSamples();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
    }

    @Test
    void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles19 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader21 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder22 = tiffReader21.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = tagInfoRationals23.encodeValue(byteOrder24, rationalNumberArray64);
        double[] doubleArray66 = tagInfoDoubles19.getValue(byteOrder22, byteArray65);
        double[] doubleArray67 = tiffImageMetadata8.getFieldValue(tagInfoDoubles19);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort83 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType87 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType87, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort83, tiffDirectoryType87);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType87);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte92 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType87);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("ImageColorIndicator", 0, 32897, tiffDirectoryType87, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n", (-16751104), 29, tiffDirectoryType87);
        java.lang.String[] strArray96 = tiffImageMetadata8.getFieldValue(tagInfoAscii95);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts97 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_EXTRA_SAMPLES;
        short[] shortArray98 = tiffImageMetadata8.getFieldValue(tagInfoShorts97);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoDoubles19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(tagInfoRationals23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType87 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType87.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(strArray96);
        org.junit.Assert.assertNotNull(tagInfoShorts97);
        org.junit.Assert.assertNull(shortArray98);
    }

    @Test
    void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT6Options((java.lang.Integer) 35);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setReadThumbnails(false);
        int int12 = tiffImagingParameters11.getSubImageHeight();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory86 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getGpsDirectory();
        java.nio.ByteOrder byteOrder88 = tiffOutputSet85.byteOrder;
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
    }

    @Test
    void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        boolean boolean92 = tiffDirectory89.hasTiffImageData();
        boolean boolean93 = tiffDirectory89.hasTiffFloatingPointRasterData();
        boolean boolean94 = tiffDirectory89.hasTiffRasterData();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList10 = tiffContents8.directories;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList11 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType22, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort27 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts28 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational29 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        short[] shortArray43 = new short[] {};
        byte[] byteArray44 = tagInfoShortOrLongOrRational29.encodeValue(byteOrder40, shortArray43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational45 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort50 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList52 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, abstractFieldTypeArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, tiffDirectoryType54);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoByte55.encodeValue(byteOrder56, (byte) 0);
        short[] shortArray59 = new short[] {};
        byte[] byteArray60 = tagInfoShortOrLongOrRational45.encodeValue(byteOrder56, shortArray59);
        byte[] byteArray61 = tagInfoShorts28.encodeValue(byteOrder40, shortArray59);
        byte[] byteArray63 = tagInfoShort27.encodeValue(byteOrder40, (short) (byte) 10);
        byte[] byteArray65 = tagInfoSLong26.encodeValue(byteOrder40, 24);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(17, tiffFieldList11, (long) 89, (long) 89, byteOrder40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement> imageDataElementList67 = tiffDirectory66.getTiffRawImageDataElements();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffDirectoryList10);
        org.junit.Assert.assertNotNull(tiffFieldList11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort27);
        org.junit.Assert.assertNotNull(tagInfoShorts28);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational45);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[24, 0, 0, 0]");
    }

    @Test
    void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(0, "ImageLayer");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        java.lang.String str55 = tiffField53.getDescriptionWithoutValue();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        java.lang.Object obj57 = fieldTypeRational2.getValue(tiffField53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = tiffField53.getTagInfo();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = tiffField53.getTagInfo();
        java.lang.String str60 = tiffField53.toString();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str55, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(tagInfo58);
        org.junit.Assert.assertNotNull(tagInfo59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str60, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
    }

    @Test
    void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32898, (int) (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat2.getSimpleStatistics((float) 3);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat2.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat2.getSimpleStatistics((float) 29);
        tiffRasterDataFloat2.setIntValue(4, 37, (-5));
        float float14 = tiffRasterDataFloat2.getValue(19, 12);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
    }

    @Test
    void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader3 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder4 = tiffReader3.getByteOrder();
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        byte[] byteArray10 = tagInfoLongs1.encodeValue(byteOrder4, intArray8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr14 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr((-16759808), intArray8, 18, 50717, 15);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder15 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat18 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat(0.0f, (float) 50717);
        int[] intArray19 = photometricInterpreterFloat18.getMaxXY();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr14.interpretPixel(imageBuilder15, intArray19, 34712, 34661);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongs1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
    }

    @Test
    void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        int int6 = tiffImagingParameters5.getSubImageWidth();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setPixelDensity(pixelDensity7);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setReadThumbnails(true);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters10.asThis();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
    }

    @Test
    void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray4 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray0, 93, 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"buf\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(34677, "[TagInfo. tag: 10 (0xa, name: GPSMeasureMode]");
    }

    @Test
    void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat(0.0f, (float) 32896);
        int[] intArray3 = photometricInterpreterFloat2.getMinXY();
        float float4 = photometricInterpreterFloat2.getMaxFound();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + Float.NEGATIVE_INFINITY + "'", float4 == Float.NEGATIVE_INFINITY);
    }

    @Test
    void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 21);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = tiffRasterDataInt2.getIntValue(22, (int) (byte) 1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (22, 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setPixelDensity(pixelDensity8);
        int int10 = tiffImagingParameters9.getSubImageY();
        java.lang.String str11 = tiffImagingParameters9.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter12 = tiffImagingParameters9.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters14.setLzwCompressionBlockSize((java.lang.Integer) 1);
        java.lang.Integer int17 = tiffImagingParameters14.getT4Options();
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage5, outputStream6, tiffImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(photometricInterpreter12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType8, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, tiffDirectoryType8);
        java.lang.String str12 = fieldTypeShort4.getName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong13 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals21 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort22 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort27 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray28 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort27 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, abstractFieldTypeArray28);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList29, tiffDirectoryType31);
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray35 = tagInfoByte32.encodeValue(byteOrder33, (byte) 0);
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray45 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray40, 34713, (int) (byte) 0, false, (-65281));
        short short46 = tagInfoShort22.getValue(byteOrder33, byteArray45);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort51 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList53 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList53, abstractFieldTypeArray52);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList53, tiffDirectoryType55);
        java.nio.ByteOrder byteOrder57 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray59 = tagInfoByte56.encodeValue(byteOrder57, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray60 = tagInfoSRationals21.getValue(byteOrder33, byteArray59);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless61 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray59);
        java.nio.ByteOrder byteOrder62 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField64 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_18, (long) 34676, (long) 7, byteArray59, byteOrder62, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType65 = tiffField64.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType66 = tiffField64.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement67 = tiffField64.getOversizeValueElement();
        int int68 = tiffField64.getOffset();
        int int69 = tiffField64.getDirectoryType();
        java.lang.Object obj70 = fieldTypeLong13.getValue(tiffField64);
        java.lang.Object obj71 = fieldTypeShort4.getValue(tiffField64);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem72 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField64);
        java.lang.String str74 = tiffMetadataItem72.toString("A");
        java.lang.String str75 = tiffMetadataItem72.getKeyword();
        java.lang.String str76 = tiffMetadataItem72.getText();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(fieldTypeLong13);
        org.junit.Assert.assertNotNull(tagInfoSRationals21);
        org.junit.Assert.assertNotNull(tagInfoShort22);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short46 + "' != '" + (short) 4096 + "'", short46 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray60);
        org.junit.Assert.assertNotNull(abstractFieldType65);
        org.junit.Assert.assertNotNull(abstractFieldType66);
        org.junit.Assert.assertNotNull(abstractTiffElement67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 31 + "'", int69 == 31);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AUnknown Tag (0x8003): " + "'", str74, "AUnknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Unknown Tag (0x8003)" + "'", str75, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setReadThumbnails(false);
        int[] intArray8 = new int[] { (byte) 1, 14, 22 };
        int int9 = org.apache.commons.imaging.internal.SafeOperations.add(intArray8);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab13 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray8, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters3.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterCieLab13);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters14.asThis();
        boolean boolean16 = tiffImagingParameters15.isSubImageSet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 37 + "'", int9 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((int) (short) 4096, "SLong");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        long[] longArray54 = tiffField53.getLongArrayValue();
        long long55 = tiffField53.getCount();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem57 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField53);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField58 = tiffMetadataItem57.getTiffField();
        byte[] byteArray59 = tiffField58.getByteArrayValue();
        long long60 = tiffField58.getCount();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement63 = tiffField58.new OversizeValueElement((int) (short) 100, 29);
        java.nio.ByteOrder byteOrder64 = tiffField58.getByteOrder();
        java.lang.Object obj65 = fieldTypeAscii2.getValue(tiffField58);
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 34676L + "'", long55 == 34676L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(tiffField58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0]");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 34676L + "'", long60 == 34676L);
        org.junit.Assert.assertNull(byteOrder64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
    }

    @Test
    void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int4 = tiffRasterDataInt3.getHeight();
        int[] intArray5 = tiffRasterDataInt3.getIntData();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk9 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(24, intArray5, 34712, (int) (byte) 100, 258);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder10 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader13 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder14 = tiffReader13.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy15 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder14);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat18 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray19 = photometricInterpreterFloat18.getMinXY();
        float float20 = photometricInterpreterFloat18.getMeanFound();
        float float21 = photometricInterpreterFloat18.getMaxFound();
        int[] intArray22 = photometricInterpreterFloat18.getMaxXY();
        byte[] byteArray23 = tagInfoShortOrLongOrRational11.encodeValue(byteOrder14, intArray22);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterCmyk9.interpretPixel(imageBuilder10, intArray22, 93, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 0.0f + "'", float20 == 0.0f);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + Float.NEGATIVE_INFINITY + "'", float21 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters68 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity69 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters70 = tiffImagingParameters68.setPixelDensity(pixelDensity69);
        int int71 = tiffImagingParameters70.getSubImageY();
        java.lang.String str72 = tiffImagingParameters70.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter73 = tiffImagingParameters70.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters70);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList75 = tiffDirectory66.getDirectoryEntries();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips78 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray76, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles81 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray76, (int) (short) 1, 14);
        boolean boolean82 = tiles81.stripsNotTiles();
        boolean boolean83 = tiles81.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles81);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator85 = tiffDirectory66.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement86 = tiffDirectory66.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tiffImagingParameters70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(photometricInterpreter73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNotNull(tiffFieldList75);
        org.junit.Assert.assertNotNull(dataElementArray76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator85);
    }

    @Test
    void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration1 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(65535);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration1 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration1.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
    }

    @Test
    void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(34905, "");
    }

    @Test
    void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "N");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("13 (0xd: E): ", 65535, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeDouble4);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField56.getFieldType();
        boolean boolean58 = tiffField56.isLocalValue();
        int int59 = tiffField56.getTag();
        java.lang.Object obj60 = fieldTypeDouble4.getValue(tiffField56);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = tiffField56.getIntValueOrArraySum();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@36b2bbff for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32771 + "'", int59 == 32771);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        int int19 = tiffOutputDirectory16.getItemLength();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField21 = tiffOutputDirectory16.findField(4);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_AREA_INFORMATION;
        tiffOutputDirectory16.add(tagInfoGpsText23, "280 (0x118: MinSampleValue): ");
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData26 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoLong27, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"length\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
        org.junit.Assert.assertNull(tiffOutputField21);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertNotNull(tagInfoGpsText23);
        org.junit.Assert.assertNull(abstractTiffImageData26);
    }

    @Test
    void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 32897);
        // The following exception was thrown during execution in test generation
        try {
            float float12 = tiffRasterDataFloat3.getValue(0, 50725, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 50725)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
    }

    @Test
    void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData68 = tiffDirectory66.getJpegImageData();
        java.lang.String str69 = tiffDirectory66.description();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNull(jpegImageData68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Bad Type" + "'", str69, "Bad Type");
    }

    @Test
    void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters0.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat10 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray11 = photometricInterpreterFloat10.getMinXY();
        float float12 = photometricInterpreterFloat10.getMeanFound();
        float float13 = photometricInterpreterFloat10.getMaxFound();
        float float14 = photometricInterpreterFloat10.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat10);
        int int17 = photometricInterpreterFloat10.mapValueToArgb((float) (-2));
        int int19 = photometricInterpreterFloat10.mapValueToArgb((float) 17);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + Float.NEGATIVE_INFINITY + "'", float13 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        int int75 = tiffOutputField74.getSortHint();
        byte[] byteArray76 = tiffOutputField74.getData();
        tiffOutputField74.setSortHint(77);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType79 = tiffOutputField74.abstractFieldType;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 16]");
        org.junit.Assert.assertNotNull(abstractFieldType79);
    }

    @Test
    void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        float[] floatArray8 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataFloat3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = tiffRasterDataFloat3.getIntValue((int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (100, 32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("", 32, 19, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader11 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder12 = tiffReader11.getByteOrder();
        int[] intArray16 = new int[] { (byte) 1, 14, 22 };
        int int17 = org.apache.commons.imaging.internal.SafeOperations.add(intArray16);
        byte[] byteArray18 = tagInfoLongs9.encodeValue(byteOrder12, intArray16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        short[] shortArray34 = new short[] {};
        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        short[] shortArray50 = new short[] {};
        byte[] byteArray51 = tagInfoShortOrLongOrRational36.encodeValue(byteOrder47, shortArray50);
        byte[] byteArray52 = tagInfoShorts19.encodeValue(byteOrder31, shortArray50);
        byte[] byteArray53 = tagInfoShortOrRational8.encodeValue(byteOrder12, shortArray50);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT6(byteArray53, 32946, 8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: I/O error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLongs9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 37 + "'", int17 == 37);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tagInfoShorts19);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational36);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
    }

    @Test
    void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder2 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = tiffImageParser0.getMetadata(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) 12);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(32898, 5, (int) '4', 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32898, 5)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 6, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]", 11, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals23 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort29 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort29 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList31 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, abstractFieldTypeArray30);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList31, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder35 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray37 = tagInfoByte34.encodeValue(byteOrder35, (byte) 0);
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray47 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray42, 34713, (int) (byte) 0, false, (-65281));
        short short48 = tagInfoShort24.getValue(byteOrder35, byteArray47);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray62 = tagInfoSRationals23.getValue(byteOrder35, byteArray61);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless63 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray61);
        java.nio.ByteOrder byteOrder64 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField66 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_20, (long) 34676, (long) 7, byteArray61, byteOrder64, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType67 = tiffField66.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType68 = tiffField66.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement69 = tiffField66.getOversizeValueElement();
        int int70 = tiffField66.getOffset();
        int int71 = tiffField66.getDirectoryType();
        byte[] byteArray72 = tiffField66.getByteArrayValue();
        java.nio.ByteOrder byteOrder73 = tiffField66.getByteOrder();
        int int74 = tiffField66.getTag();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = tagInfoXpString15.getValue(tiffField66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short48 + "' != '" + (short) 4096 + "'", short48 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray62);
        org.junit.Assert.assertNotNull(abstractFieldType67);
        org.junit.Assert.assertNotNull(abstractFieldType68);
        org.junit.Assert.assertNotNull(abstractTiffElement69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 7 + "'", int70 == 7);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 31 + "'", int71 == 31);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNull(byteOrder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32771 + "'", int74 == 32771);
    }

    @Test
    void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics((float) '#');
        int int6 = tiffRasterDataInt2.getWidth();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataInt2.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataInt2.getSimpleStatistics(0.0f);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_REFERENCE_BLACK_WHITE;
        int[] intArray70 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii71 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CAMERA_SERIAL_NUMBER;
        java.lang.String[] strArray73 = tiffDirectory66.getFieldValue(tagInfoAscii71, false);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData74 = tiffDirectory66.getJpegImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList75 = tiffDirectory66.getDirectoryEntries();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType83 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType83);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n", (int) 'a', tiffDirectoryType83);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = tiffDirectory66.getFieldValue(tagInfoDouble86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"TiffOutputSet {??byteOrder: LITTLE_ENDIAN???directory 0: Root (0)???directory 1: Exif (-2)???directory 2: Interoperability (-4)???directory 3: Gps (-3)????field 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]????field 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]????field 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]????field 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]????field 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]??}??\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNull(intArray70);
        org.junit.Assert.assertNotNull(tagInfoAscii71);
        org.junit.Assert.assertNull(strArray73);
        org.junit.Assert.assertNull(jpegImageData74);
        org.junit.Assert.assertNotNull(tiffFieldList75);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType83 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType83.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        java.nio.ByteOrder byteOrder87 = tiffOutputSet85.byteOrder;
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryList88 = tiffOutputSet85.getDirectories();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryList88);
    }

    @Test
    void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MODEL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder4 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray12 = tagInfoAscii3.encodeValue(byteOrder4, strArray11);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField13 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong1, 79, byteArray12);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless14 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray12);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray18 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_2D(byteArray12, 1191191296, (-16714752), false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.common.AllocationRequestException; message: Allocation limit 1,073,741,824 exceeded: 4,764,765,184");
        } catch (org.apache.commons.imaging.common.AllocationRequestException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeLong1);
        org.junit.Assert.assertNotNull(tagInfoAscii3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
    }

    @Test
    void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData36 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData36);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField39 = tiffOutputDirectory16.findField(29);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator40 = tiffOutputDirectory16.spliterator();
        tiffOutputDirectory16.removeField(16);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffOutputField39);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator40);
    }

    @Test
    void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        boolean boolean4 = tiffImageParser0.canAcceptExtension("K");
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = tiffImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setOutputSet(tiffOutputSet11);
        java.lang.Integer int13 = tiffImagingParameters12.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters12.setReadThumbnails(false);
        java.lang.Integer int16 = tiffImagingParameters15.getCompression();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters18 = tiffImagingParameters15.setStrict(false);
        org.apache.commons.imaging.PixelDensity pixelDensity19 = tiffImagingParameters18.getPixelDensity();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters21 = tiffImagingParameters18.setStrict(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = tiffImageParser0.getXmpXml(byteSource4, (org.apache.commons.imaging.common.XmpImagingParameters<org.apache.commons.imaging.formats.tiff.TiffImagingParameters>) tiffImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(tiffImagingParameters18);
        org.junit.Assert.assertNull(pixelDensity19);
        org.junit.Assert.assertNotNull(tiffImagingParameters21);
    }

    @Test
    void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters0.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat10 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray11 = photometricInterpreterFloat10.getMinXY();
        float float12 = photometricInterpreterFloat10.getMeanFound();
        float float13 = photometricInterpreterFloat10.getMaxFound();
        float float14 = photometricInterpreterFloat10.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat10);
        java.lang.Integer int16 = tiffImagingParameters15.getCompression();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + Float.NEGATIVE_INFINITY + "'", float13 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.UNDEFINED;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        int int54 = tiffField51.getTag();
        byte[] byteArray55 = tiffField51.getByteArrayValue();
        java.lang.Object obj56 = fieldTypeByte0.getValue(tiffField51);
        java.lang.String str57 = tiffField51.toString();
        int[] intArray58 = tiffField51.getIntArrayValue();
        java.lang.String str59 = tiffField51.getTagName();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32771 + "'", int54 == 32771);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Unknown Tag (0x8003)" + "'", str59, "Unknown Tag (0x8003)");
    }

    @Test
    void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = tiffImageParser0.canAcceptType(imageFormat7);
        boolean boolean10 = tiffImageParser0.canAcceptExtension("AUnknown Tag (0x8003): Unknown Tag (0x8003): ");
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        float[] floatArray6 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics((float) (-2));
        float float9 = tiffRasterStatistics8.getExcludedValue();
        float float10 = tiffRasterStatistics8.getExcludedValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-2.0f) + "'", float9 == (-2.0f));
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-2.0f) + "'", float10 == (-2.0f));
    }

    @Test
    void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii89 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_DATE_TIME;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField90 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii89);
        tiffOutputSet85.removeField((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory93 = tiffOutputSet85.addGpsDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tagInfoAscii89);
        org.junit.Assert.assertNull(tiffOutputField90);
    }

    @Test
    void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType3);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort9 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, abstractFieldTypeArray10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder15 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray17 = tagInfoByte14.encodeValue(byteOrder15, (byte) 0);
        byte[] byteArray19 = tagInfoDouble4.encodeValue(byteOrder15, (double) 32773);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray55 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray50, 34713, (int) (byte) 0, false, (-65281));
        short short56 = tagInfoShort32.getValue(byteOrder43, byteArray55);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort61 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList63 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, abstractFieldTypeArray62);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList63, tiffDirectoryType65);
        java.nio.ByteOrder byteOrder67 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray69 = tagInfoByte66.encodeValue(byteOrder67, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray70 = tagInfoSRationals31.getValue(byteOrder43, byteArray69);
        byte[] byteArray72 = tagInfoSByte30.encodeValue(byteOrder43, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader76 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder43, 23, (long) 64, true);
        java.nio.ByteOrder byteOrder77 = tiffHeader76.byteOrder;
        byte[] byteArray79 = tagInfoDouble4.encodeValue(byteOrder77, (double) (short) 4096);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet80 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder77);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor81 = tiffOutputSet80.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField83 = tiffOutputSet80.findField(34743);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory84 = tiffOutputSet80.getOrCreateExifDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals31);
        org.junit.Assert.assertNotNull(tagInfoShort32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 4096 + "'", short56 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0, 0, 0, 0, 0, 0, -80, 64]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor81);
        org.junit.Assert.assertNull(tiffOutputField83);
        org.junit.Assert.assertNotNull(tiffOutputDirectory84);
    }

    @Test
    void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory86 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText87 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        tiffOutputDirectory86.add(tagInfoGpsText87, "TIFF image data: 8 bytes");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory86);
        org.junit.Assert.assertNotNull(tagInfoGpsText87);
    }

    @Test
    void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance6 = tiffImageParser0.getFormatCompliance(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
    }

    @Test
    void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray0, 43, 32769, true, 50725);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"buf\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.addExifDirectory();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor88 = tiffOutputSet85.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor88);
    }

    @Test
    void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean5 = tiffDirectoryType4.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("A", (int) (byte) 1, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii7 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_IMAGE_ID;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory8 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter9 = null;
        int[] intArray15 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration22 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader24 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder25 = tiffReader24.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles26 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled27 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory8, photometricInterpreter9, 10, (int) (byte) 10, (-65281), intArray15, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration22, byteOrder25, tiles26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals32 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort35 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray58 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray53, 34713, (int) (byte) 0, false, (-65281));
        short short59 = tagInfoShort35.getValue(byteOrder46, byteArray58);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray73 = tagInfoSRationals34.getValue(byteOrder46, byteArray72);
        byte[] byteArray74 = tagInfoRationals32.encodeValue(byteOrder33, rationalNumberArray73);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data75 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray74);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray74);
        java.lang.String[] strArray77 = tagInfoAscii7.getValue(byteOrder25, byteArray74);
        byte[] byteArray79 = tagInfoSByte6.encodeValue(byteOrder25, (byte) 10);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData80 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 13, (int) (short) 100, byteArray79);
        byte[] byteArray81 = jpegImageData80.getData();
        java.lang.String str82 = jpegImageData80.getElementDescription();
        java.lang.String str83 = jpegImageData80.getElementDescription();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(tagInfoAscii7);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(tagInfoRationals32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(tagInfoSRationals34);
        org.junit.Assert.assertNotNull(tagInfoShort35);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short59 + "' != '" + (short) 4096 + "'", short59 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[10]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "JPEG image data: 1 bytes" + "'", str82, "JPEG image data: 1 bytes");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "JPEG image data: 1 bytes" + "'", str83, "JPEG image data: 1 bytes");
    }

    @Test
    void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii69 = null;
        java.lang.String[] strArray71 = tiffDirectory66.getFieldValue(tagInfoAscii69, false);
        boolean boolean72 = tiffDirectory66.hasTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat73 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_HEIGHT_RESOLUTION;
        // The following exception was thrown during execution in test generation
        try {
            float float74 = tiffDirectory66.getFieldValue(tagInfoFloat73);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"HeightResolution\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(tagInfoFloat73);
    }

    @Test
    void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n", (-65536), 255, tiffDirectoryType3);
    }

    @Test
    void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.lang.String str4 = tiffImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = tiffImageParser0.getMetadata(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
    }

    @Test
    void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(31, "K");
    }

    @Test
    void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        boolean boolean93 = tiffDirectory89.hasTiffFloatingPointRasterData();
        int int94 = tiffDirectory89.type;
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 88 + "'", int94 == 88);
    }

    @Test
    void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData86 = tiffDirectory66.getTiffImageData();
        boolean boolean87 = tiffDirectory66.hasJpegImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray88 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips90 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray88, 32844);
        int int91 = strips90.getImageDataLength();
        int int92 = strips90.rowsPerStrip;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray93 = strips90.getImageData();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) strips90);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNull(abstractTiffImageData86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(dataElementArray88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 32844 + "'", int92 == 32844);
        org.junit.Assert.assertNotNull(dataElementArray93);
    }

    @Test
    void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("", 32909, tiffDirectoryType17, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("K", 88, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("[TagInfo. tag: 36868 (0x9004, name: DateTimeDigitized]", 13, 32909, tiffDirectoryType17);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.lang.String str4 = tiffImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = tiffImageParser0.getIccProfileBytes(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
    }

//    @Test
//    void test4185() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4185");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        tiffOutputSet85.removeField(32768);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
//        tiffOutputSet85.setGpsInDegrees((double) (byte) 0, 0.0d);
//        java.lang.String str93 = tiffOutputSet85.toString();
//        tiffOutputSet85.removeField(32766);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory96 = tiffOutputSet85.getRootDirectory();
//        // The following exception was thrown during execution in test generation
//        try {
//            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory97 = tiffOutputSet85.addInteroperabilityDirectory();
//            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
//        } catch (org.apache.commons.imaging.ImagingException e) {
//            // Expected exception.
//        }
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNull(tiffOutputDirectory88);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
//        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n" + "'", str93, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Interoperability (-4)\r\n\tdirectory 3: Gps (-3)\r\n\t\tfield 3: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 3: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 3: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 3: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory96);
//    }

    @Test
    void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort4 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList6, abstractFieldTypeArray5);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList6, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals11 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder12 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        byte[] byteArray53 = tagInfoRationals11.encodeValue(byteOrder12, rationalNumberArray52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort54 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort59 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList61 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, abstractFieldTypeArray60);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, tiffDirectoryType63);
        java.nio.ByteOrder byteOrder65 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray67 = tagInfoByte64.encodeValue(byteOrder65, (byte) 0);
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray77 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray72, 34713, (int) (byte) 0, false, (-65281));
        short short78 = tagInfoShort54.getValue(byteOrder65, byteArray77);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless79 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray77);
        short[] shortArray80 = tagInfoShorts10.getValue(byteOrder12, byteArray77);
        byte[] byteArray82 = tagInfoByte9.encodeValue(byteOrder12, (byte) 1);
        byte[] byteArray86 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray82, 5, 0, false);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(tagInfoShorts10);
        org.junit.Assert.assertNotNull(tagInfoRationals11);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort54);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short78 + "' != '" + (short) 4096 + "'", short78 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[4096]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0, 16]");
    }

    @Test
    void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT6Options((java.lang.Integer) 35);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setReadThumbnails(true);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
    }

    @Test
    void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        long long68 = tiffDirectory66.getNextDirectoryOffset();
        java.lang.String str69 = tiffDirectory66.description();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 9L + "'", long68 == 9L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Bad Type" + "'", str69, "Bad Type");
    }

    @Test
    void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        int int9 = tiffRasterDataInt2.getWidth();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = tiffRasterDataInt2.getIntValue(0, 32809);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (0, 32809)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType5 = null;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList11, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean23 = tiffDirectoryType22.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n", 19, abstractFieldTypeList11, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Directory: Exif IFD (-2)", 2189672, abstractFieldType5, 18, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]Bad Type: \n\n", (-3), (-16751104), tiffDirectoryType22);
        org.junit.Assert.assertNotNull(abstractFieldTypeList11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText21 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_PROCESSING_METHOD;
        boolean boolean22 = tagInfoGpsText21.isText();
        java.lang.String str23 = tiffImageMetadata8.getFieldValue(tagInfoGpsText21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles24 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_MODEL_TRANSFORMATION_TAG;
        double[] doubleArray25 = tiffImageMetadata8.getFieldValue(tagInfoDoubles24);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.GpsInfo gpsInfo26 = tiffImageMetadata8.getGpsInfo();
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader27 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray28 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList29, tiffDirectoryArray28);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray31 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList32, tiffFieldArray31);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents34 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader27, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList29, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList32);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata35 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType42);
        byte[] byteArray45 = tiffImageMetadata35.getFieldValue(tagInfoSBytes44);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString46 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str47 = tiffImageMetadata35.getFieldValue(tagInfoXpString46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns48 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = tiffImageMetadata35.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns48, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents51 = tiffImageMetadata35.contents;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList52 = tiffContents51.directories;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType59);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("E", (int) (byte) -1, (-1), tiffDirectoryType59);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField62 = tiffContents51.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSShorts61);
        short[] shortArray63 = tiffImageMetadata8.getFieldValue(tagInfoSShorts61);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals64 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        int int65 = tagInfoRationals64.tag;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray66 = tiffImageMetadata8.getFieldValue(tagInfoRationals64);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoGpsText21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tagInfoDoubles24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(gpsInfo26);
        org.junit.Assert.assertNotNull(tiffDirectoryArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType42 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType42.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNotNull(tagInfoXpString46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(tagInfoUnknowns48);
        org.junit.Assert.assertNull(tiffField50);
        org.junit.Assert.assertNotNull(tiffContents51);
        org.junit.Assert.assertNotNull(tiffDirectoryList52);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType59 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType59.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffField62);
        org.junit.Assert.assertNull(shortArray63);
        org.junit.Assert.assertNotNull(tagInfoRationals64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 22 + "'", int65 == 22);
        org.junit.Assert.assertNull(rationalNumberArray66);
    }

    @Test
    void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.Object obj57 = fieldTypeByte3.getValue(tiffField54);
        java.lang.Object obj58 = fieldTypeFloat2.getValue(tiffField54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo59 = tiffField54.getTagInfo();
        java.lang.String str60 = tiffField54.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo61 = tiffField54.getTagInfo();
        org.junit.Assert.assertNotNull(fieldTypeByte3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(tagInfo59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(tagInfo61);
    }

    @Test
    void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("N", (int) '4', 34712, tiffDirectoryType11);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = tagInfoAsciiOrByte14.dataTypes;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList24 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList24, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType42, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList24, 34905, tiffDirectoryType42, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList24, 34712, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("OversizeValueElement, tag: Unknown Tag, fieldType: hi!", 7, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]", 336, abstractFieldTypeList15, tiffDirectoryType49);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeList15);
        org.junit.Assert.assertNotNull(abstractFieldTypeList24);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType31 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType31.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType42 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType42.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType49 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType49.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
    }

    @Test
    void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        tiffOutputSet85.removeField((int) '4');
        tiffOutputSet85.setGpsInDegrees((double) 0L, (double) 10.0f);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory93 = tiffOutputSet85.getOrCreateRootDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField95 = tiffOutputDirectory93.findField((int) (short) -1);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory93);
        org.junit.Assert.assertNull(tiffOutputField95);
    }

    @Test
    void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = tiffImageParser0.getMetadata(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = tiffImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser8 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder9 = tiffImageParser8.getByteOrder();
        java.lang.String str10 = tiffImageParser8.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = tiffImageParser0.getMetadata(file7, tiffImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tif" + "'", str10, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
    }

    @Test
    void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(32769, "32771 (0x8003: Unknown Tag): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        long[] longArray54 = tiffField53.getLongArrayValue();
        long long55 = tiffField53.getCount();
        java.lang.String str56 = tiffField53.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem57 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField53);
        java.lang.Object obj58 = tiffField53.getValue();
        java.lang.Object obj59 = fieldTypeByte2.getValue(tiffField53);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType60 = tiffField53.getFieldType();
        java.lang.String str61 = tiffField53.getFieldTypeName();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 34676L + "'", long55 == 34676L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(abstractFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator80 = tiffDirectory66.spliterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii81 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_DATE_TIME;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = tiffDirectory66.getSingleFieldValue(tagInfoAscii81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"DateTime\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator80);
        org.junit.Assert.assertNotNull(tagInfoAscii81);
    }

    @Test
    void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(100, "280 (0x118: MinSampleValue): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        boolean boolean55 = tiffField53.isLocalValue();
        java.lang.String str56 = tiffField53.getValueDescription();
        int[] intArray57 = tiffField53.getIntArrayValue();
        java.lang.String str58 = tiffField53.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffField53.getFieldType();
        java.lang.Object obj60 = fieldTypeLong2.getValue(tiffField53);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = fieldTypeLong2.getValue(tiffField61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffField.getByteArrayValue()\" because \"entry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(abstractFieldType59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType21, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort17, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("ImageColorIndicator", 23, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]", 32766, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): Bad Type: \n\n", 12, (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): ", 32, 34677, tiffDirectoryType21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter5 = tiffImagingParameters2.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setPixelDensity(pixelDensity6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters2.setT4Options((java.lang.Integer) (-3));
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setStrict(false);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(photometricInterpreter5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
    }

    @Test
    void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong82 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong82);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor84 = tiffDirectory66.iterator();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters85 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity86 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters87 = tiffImagingParameters85.setPixelDensity(pixelDensity86);
        java.lang.Integer int88 = tiffImagingParameters85.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters90 = tiffImagingParameters85.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity91 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters92 = tiffImagingParameters85.setPixelDensity(pixelDensity91);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter93 = tiffImagingParameters92.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters95 = tiffImagingParameters92.setCompression((java.lang.Integer) 93);
        java.awt.image.BufferedImage bufferedImage96 = tiffDirectory66.getTiffImage(tiffImagingParameters95);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tiffFieldItor84);
        org.junit.Assert.assertNotNull(tiffImagingParameters87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(tiffImagingParameters90);
        org.junit.Assert.assertNotNull(tiffImagingParameters92);
        org.junit.Assert.assertNull(photometricInterpreter93);
        org.junit.Assert.assertNotNull(tiffImagingParameters95);
        org.junit.Assert.assertNull(bufferedImage96);
    }

    @Test
    void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        int int6 = tiffImagingParameters5.getSubImageWidth();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setPixelDensity(pixelDensity7);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setReadThumbnails(true);
        java.lang.Integer int11 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters5.setCompression((java.lang.Integer) (-65281));
        java.lang.String str14 = tiffImagingParameters13.getXmpXml();
        org.apache.commons.imaging.PixelDensity pixelDensity15 = tiffImagingParameters13.getPixelDensity();
        java.lang.Integer int16 = tiffImagingParameters13.getT6Options();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(pixelDensity15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        java.lang.String str57 = tiffHeader56.getElementDescription();
        java.lang.String str58 = tiffHeader56.getElementDescription();
        boolean boolean59 = tiffHeader56.bigTiff;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "TIFF Header" + "'", str57, "TIFF Header");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "TIFF Header" + "'", str58, "TIFF Header");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setReadThumbnails(false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters6.setXmpXml("JPEG image data: 1 bytesUnknown Tag (0x8003): ");
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
    }

    @Test
    void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (byte) 1, "306 (0x132: DateTime): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort35 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray58 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray53, 34713, (int) (byte) 0, false, (-65281));
        short short59 = tagInfoShort35.getValue(byteOrder46, byteArray58);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray73 = tagInfoSRationals34.getValue(byteOrder46, byteArray72);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless74 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray72);
        java.nio.ByteOrder byteOrder75 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField77 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_31, (long) 34676, (long) 7, byteArray72, byteOrder75, 9);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType80 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF image data: 0 bytes", (int) '#', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_31, 2, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("TIFF image data: 0 bytes", 32909, (int) (byte) 0, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("V", 32895, (-65536), tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText("PreviewImageLength", 32769, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("", 43, (-16776961), tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("[TagInfo. tag: 255 (0xff, name: TIFF Header]", 13, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong88 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("VBad Type: \n\n", 93, 52, tiffDirectoryType80, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("PreviewImageLength", 5, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, 0, tiffDirectoryType80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", 1, 42, tiffDirectoryType80);
        org.junit.Assert.assertNotNull(tagInfoSRationals34);
        org.junit.Assert.assertNotNull(tagInfoShort35);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short59 + "' != '" + (short) 4096 + "'", short59 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray73);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType80 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType80.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("K", (int) (short) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("Unknown Tag (0x8003): ", 65536, tiffDirectoryType7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata25 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents24);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader27 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray28 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList29, tiffDirectoryArray28);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray31 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList32, tiffFieldArray31);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents34 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader27, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList29, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList32);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList35 = tiffContents34.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList36 = tiffContents34.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs39 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader41 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder42 = tiffReader41.getByteOrder();
        int[] intArray46 = new int[] { (byte) 1, 14, 22 };
        int int47 = org.apache.commons.imaging.internal.SafeOperations.add(intArray46);
        byte[] byteArray48 = tagInfoLongs39.encodeValue(byteOrder42, intArray46);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory49 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList36, (long) 34905, (long) 255, byteOrder42);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat52 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 32895, (float) (-3));
        int[] intArray59 = new int[] { (byte) 1, 14, 22 };
        int int60 = org.apache.commons.imaging.internal.SafeOperations.add(intArray59);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab64 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray59, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel69 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(32773, intArray59, 88, 65, 71, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration77 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.lenientValueOf(19);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader79 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder80 = tiffReader79.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray82 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips84 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray82, 32844);
        int int85 = strips84.getImageDataLength();
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips dataReaderStrips86 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips(tiffDirectory49, (org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat52, (int) '4', intArray59, 0, 32896, 32773, (int) (byte) 1, 0, 32766, tiffPlanarConfiguration77, byteOrder80, 32844, strips84);
        java.awt.image.BufferedImage bufferedImage87 = tiffDirectory49.getTiffImage();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor88 = tiffDirectory49.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString89 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPSUBJECT;
        java.lang.String str91 = tiffDirectory49.getFieldValue(tagInfoXpString89, false);
        java.lang.String str92 = tiffImageMetadata25.getFieldValue(tagInfoXpString89);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNotNull(tiffDirectoryArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(tiffFieldList35);
        org.junit.Assert.assertNotNull(tiffFieldList36);
        org.junit.Assert.assertNotNull(tagInfoLongs39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 37 + "'", int47 == 37);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 37 + "'", int60 == 37);
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration77 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration77.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(dataElementArray82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(bufferedImage87);
        org.junit.Assert.assertNotNull(tiffFieldItor88);
        org.junit.Assert.assertNotNull(tagInfoXpString89);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        tiffOutputSet85.removeField((int) '4');
        tiffOutputSet85.setGpsInDegrees((double) 0L, (double) 10.0f);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes93 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PIXEL_INTENSITY_RANGE;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField94 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoBytes93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory95 = tiffOutputSet85.addRootDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertNotNull(tagInfoBytes93);
        org.junit.Assert.assertNull(tiffOutputField94);
    }

    @Test
    void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs68 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader70 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder71 = tiffReader70.getByteOrder();
        int[] intArray75 = new int[] { (byte) 1, 14, 22 };
        int int76 = org.apache.commons.imaging.internal.SafeOperations.add(intArray75);
        byte[] byteArray77 = tagInfoLongs68.encodeValue(byteOrder71, intArray75);
        int[] intArray79 = tiffDirectory66.getFieldValue(tagInfoLongs68, false);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator80 = tiffDirectory66.spliterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong81 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        int[] intArray83 = tiffDirectory66.getFieldValue(tagInfoShortOrLong81, false);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(tagInfoLongs68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 37 + "'", int76 == 37);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNull(intArray79);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator80);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong81);
        org.junit.Assert.assertNull(intArray83);
    }

    @Test
    void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii69 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_DISTANCE_REF;
        java.lang.String[] strArray71 = tiffDirectory66.getFieldValue(tagInfoAscii69, false);
        tiffDirectory66.dump();
        java.lang.String str73 = tiffDirectory66.description();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tagInfoAscii69);
        org.junit.Assert.assertNull(strArray71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Bad Type" + "'", str73, "Bad Type");
    }

    @Test
    void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("ImageLayer", (int) (short) 0, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("ImageLayer", 77, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("ImageColorIndicator", 77, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("S", 65, (int) (byte) -1, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("ImageColorIndicator", 32773, 100, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("V", (int) (short) 10, (int) '4', tiffDirectoryType15);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList20, tiffDirectoryType27);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 48, abstractFieldTypeList20, 34905, tiffDirectoryType38, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageLayer", 22, abstractFieldTypeList20, 34712, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType54);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("A", 35, abstractFieldTypeList20, 32897, tiffDirectoryType54, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts71 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("E", (int) (byte) -1, (-1), tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("", 0, 37, tiffDirectoryType69, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("K", 32897, abstractFieldTypeList20, 34712, tiffDirectoryType69);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField75 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoBytes74);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList76 = tiffContents7.directories;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(abstractFieldTypeList20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType27 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType27.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType38 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType38.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType54 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType54.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType69 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType69.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffField75);
        org.junit.Assert.assertNotNull(tiffDirectoryList76);
    }

    @Test
    void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList9 = tiffContents7.directories;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList10 = tiffContents7.getElements();
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList11 = tiffContents7.getElements();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata12 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tiffDirectoryList9);
        org.junit.Assert.assertNotNull(abstractTiffElementList10);
        org.junit.Assert.assertNotNull(abstractTiffElementList11);
    }

    @Test
    void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        java.lang.String str3 = tiffImageParser0.getName();
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytesBad Type: \n\nTiffOutputSet {\r\nTIFF image data: 0 bytesBad Type: \n\nbyteOrder: LITTLE_ENDIAN\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 0: Gps (-3)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 1: Root (0)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 2: Exif (-2)\r\nTIFF image data: 0 bytesBad Type: \n\n\tdirectory 3: Interoperability (-4)\r\nTIFF image data: 0 bytesBad Type: \n\n}\r\n");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tiff-Custom" + "'", str3, "Tiff-Custom");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(17, "32771 (0x8003: Unknown Tag): ");
        java.lang.Object obj3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort4 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_YCBCR_POSITIONING;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational5 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        short[] shortArray19 = new short[] {};
        byte[] byteArray20 = tagInfoShortOrLongOrRational5.encodeValue(byteOrder16, shortArray19);
        byte[] byteArray22 = tagInfoShort4.encodeValue(byteOrder16, (short) (byte) -1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet23 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder16);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray24 = fieldTypeShort2.writeData(obj3, byteOrder16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Invalid data: null (null)");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort4);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -1]");
    }

    @Test
    void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int[] intArray9 = tiffRasterDataInt2.getIntData();
        int[] intArray10 = tiffRasterDataInt2.getIntData();
        int[] intArray11 = tiffRasterDataInt2.getIntData();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals2 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray28 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray23, 34713, (int) (byte) 0, false, (-65281));
        short short29 = tagInfoShort5.getValue(byteOrder16, byteArray28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray43 = tagInfoSRationals4.getValue(byteOrder16, byteArray42);
        byte[] byteArray44 = tagInfoRationals2.encodeValue(byteOrder3, rationalNumberArray43);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data45 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray44);
        java.lang.String str46 = data45.getElementDescription();
        byte[] byteArray47 = data45.getData();
        int int48 = data45.getDataLength();
        org.junit.Assert.assertNotNull(tagInfoRationals2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tagInfoSRationals4);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short29 + "' != '" + (short) 4096 + "'", short29 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "TIFF image data: 0 bytes" + "'", str46, "TIFF image data: 0 bytes");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        boolean boolean3 = strips2.stripsNotTiles();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray4 = strips2.getImageData();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles7 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray4, (int) (short) -30875, (int) (short) 4096);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray8 = tiles7.getImageData();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(dataElementArray4);
        org.junit.Assert.assertNotNull(dataElementArray8);
    }

    @Test
    void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int4 = tiffRasterDataInt3.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataInt3.getSimpleStatistics(79.0f);
        int[] intArray7 = tiffRasterDataInt3.getIntData();
        int int8 = org.apache.commons.imaging.internal.SafeOperations.add(intArray7);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk((int) (byte) -1, intArray7, 34677, 12, 20);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.AbstractImageParser<org.apache.commons.imaging.formats.tiff.TiffImagingParameters> tiffImagingParametersAbstractImageParser1 = org.apache.commons.imaging.internal.ImageParserFactory.getImageParser("262 (0x106: PhotometricInterpretation): ");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown extension: 262 (0x106: PhotometricInterpretation): ");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational4 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("T", 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational4);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte7 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray39 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray34, 34713, (int) (byte) 0, false, (-65281));
        short short40 = tagInfoShort16.getValue(byteOrder27, byteArray39);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray54 = tagInfoSRationals15.getValue(byteOrder27, byteArray53);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless55 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray53);
        java.nio.ByteOrder byteOrder56 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField58 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_12, (long) 34676, (long) 7, byteArray53, byteOrder56, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffField58.getFieldType();
        boolean boolean60 = tiffField58.isLocalValue();
        java.lang.Object obj61 = fieldTypeByte7.getValue(tiffField58);
        int int62 = tiffField58.getBytesLength();
        java.lang.Object obj63 = fieldTypeRational4.getValue(tiffField58);
        tiffField58.dump();
        // The following exception was thrown during execution in test generation
        try {
            double double65 = tiffField58.getDoubleValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class [J cannot be cast to class java.lang.Number ([J and java.lang.Number are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeRational4);
        org.junit.Assert.assertNotNull(fieldTypeByte7);
        org.junit.Assert.assertNotNull(tagInfoSRationals15);
        org.junit.Assert.assertNotNull(tagInfoShort16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 4096 + "'", short40 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray54);
        org.junit.Assert.assertNotNull(abstractFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 277408 + "'", int62 == 277408);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 4096, "[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): ");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader3 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray4 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList5, tiffDirectoryArray4);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray7 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList8, tiffFieldArray7);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents10 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList8);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata11 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents10);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = tiffImageMetadata11.contents;
        tiffImageMetadata11.add("TIFF image data: 0 bytes", "");
        tiffImageMetadata11.add("S", "TIFF image data: 0 bytes");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals26 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort27 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort32 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList34 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, abstractFieldTypeArray33);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType36 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList34, tiffDirectoryType36);
        java.nio.ByteOrder byteOrder38 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray40 = tagInfoByte37.encodeValue(byteOrder38, (byte) 0);
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray50 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray45, 34713, (int) (byte) 0, false, (-65281));
        short short51 = tagInfoShort27.getValue(byteOrder38, byteArray50);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray65 = tagInfoSRationals26.getValue(byteOrder38, byteArray64);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless66 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray64);
        java.nio.ByteOrder byteOrder67 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField69 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_23, (long) 34676, (long) 7, byteArray64, byteOrder67, 9);
        long[] longArray70 = tiffField69.getLongArrayValue();
        long long71 = tiffField69.getCount();
        java.lang.String str72 = tiffField69.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem73 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField69);
        java.lang.String str74 = tiffMetadataItem73.getKeyword();
        tiffImageMetadata11.add((org.apache.commons.imaging.common.ImageMetadata.ImageMetadataItem) tiffMetadataItem73);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField76 = tiffMetadataItem73.getTiffField();
        java.nio.ByteOrder byteOrder77 = tiffField76.getByteOrder();
        java.lang.Object obj78 = fieldTypeFloat2.getValue(tiffField76);
        org.junit.Assert.assertNotNull(tiffDirectoryArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(tiffContents12);
        org.junit.Assert.assertNotNull(tagInfoSRationals26);
        org.junit.Assert.assertNotNull(tagInfoShort27);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short51 + "' != '" + (short) 4096 + "'", short51 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray65);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[]");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 34676L + "'", long71 == 34676L);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Unknown Tag (0x8003)" + "'", str74, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(tiffField76);
        org.junit.Assert.assertNull(byteOrder77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        long long57 = tiffHeader56.offsetToFirstIFD;
        java.lang.String str58 = tiffHeader56.getElementDescription();
        boolean boolean59 = tiffHeader56.bigTiff;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 64L + "'", long57 == 64L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "TIFF Header" + "'", str58, "TIFF Header");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.findDirectory(3);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNull(tiffOutputDirectory87);
        org.junit.Assert.assertNull(tiffOutputDirectory89);
    }

    @Test
    void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii(8, "ColorSpace");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG8;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        byte[] byteArray56 = tiffField54.getByteArrayValue();
        java.lang.Object obj57 = fieldTypeLong8_3.getValue(tiffField54);
        long[] longArray58 = tiffField54.getLongArrayValue();
        int int59 = tiffField54.getTag();
        java.lang.Object obj60 = fieldTypeAscii2.getValue(tiffField54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = tiffField54.getStringValue();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Expected String value(-1 (0xffffffff: Unknown Tag): ): [J@676cc46a");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeLong8_3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32771 + "'", int59 == 32771);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
    }

    @Test
    void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.lang.Integer int2 = tiffImagingParameters1.getT6Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters1.setFileName("K");
        java.lang.Integer int5 = tiffImagingParameters1.getLzwCompressionBlockSize();
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNull(int5);
    }

    @Test
    void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType78);
        float[] floatArray81 = tiffDirectory66.getFieldValue(tagInfoFloats79, false);
        boolean boolean82 = tiffDirectory66.hasTiffRasterData();
        java.lang.String str83 = tiffDirectory66.description();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor84 = tiffDirectory66.iterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = tiffDirectory66.imageDataInStrips();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNull(floatArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Bad Type" + "'", str83, "Bad Type");
        org.junit.Assert.assertNotNull(tiffFieldItor84);
    }

    @Test
    void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        tiffDirectory66.dump();
        boolean boolean77 = tiffDirectory66.hasTiffRasterData();
        java.nio.ByteOrder byteOrder78 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters79 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity80 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters81 = tiffImagingParameters79.setPixelDensity(pixelDensity80);
        int int82 = tiffImagingParameters81.getSubImageY();
        java.lang.String str83 = tiffImagingParameters81.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters84 = tiffImagingParameters81.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters86 = tiffImagingParameters81.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters88 = tiffImagingParameters86.setT6Options((java.lang.Integer) 35);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters90 = tiffImagingParameters86.setLzwCompressionBlockSize((java.lang.Integer) 32896);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat93 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray94 = photometricInterpreterFloat93.getMinXY();
        float float95 = photometricInterpreterFloat93.getMeanFound();
        float float96 = photometricInterpreterFloat93.getMeanFound();
        float float97 = photometricInterpreterFloat93.getMeanFound();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters98 = tiffImagingParameters86.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterFloat93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterData tiffRasterData99 = tiffDirectory66.getRasterData(tiffImagingParameters86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"SampleFormat\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(tiffImagingParameters81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(tiffImagingParameters84);
        org.junit.Assert.assertNotNull(tiffImagingParameters86);
        org.junit.Assert.assertNotNull(tiffImagingParameters88);
        org.junit.Assert.assertNotNull(tiffImagingParameters90);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float95 + "' != '" + 0.0f + "'", float95 == 0.0f);
        org.junit.Assert.assertTrue("'" + float96 + "' != '" + 0.0f + "'", float96 == 0.0f);
        org.junit.Assert.assertTrue("'" + float97 + "' != '" + 0.0f + "'", float97 == 0.0f);
        org.junit.Assert.assertNotNull(tiffImagingParameters98);
    }

    @Test
    void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        int int9 = tiffRasterDataInt2.getWidth();
        int int10 = tiffRasterDataInt2.getWidth();
        int int11 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics12 = tiffRasterDataInt2.getSimpleStatistics();
        int[] intArray13 = tiffRasterDataInt2.getIntData();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = tiffImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList2 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SHORT_OR_RATIONAL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational9 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("V", 11, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("258 (0x102: BitsPerSample): ", 0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational9, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ", 34676, 23, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 30, abstractFieldTypeList2, (int) (byte) 10, tiffDirectoryType18, true);
        org.junit.Assert.assertNotNull(abstractFieldTypeList2);
        org.junit.Assert.assertNotNull(fieldTypeRational9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = tiffImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance4 = tiffImageParser0.getFormatCompliance(byteSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_USER_COMMENT;
        boolean boolean1 = tagInfoGpsText0.isText();
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless52 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray50);
        java.nio.ByteOrder byteOrder53 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_9, (long) 34676, (long) 7, byteArray50, byteOrder53, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField55.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField55.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement58 = tiffField55.getOversizeValueElement();
        java.lang.String str59 = tiffField55.toString();
        java.lang.Object obj60 = fieldTypeLong4.getValue(tiffField55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = tagInfoGpsText0.getValue(tiffField55);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: GPS text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoGpsText0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertNotNull(abstractTiffElement58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str59, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList10 = tiffContents8.directories;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList11 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType22, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort27 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts28 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational29 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        short[] shortArray43 = new short[] {};
        byte[] byteArray44 = tagInfoShortOrLongOrRational29.encodeValue(byteOrder40, shortArray43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational45 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort50 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList52 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, abstractFieldTypeArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, tiffDirectoryType54);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoByte55.encodeValue(byteOrder56, (byte) 0);
        short[] shortArray59 = new short[] {};
        byte[] byteArray60 = tagInfoShortOrLongOrRational45.encodeValue(byteOrder56, shortArray59);
        byte[] byteArray61 = tagInfoShorts28.encodeValue(byteOrder40, shortArray59);
        byte[] byteArray63 = tagInfoShort27.encodeValue(byteOrder40, (short) (byte) 10);
        byte[] byteArray65 = tagInfoSLong26.encodeValue(byteOrder40, 24);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(17, tiffFieldList11, (long) 89, (long) 89, byteOrder40);
        boolean boolean67 = tiffDirectory66.hasTiffFloatingPointRasterData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffDirectoryList10);
        org.junit.Assert.assertNotNull(tiffFieldList11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort27);
        org.junit.Assert.assertNotNull(tagInfoShorts28);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational45);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[24, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents8.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader15 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder16 = tiffReader15.getByteOrder();
        int[] intArray20 = new int[] { (byte) 1, 14, 22 };
        int int21 = org.apache.commons.imaging.internal.SafeOperations.add(intArray20);
        byte[] byteArray22 = tagInfoLongs13.encodeValue(byteOrder16, intArray20);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory23 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList10, (long) 34905, (long) 255, byteOrder16);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator24 = tiffDirectory23.spliterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong25 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_IMAGE_WIDTH;
        int[] intArray27 = tiffDirectory23.getFieldValue(tagInfoShortOrLong25, false);
        java.nio.ByteOrder byteOrder28 = tiffDirectory23.getByteOrder();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tagInfoLongs13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 37 + "'", int21 == 37);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tiffFieldSpliterator24);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong25);
        org.junit.Assert.assertNull(intArray27);
        org.junit.Assert.assertNotNull(byteOrder28);
    }

    @Test
    void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        byte[] byteArray2 = null;
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData3 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 16, 64, byteArray2);
    }

    @Test
    void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType31 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType31);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational35 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort36 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts37 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational38 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        short[] shortArray52 = new short[] {};
        byte[] byteArray53 = tagInfoShortOrLongOrRational38.encodeValue(byteOrder49, shortArray52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational54 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort59 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList61 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, abstractFieldTypeArray60);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList61, tiffDirectoryType63);
        java.nio.ByteOrder byteOrder65 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray67 = tagInfoByte64.encodeValue(byteOrder65, (byte) 0);
        short[] shortArray68 = new short[] {};
        byte[] byteArray69 = tagInfoShortOrLongOrRational54.encodeValue(byteOrder65, shortArray68);
        byte[] byteArray70 = tagInfoShorts37.encodeValue(byteOrder49, shortArray68);
        byte[] byteArray72 = tagInfoShort36.encodeValue(byteOrder49, (short) (byte) 10);
        short[] shortArray74 = new short[] { (byte) 0 };
        byte[] byteArray75 = tagInfoShortOrRational35.encodeValue(byteOrder49, shortArray74);
        byte[] byteArray77 = tagInfoSByte34.encodeValue(byteOrder49, (byte) 0);
        tiffOutputDirectory16.add(tagInfoSByte34, (byte) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong80 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_IMAGE_OFFSET;
        java.lang.String str81 = tagInfoLong80.toString();
        tiffOutputDirectory16.add(tagInfoLong80, (-1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType31 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType31.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrRational35);
        org.junit.Assert.assertNotNull(tagInfoShort36);
        org.junit.Assert.assertNotNull(tagInfoShorts37);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational38);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational54);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[0]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0]");
        org.junit.Assert.assertNotNull(tagInfoLong80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[TagInfo. tag: 48320 (0xbcc0, name: ImageOffset]" + "'", str81, "[TagInfo. tag: 48320 (0xbcc0, name: ImageOffset]");
    }

    @Test
    void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType74 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType74);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("TIFF image data: 0 bytes", (int) (byte) 1, 31, tiffDirectoryType74);
        short[] shortArray78 = tiffDirectory66.getFieldValue(tagInfoSShorts76, false);
        int int79 = tiffDirectory66.type;
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray80 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips82 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray80, 32844);
        int int83 = strips82.getImageDataLength();
        boolean boolean84 = strips82.stripsNotTiles();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) strips82);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType74 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType74.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 88 + "'", int79 == 88);
        org.junit.Assert.assertNotNull(dataElementArray80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics9 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(69, 31, 65000, 32908);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (69, 31)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics9);
    }

    @Test
    void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        byte[] byteArray53 = tagInfoSByte11.encodeValue(byteOrder24, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader57 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder24, 23, (long) 64, true);
        long long58 = tiffHeader57.offsetToFirstIFD;
        long long59 = tiffHeader57.offsetToFirstIFD;
        java.nio.ByteOrder byteOrder60 = tiffHeader57.byteOrder;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory61 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(12, byteOrder60);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType72, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("Bad Type", 32803, tiffDirectoryType72);
        tiffOutputDirectory61.add(tagInfoDouble77, (double) 277408);
        org.apache.commons.imaging.common.BinaryOutputStream binaryOutputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory61.writeItem(binaryOutputStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.common.BinaryOutputStream.write2Bytes(int)\" because \"bos\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 64L + "'", long58 == 64L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 64L + "'", long59 == 64L);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType72 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType72.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        int int5 = tiffImagingParameters2.getSubImageX();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setBufferedImageFactory(bufferedImageFactory6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters2.setFileName("OversizeValueElement, tag: Unknown Tag, fieldType: hi!Unknown Tag (0x8003): ");
        boolean boolean10 = tiffImagingParameters2.isReadThumbnails();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData36 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData36);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField39 = tiffOutputDirectory16.findField(29);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts48 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_HALFTONE_HINTS;
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii50 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder51 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray59 = tagInfoAscii50.encodeValue(byteOrder51, strArray58);
        short[] shortArray60 = tagInfoShorts48.getValue(byteOrder49, byteArray59);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoByteOrShort47, shortArray60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Tag expects 35 value(s), not 15");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffOutputField39);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts48);
        org.junit.Assert.assertNotNull(tagInfoAscii50);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[26984, 33, 69, 21248, 22016, 18688, 24941, 25959, 28483, 28524, 18802, 25710, 25449, 29793, 29295]");
    }

    @Test
    void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader36 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray37 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList38, tiffDirectoryArray37);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray40 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList41, tiffFieldArray40);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents43 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader36, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList38, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList41);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata44 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType51 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType51);
        byte[] byteArray54 = tiffImageMetadata44.getFieldValue(tagInfoSBytes53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString55 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str56 = tiffImageMetadata44.getFieldValue(tagInfoXpString55);
        tiffOutputDirectory16.add(tagInfoXpString55, "S");
        java.lang.String str59 = tiffOutputDirectory16.description();
        int int60 = tiffOutputDirectory16.getItemLength();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffDirectoryArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType51 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType51.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNotNull(tagInfoXpString55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Bad Type" + "'", str59, "Bad Type");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 42 + "'", int60 == 42);
    }

    @Test
    void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG8;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        byte[] byteArray53 = tiffField51.getByteArrayValue();
        java.lang.Object obj54 = fieldTypeLong8_0.getValue(tiffField51);
        long[] longArray55 = tiffField51.getLongArrayValue();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement58 = tiffField51.new OversizeValueElement(32768, (-4));
        org.junit.Assert.assertNotNull(fieldTypeLong8_0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
    }

    @Test
    void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int int55 = tiffField51.getBytesLength();
        byte[] byteArray56 = tiffField51.getByteArrayValue();
        int int57 = tiffField51.getDirectoryType();
        java.lang.String str58 = tiffField51.getTagName();
        boolean boolean59 = tiffField51.isLocalValue();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 277408 + "'", int55 == 277408);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 31 + "'", int57 == 31);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Unknown Tag (0x8003)" + "'", str58, "Unknown Tag (0x8003)");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (short) 4096, 32, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("OversizeValueElement, tag: Unknown Tag, fieldType: hi!Unknown Tag (0x8003): ", 48, tiffDirectoryType14);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = tagInfoSShort19.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType25, false);
        boolean boolean28 = tiffDirectoryType25.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("[TagInfo. tag: 37394 (0x9212, name: SecurityClassification]Bad Type: \n\n", (int) (short) 100, abstractFieldTypeList20, 258, tiffDirectoryType25, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(abstractFieldTypeList20);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType25 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType25.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("T");
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = tiffImageParser0.canAcceptType(imageFormat4);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds68 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CFAPATTERN;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds68, false);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator71 = tiffDirectory66.spliterator();
        int int72 = tiffDirectory66.type;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort86 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType88 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes89 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort86, 5, tiffDirectoryType88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs90 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs91 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType88);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes92 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("S", 32946, 34712, tiffDirectoryType88);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField94 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoBytes92, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.RationalNumber rationalNumber96 = tiffDirectory66.getFieldValue(tagInfoRational95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoUndefineds68);
        org.junit.Assert.assertNull(tiffField70);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 88 + "'", int72 == 88);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType88 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType88.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffField94);
    }

    @Test
    void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        int int55 = tiffField50.getDirectoryType();
        int int56 = tiffField50.getSortHint();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo57 = tiffField50.getTagInfo();
        int int58 = tagInfo57.length;
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9 + "'", int56 == 9);
        org.junit.Assert.assertNotNull(tagInfo57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = tiffImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension5 = tiffImageParser0.getImageSize(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("E", (int) (byte) -1, (-1), tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("Tiff-Custom", 88, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("V", 255, 50725, tiffDirectoryType11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns21 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_IMAGE_NUMBER;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField23 = tiffImageMetadata8.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns21, false);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents24 = tiffImageMetadata8.contents;
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata25 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents24);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("", 12, tiffDirectoryType28);
        byte[] byteArray30 = tiffImageMetadata25.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte) tagInfoUnknown29);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType49, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort44, 65536, tiffDirectoryType49, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("", 8, 22, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("E", 7, (int) (short) 100, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("ImageLayerBad Type: \n\n", (int) (byte) -1, 2, tiffDirectoryType49);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField57 = tiffImageMetadata25.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLongs56);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii58 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_ARTIST;
        java.lang.Object obj59 = tiffImageMetadata25.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii58);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoUnknowns21);
        org.junit.Assert.assertNull(tiffField23);
        org.junit.Assert.assertNotNull(tiffContents24);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType49 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType49.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(tiffField57);
        org.junit.Assert.assertNotNull(tagInfoAscii58);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 64L);
        int int9 = tiffRasterDataFloat3.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = tiffRasterDataFloat3.getIntValue((-2), 14, 69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (-2, 14)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(11, "ImageLayer");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("ImageColorIndicator", 32898, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational4, 0);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fieldTypeRational4.getValue(tiffField7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffField.getByteArrayValue()\" because \"entry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.String str57 = tiffField54.getFieldTypeName();
        java.lang.String str58 = tiffField54.getValueDescription();
        java.lang.String str59 = tiffField54.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType60 = tiffField54.getFieldType();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType65 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("SByte", 22, 14, tiffDirectoryType65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo68 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("N", 34676, abstractFieldType60, 79, tiffDirectoryType65, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("Gps", 18, tiffDirectoryType65);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(abstractFieldType60);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType65 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD + "'", tiffDirectoryType65.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD));
    }

    @Test
    void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG8;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong3 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField54.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement57 = tiffField54.getOversizeValueElement();
        java.lang.String str58 = tiffField54.toString();
        java.lang.Object obj59 = fieldTypeLong3.getValue(tiffField54);
        java.lang.Object obj60 = fieldTypeLong8_0.getValue(tiffField54);
        tiffField54.dump();
        byte[] byteArray62 = tiffField54.getByteArrayValue();
        org.junit.Assert.assertNotNull(fieldTypeLong8_0);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertNotNull(abstractTiffElement57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str58, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
    }

    @Test
    void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.setLzwCompressionBlockSize((java.lang.Integer) 12);
        java.lang.String str6 = tiffImagingParameters2.getXmpXml();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType7 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue((int) (short) 100, 34661, 255);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (100, 34661)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType7 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType7.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem51 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem52 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str53 = tiffMetadataItem52.getText();
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = tiffMetadataItem52.getTiffField();
        java.lang.String str55 = tiffMetadataItem52.toString();
        java.lang.String str56 = tiffMetadataItem52.toString();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(tiffField54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Unknown Tag (0x8003): " + "'", str55, "Unknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Unknown Tag (0x8003): " + "'", str56, "Unknown Tag (0x8003): ");
    }

    @Test
    void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (-3), (-1), tiffDirectoryType12, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("N", 79, 8, tiffDirectoryType12, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = tagInfoLongOrIfd16.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("258 (0x102: BitsPerSample): ", 37, 32908, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("A", 65535, 34712, tiffDirectoryType17, true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData92 = directory91.getJpegImageData();
        java.lang.String str94 = directory91.toString("VBad Type: \n\n");
        directory91.add("Element, offset: 37, length: 12, last: 49", "Float");
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNull(jpegImageData92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "VBad Type: \n\nBad Type: \n\n" + "'", str94, "VBad Type: \n\nBad Type: \n\n");
    }

    @Test
    void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType10);
        int int15 = tagInfoSLongs14.length;
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser16 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder17 = tiffImageParser16.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = tiffImageParser16.canAcceptType(imageFormat18);
        java.lang.String str20 = tiffImageParser16.getName();
        java.nio.ByteOrder byteOrder21 = tiffImageParser16.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("", 32897, (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("Bad Type: \n\n", 13, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong35 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_XCLIP_PATH_UNITS;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType41);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader45 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder46 = tiffReader45.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational48 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort49 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts50 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational51 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort56 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList58 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, abstractFieldTypeArray57);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType60 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList58, tiffDirectoryType60);
        java.nio.ByteOrder byteOrder62 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray64 = tagInfoByte61.encodeValue(byteOrder62, (byte) 0);
        short[] shortArray65 = new short[] {};
        byte[] byteArray66 = tagInfoShortOrLongOrRational51.encodeValue(byteOrder62, shortArray65);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational67 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        short[] shortArray81 = new short[] {};
        byte[] byteArray82 = tagInfoShortOrLongOrRational67.encodeValue(byteOrder78, shortArray81);
        byte[] byteArray83 = tagInfoShorts50.encodeValue(byteOrder62, shortArray81);
        byte[] byteArray85 = tagInfoShort49.encodeValue(byteOrder62, (short) (byte) 10);
        short[] shortArray87 = new short[] { (byte) 0 };
        byte[] byteArray88 = tagInfoShortOrRational48.encodeValue(byteOrder62, shortArray87);
        byte[] byteArray89 = tagInfoByteOrShort43.encodeValue(byteOrder46, shortArray87);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy90 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder46);
        byte[] byteArray92 = tagInfoLong35.encodeValue(byteOrder46, (-4));
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy93 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy94 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder46);
        byte[] byteArray96 = tagInfoFloat34.encodeValue(byteOrder46, (float) 32803);
        int[] intArray97 = tagInfoSLongs14.getValue(byteOrder21, byteArray96);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet98 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Tiff-Custom" + "'", str20, "Tiff-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoLong35);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType41 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType41.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational48);
        org.junit.Assert.assertNotNull(tagInfoShort49);
        org.junit.Assert.assertNotNull(tagInfoShorts50);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational51);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational67);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[-1, -1, -1, -4]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[71, 0, 35, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[1191191296]");
    }

    @Test
    void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = tiffImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = tiffImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData92 = directory91.getJpegImageData();
        java.awt.image.BufferedImage bufferedImage93 = directory91.getThumbnail();
        java.lang.String str95 = directory91.toString("TIFF image data: 0 bytes");
        java.awt.image.BufferedImage bufferedImage96 = directory91.getThumbnail();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertNull(jpegImageData92);
        org.junit.Assert.assertNull(bufferedImage93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "TIFF image data: 0 bytesBad Type: \n\n" + "'", str95, "TIFF image data: 0 bytesBad Type: \n\n");
        org.junit.Assert.assertNull(bufferedImage96);
    }

    @Test
    void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.convertYCbCrtoRGB(0, 32947, 5);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-16776961) + "'", int3 == (-16776961));
    }

    @Test
    void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType8 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataInt2.getSimpleStatistics((float) 0L);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(11, 69, (-16759808), 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (11, 69)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType8 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType8.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        byte[] byteArray52 = tagInfoSByte10.encodeValue(byteOrder23, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader56 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder23, 23, (long) 64, true);
        java.lang.String str57 = tiffHeader56.getElementDescription();
        java.lang.String str58 = tiffHeader56.getElementDescription();
        int int59 = tiffHeader56.tiffVersion;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "TIFF Header" + "'", str57, "TIFF Header");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "TIFF Header" + "'", str58, "TIFF Header");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 23 + "'", int59 == 23);
    }

    @Test
    void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffContents tiffContents5 = tiffReader1.readDirectories(byteSource2, true, formatCompliance4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement((long) 32, 50717);
    }

    @Test
    void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType16, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65536, tiffDirectoryType16, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, 65000, tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 5, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte37 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("AUnknown Tag (0x8003): Unknown Tag (0x8003): ", 7, (int) (byte) 10, tiffDirectoryType30);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 7, 79.0f);
        float float3 = photometricInterpreterFloat2.getMinFound();
        int[] intArray4 = photometricInterpreterFloat2.getMaxXY();
        float float5 = photometricInterpreterFloat2.getMeanFound();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + Float.POSITIVE_INFINITY + "'", float3 == Float.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
    }

    @Test
    void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList10 = tiffContents7.getElements();
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader11 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList12 = tiffContents7.tiffFields;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(abstractTiffElementList10);
        org.junit.Assert.assertNull(tiffHeader11);
        org.junit.Assert.assertNotNull(tiffFieldList12);
    }

    @Test
    void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes10 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PHOTOSHOP_SETTINGS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField11 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoBytes10);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort20 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray43 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray38, 34713, (int) (byte) 0, false, (-65281));
        short short44 = tagInfoShort20.getValue(byteOrder31, byteArray43);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort49 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList51 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList51, abstractFieldTypeArray50);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList51, tiffDirectoryType53);
        java.nio.ByteOrder byteOrder55 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray57 = tagInfoByte54.encodeValue(byteOrder55, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray58 = tagInfoSRationals19.getValue(byteOrder31, byteArray57);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless59 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray57);
        java.nio.ByteOrder byteOrder60 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField62 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_16, (long) 34676, (long) 7, byteArray57, byteOrder60, 9);
        long[] longArray63 = tiffField62.getLongArrayValue();
        long long64 = tiffField62.getCount();
        java.lang.String str65 = tiffField62.getFieldTypeName();
        long[] longArray66 = tiffField62.getLongArrayValue();
        int int67 = tiffField62.getDirectoryType();
        java.lang.String str68 = tiffField62.getTagName();
        java.lang.String str69 = tiffField62.getDescriptionWithoutValue();
        java.lang.Object obj70 = tagInfoBytes10.getValue(tiffField62);
        int int71 = tiffField62.getOffset();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(tagInfoBytes10);
        org.junit.Assert.assertNull(tiffField11);
        org.junit.Assert.assertNotNull(tagInfoSRationals19);
        org.junit.Assert.assertNotNull(tagInfoShort20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short44 + "' != '" + (short) 4096 + "'", short44 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray58);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 34676L + "'", long64 == 34676L);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 31 + "'", int67 == 31);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Unknown Tag (0x8003)" + "'", str68, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str69, "32771 (0x8003: Unknown Tag): ");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
    }

    @Test
    void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort10, 6, tiffDirectoryType15, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("TIFF image data: 0 bytes", (int) ' ', 9, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", (int) (short) 1, 32771, tiffDirectoryType15);
        java.lang.String str21 = tagInfoUnknowns20.getDescription();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1 (0x1: Element, offset: 37, length: 12, last: 49Bad Type: \n\n): " + "'", str21, "1 (0x1: Element, offset: 37, length: 12, last: 49Bad Type: \n\n): ");
    }

    @Test
    void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap dataParserBitmap0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap();
        int int1 = dataParserBitmap0.getBasicChannelsCount();
        int int2 = dataParserBitmap0.getBasicChannelsCount();
        int int3 = dataParserBitmap0.getBasicChannelsCount();
        int int4 = dataParserBitmap0.getBasicChannelsCount();
        int int5 = dataParserBitmap0.getBasicChannelsCount();
        int int6 = dataParserBitmap0.getBasicChannelsCount();
        int int7 = dataParserBitmap0.getBasicChannelsCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
    }

    @Test
    void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) (-65281), 2);
        java.lang.String str3 = stub2.getElementDescription();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Element, offset: -65281, length: 2, last: -65279" + "'", str3, "Element, offset: -65281, length: 2, last: -65279");
    }

    @Test
    void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType10);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = tagInfoByteOrShort11.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("SByte", (-16759808), abstractFieldTypeList12, 15, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("", (-3), (-1), tiffDirectoryType28, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("SByte", 0, abstractFieldTypeList12, 9, tiffDirectoryType28, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("15 (0xf: Unknown Tag (0x8003): ): Unknown Tag (0x8003): ", 89, 100, tiffDirectoryType28);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList12);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_LENS_MODEL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder4 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray12 = tagInfoAscii3.encodeValue(byteOrder4, strArray11);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField13 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong1, 79, byteArray12);
        byte[] byteArray16 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT6(byteArray12, 4, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray20 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_2D(byteArray16, 336, 80, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(fieldTypeLong1);
        org.junit.Assert.assertNotNull(tagInfoAscii3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
    }

    @Test
    void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt5 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        float[] floatArray6 = tiffRasterDataInt5.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat7 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat((int) 'a', (-16776961), (-65536), floatArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType8, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort4, tiffDirectoryType8);
        java.lang.String str12 = fieldTypeShort4.getName();
        java.lang.String str13 = fieldTypeShort4.getName();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList93 = tiffDirectory89.getDirectoryEntries();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong94 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_YCLIP_PATH_UNITS;
        // The following exception was thrown during execution in test generation
        try {
            int int95 = tiffDirectory89.getFieldValue(tagInfoLong94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"YClipPathUnits\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(tiffFieldList93);
        org.junit.Assert.assertNotNull(tagInfoLong94);
    }

    @Test
    void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.getFieldType(34712);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Field type 34712 is unsupported");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
    }

    @Test
    void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(19, 6, 79);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat3.getSimpleStatistics((float) 88);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics();
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
    }

    @Test
    void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType32 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType32);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType32);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoSByte35.encodeValue(byteOrder36, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory39 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData40 = tiffOutputDirectory39.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory39.add(tagInfoByte41, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField45 = tiffOutputDirectory39.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType55);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoSByte58.encodeValue(byteOrder59, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory62 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder59);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData63 = tiffOutputDirectory62.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte64 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory62.add(tagInfoByte64, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField68 = tiffOutputDirectory62.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType76);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType76);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType76);
        tiffOutputDirectory62.add(tagInfoFloat79, (float) 32803);
        tiffOutputDirectory39.setNextDirectory(tiffOutputDirectory62);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor83 = tiffOutputDirectory39.iterator();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator84 = tiffOutputDirectory39.spliterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField86 = tiffOutputDirectory39.findField(0);
        tiffOutputDirectory16.setNextDirectory(tiffOutputDirectory39);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor88 = tiffOutputDirectory16.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType32 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType32.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData40);
        org.junit.Assert.assertNotNull(tagInfoByte41);
        org.junit.Assert.assertNull(tiffOutputField45);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType55 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType55.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData63);
        org.junit.Assert.assertNotNull(tagInfoByte64);
        org.junit.Assert.assertNull(tiffOutputField68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType76 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType76.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tiffOutputFieldItor83);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator84);
        org.junit.Assert.assertNull(tiffOutputField86);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor88);
    }

    @Test
    void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_NEW_SUBFILE_TYPE;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("V", 11, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong13 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_OFFSET_SCHEMA;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort23 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList25 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, abstractFieldTypeArray24);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType27 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList25, tiffDirectoryType27);
        java.nio.ByteOrder byteOrder29 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray31 = tagInfoByte28.encodeValue(byteOrder29, (byte) 0);
        byte[] byteArray33 = tagInfoDouble18.encodeValue(byteOrder29, (double) 32773);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational46 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts48 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational49 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        short[] shortArray63 = new short[] {};
        byte[] byteArray64 = tagInfoShortOrLongOrRational49.encodeValue(byteOrder60, shortArray63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational65 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort70 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort70 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList72 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList72, abstractFieldTypeArray71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType74 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList72, tiffDirectoryType74);
        java.nio.ByteOrder byteOrder76 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray78 = tagInfoByte75.encodeValue(byteOrder76, (byte) 0);
        short[] shortArray79 = new short[] {};
        byte[] byteArray80 = tagInfoShortOrLongOrRational65.encodeValue(byteOrder76, shortArray79);
        byte[] byteArray81 = tagInfoShorts48.encodeValue(byteOrder60, shortArray79);
        byte[] byteArray83 = tagInfoShort47.encodeValue(byteOrder60, (short) (byte) 10);
        short[] shortArray85 = new short[] { (byte) 0 };
        byte[] byteArray86 = tagInfoShortOrRational46.encodeValue(byteOrder60, shortArray85);
        byte[] byteArray88 = tagInfoSByte45.encodeValue(byteOrder60, (byte) 0);
        byte[] byteArray90 = tagInfoDouble18.encodeValue(byteOrder60, (double) 77);
        byte[] byteArray92 = tagInfoSLong13.encodeValue(byteOrder60, 77);
        byte[] byteArray94 = tagInfoDouble12.encodeValue(byteOrder60, (double) 32771);
        byte[] byteArray96 = tagInfoLong0.encodeValue(byteOrder60, 34892);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy97 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder60);
        org.junit.Assert.assertNotNull(tagInfoLong0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoSLong13);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(abstractFieldTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 0, 0, -96, 0, -32, 64]");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType42 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType42.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrRational46);
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(tagInfoShorts48);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational49);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational65);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[0, 0, 0, 0, 0, 64, 83, 64]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[77, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[0, 0, 0, 0, 96, 0, -32, 64]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[76, -120, 0, 0]");
    }

    @Test
    void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("S", (int) (short) 4096, 11, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): Bad Type: \n\n", 32896, (int) '#', tiffDirectoryType15);
        boolean boolean22 = tiffDirectoryType15.isImageDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType3);
        java.lang.String str5 = tagInfoLongs4.name;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "M" + "'", str5, "M");
    }

    @Test
    void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory2 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter3 = null;
        int[] intArray9 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration16 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader18 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder19 = tiffReader18.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles20 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled21 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory2, photometricInterpreter3, 10, (int) (byte) 10, (-65281), intArray9, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration16, byteOrder19, tiles20);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab25 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray9, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr photometricInterpreterYCbCr29 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr((-16714752), intArray9, 25, (-6316129), 1678379530);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder30 = null;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong31 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals39 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort40 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray63 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray58, 34713, (int) (byte) 0, false, (-65281));
        short short64 = tagInfoShort40.getValue(byteOrder51, byteArray63);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort69 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray70 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort69 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList71 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList71, abstractFieldTypeArray70);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType73 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList71, tiffDirectoryType73);
        java.nio.ByteOrder byteOrder75 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray77 = tagInfoByte74.encodeValue(byteOrder75, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray78 = tagInfoSRationals39.getValue(byteOrder51, byteArray77);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless79 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray77);
        java.nio.ByteOrder byteOrder80 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField82 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_36, (long) 34676, (long) 7, byteArray77, byteOrder80, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType83 = tiffField82.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType84 = tiffField82.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement85 = tiffField82.getOversizeValueElement();
        int int86 = tiffField82.getOffset();
        int int87 = tiffField82.getDirectoryType();
        java.lang.Object obj88 = fieldTypeLong31.getValue(tiffField82);
        int[] intArray89 = tiffField82.getIntArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterYCbCr29.interpretPixel(imageBuilder30, intArray89, 80, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration16 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration16.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(fieldTypeLong31);
        org.junit.Assert.assertNotNull(tagInfoSRationals39);
        org.junit.Assert.assertNotNull(tagInfoShort40);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short64 + "' != '" + (short) 4096 + "'", short64 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray78);
        org.junit.Assert.assertNotNull(abstractFieldType83);
        org.junit.Assert.assertNotNull(abstractFieldType84);
        org.junit.Assert.assertNotNull(abstractTiffElement85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 7 + "'", int86 == 7);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 31 + "'", int87 == 31);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
    }

    @Test
    void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("N", (int) '4', 34712, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("hi!", (int) ' ', 32809, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("", 336, (int) '4', tiffDirectoryType15);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 69, 93);
        java.lang.String str3 = stub2.getElementDescription();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Element, offset: 69, length: 93, last: 162" + "'", str3, "Element, offset: 69, length: 93, last: 162");
    }

    @Test
    void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 1, "hi!");
        int int3 = fieldTypeFloat2.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes4 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_APPLICATION_NOTES;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals12 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray36 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray31, 34713, (int) (byte) 0, false, (-65281));
        short short37 = tagInfoShort13.getValue(byteOrder24, byteArray36);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort42 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList44 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, abstractFieldTypeArray43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList44, tiffDirectoryType46);
        java.nio.ByteOrder byteOrder48 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray50 = tagInfoByte47.encodeValue(byteOrder48, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray51 = tagInfoSRationals12.getValue(byteOrder24, byteArray50);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless52 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray50);
        java.nio.ByteOrder byteOrder53 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_9, (long) 34676, (long) 7, byteArray50, byteOrder53, 9);
        long[] longArray56 = tiffField55.getLongArrayValue();
        long long57 = tiffField55.getCount();
        java.lang.String str58 = tiffField55.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem59 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField55);
        java.lang.Object obj60 = tagInfoBytes4.getValue(tiffField55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo61 = tiffField55.getTagInfo();
        java.lang.Object obj62 = fieldTypeFloat2.getValue(tiffField55);
        long long63 = tiffField55.getCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(tagInfoBytes4);
        org.junit.Assert.assertNotNull(tagInfoSRationals12);
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 4096 + "'", short37 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray51);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 34676L + "'", long57 == 34676L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(tagInfo61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 34676L + "'", long63 == 34676L);
    }

    @Test
    void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds68 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CFAPATTERN;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUndefineds68, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType79 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType79);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType79);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("E", 0, tiffDirectoryType79);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = tiffDirectory66.getFieldValue(tagInfoSLong82);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"E\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertNotNull(tagInfoUndefineds68);
        org.junit.Assert.assertNull(tiffField70);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType79 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType79.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) (short) 4096);
        int int53 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType59);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("Tiff-Custom", 95, tiffDirectoryType59);
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong) tagInfoDirectory61, (-16776961));
        java.lang.String str64 = tagInfoDirectory61.getDescription();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 31 + "'", int53 == 31);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType59 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType59.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "95 (0x5f: Tiff-Custom): " + "'", str64, "95 (0x5f: Tiff-Custom): ");
    }

    @Test
    void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder4 = tiffImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong2 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray9 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray10 = tagInfoShortOrLong2.encodeValue(byteOrder3, intArray9);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data11 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 34712, 37, byteArray10);
        int int12 = data11.getDataLength();
        org.junit.Assert.assertNotNull(tagInfoShortOrLong2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 20 + "'", int12 == 20);
    }

    @Test
    void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) (short) 4096);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType71 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational72 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs tagInfoSLongs75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs("N", 34712, (int) '#', tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("Unknown Tag (0x8003): ", 14, 255, tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("ImageColorIndicator", (int) (short) 1, 65, tiffDirectoryType71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory78 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]", 32766, tiffDirectoryType71);
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong) tagInfoDirectory78, 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType71 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType71.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        boolean boolean8 = tiffImagingParameters7.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setXmpXml("A");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters7.setSubImage(4, 64, 32895, 34712);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters7.setXmpXml("");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters17.setCompression((java.lang.Integer) 20);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
    }

    @Test
    void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray3 = photometricInterpreterFloat2.getMinXY();
        float float4 = photometricInterpreterFloat2.getMeanFound();
        float float5 = photometricInterpreterFloat2.getMaxFound();
        float float6 = photometricInterpreterFloat2.getMinFound();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + Float.NEGATIVE_INFINITY + "'", float5 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + Float.POSITIVE_INFINITY + "'", float6 == Float.POSITIVE_INFINITY);
    }

    @Test
    void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((-65536), "ImageDataElement");
    }

    @Test
    void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter5 = tiffImagingParameters2.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setT6Options((java.lang.Integer) 42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters7.setT4Options((java.lang.Integer) 30);
        java.lang.String str10 = tiffImagingParameters7.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters7.setReadThumbnails(false);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(photometricInterpreter5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
    }

    @Test
    void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType4 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean5 = tiffDirectoryType4.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("A", (int) (byte) 1, tiffDirectoryType4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii7 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_IMAGE_ID;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory8 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter9 = null;
        int[] intArray15 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration22 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader24 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder25 = tiffReader24.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles26 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled27 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory8, photometricInterpreter9, 10, (int) (byte) 10, (-65281), intArray15, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration22, byteOrder25, tiles26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals32 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder33 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals34 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort35 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray58 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray53, 34713, (int) (byte) 0, false, (-65281));
        short short59 = tagInfoShort35.getValue(byteOrder46, byteArray58);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray73 = tagInfoSRationals34.getValue(byteOrder46, byteArray72);
        byte[] byteArray74 = tagInfoRationals32.encodeValue(byteOrder33, rationalNumberArray73);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data75 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray74);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data76 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray74);
        java.lang.String[] strArray77 = tagInfoAscii7.getValue(byteOrder25, byteArray74);
        byte[] byteArray79 = tagInfoSByte6.encodeValue(byteOrder25, (byte) 10);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData80 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 13, (int) (short) 100, byteArray79);
        java.lang.String str81 = jpegImageData80.getElementDescription();
        java.lang.String str82 = jpegImageData80.getElementDescription();
        java.lang.String str83 = jpegImageData80.getElementDescription();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType4 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType4.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(tagInfoAscii7);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(tagInfoRationals32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(tagInfoSRationals34);
        org.junit.Assert.assertNotNull(tagInfoShort35);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short59 + "' != '" + (short) 4096 + "'", short59 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "JPEG image data: 1 bytes" + "'", str81, "JPEG image data: 1 bytes");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "JPEG image data: 1 bytes" + "'", str82, "JPEG image data: 1 bytes");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "JPEG image data: 1 bytes" + "'", str83, "JPEG image data: 1 bytes");
    }

//    @Test
//    void test4305() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4305");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
//        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
//        tiffOutputSet85.removeField((int) '4');
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getGpsDirectory();
//        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryList91 = tiffOutputSet85.getDirectories();
//        java.lang.String str92 = tiffOutputSet85.toString();
//        java.nio.ByteOrder byteOrder93 = tiffOutputSet85.byteOrder;
//        java.lang.Class<?> wildcardClass94 = tiffOutputSet85.getClass();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tagInfoDirectory86);
//        org.junit.Assert.assertNull(tiffOutputDirectory90);
//        org.junit.Assert.assertNotNull(tiffOutputDirectoryList91);
//        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str92, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
//        org.junit.Assert.assertNotNull(byteOrder93);
//        org.junit.Assert.assertNotNull(wildcardClass94);
//    }

    @Test
    void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList9 = tiffContents7.directories;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList11 = tiffContents7.getElements();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tiffDirectoryList9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(abstractTiffElementList11);
    }

    @Test
    void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.getSortHint();
        tiffOutputField74.setSortHint(64);
        int int80 = tiffOutputField74.count;
        byte[] byteArray81 = tiffOutputField74.getData();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 32769 + "'", int80 == 32769);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 16]");
    }

    @Test
    void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setLzwCompressionBlockSize((java.lang.Integer) 34713);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
    }

    @Test
    void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList9 = tiffContents7.directories;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType19);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoSByte22.encodeValue(byteOrder23, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory26 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder23);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData27 = tiffOutputDirectory26.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte28 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory26.add(tagInfoByte28, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField32 = tiffOutputDirectory26.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType42);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoSByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory49 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder46);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData50 = tiffOutputDirectory49.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte51 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory49.add(tagInfoByte51, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField55 = tiffOutputDirectory49.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType63 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii64 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType63);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat66 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType63);
        tiffOutputDirectory49.add(tagInfoFloat66, (float) 32803);
        tiffOutputDirectory26.setNextDirectory(tiffOutputDirectory49);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 34676, tiffDirectoryType78);
        tiffOutputDirectory49.add(tagInfoSByte81, (byte) 1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte84 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PREVIEW_APPLICATION_NAME;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField85 = tiffOutputDirectory49.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAsciiOrByte84);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAsciiOrByte84);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList87 = tiffContents7.directories;
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata88 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tiffDirectoryList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType19 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType19.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData27);
        org.junit.Assert.assertNotNull(tagInfoByte28);
        org.junit.Assert.assertNull(tiffOutputField32);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType42 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType42.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData50);
        org.junit.Assert.assertNotNull(tagInfoByte51);
        org.junit.Assert.assertNull(tiffOutputField55);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType63 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType63.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(tagInfoAsciiOrByte84);
        org.junit.Assert.assertNull(tiffOutputField85);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertNotNull(tiffDirectoryList87);
    }

    @Test
    void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n", 9, (int) (short) 0, tiffDirectoryType10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("32771 (0x8003: Unknown Tag):  (34676 hi!)");
        boolean boolean7 = tiffImageParser0.canAcceptExtension("JPEG image data: 1 bytes");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters9.setPixelDensity(pixelDensity10);
        java.lang.Integer int12 = tiffImagingParameters9.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters14 = tiffImagingParameters9.setXmpXml("V");
        tiffImagingParameters14.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters14.setFileName("M");
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage18 = tiffImageParser0.getBufferedImage(byteSource8, tiffImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(tiffImagingParameters14);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
    }

    @Test
    void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters2.setXmpXml("Bad Type");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters2.setReadThumbnails(false);
        java.lang.String str7 = tiffImagingParameters2.getFileName();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory86 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_GLOBAL_PARAMETERS_IFD;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoDirectory86);
        tiffOutputSet85.removeField((int) '4');
        tiffOutputSet85.setGpsInDegrees((double) 0L, (double) 10.0f);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes93 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PIXEL_INTENSITY_RANGE;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField94 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoBytes93);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory95 = tiffOutputSet85.addInteroperabilityDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory96 = tiffOutputSet85.addInteroperabilityDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoDirectory86);
        org.junit.Assert.assertNotNull(tagInfoBytes93);
        org.junit.Assert.assertNull(tiffOutputField94);
        org.junit.Assert.assertNotNull(tiffOutputDirectory95);
    }

    @Test
    void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.limit((-65281), 5, 32769);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
    }

    @Test
    void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getInteroperabilityDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
    }

    @Test
    void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (short) 4096, 32, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("258 (0x102: BitsPerSample): ", 32768, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n", 6, tiffDirectoryType14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addGpsDirectory();
        java.lang.String str90 = tiffOutputDirectory89.description();
        tiffOutputDirectory89.removeField((-1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Gps" + "'", str90, "Gps");
    }

    @Test
    void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType6 = tiffRasterDataInt2.getDataType();
        float[] floatArray7 = tiffRasterDataInt2.getData();
        int[] intArray8 = tiffRasterDataInt2.getIntData();
        int int9 = tiffRasterDataInt2.getWidth();
        float[] floatArray10 = tiffRasterDataInt2.getData();
        int int11 = tiffRasterDataInt2.getHeight();
        int int12 = tiffRasterDataInt2.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics14 = tiffRasterDataInt2.getSimpleStatistics((float) 1L);
        float float15 = tiffRasterStatistics14.getMinValue();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + tiffRasterDataType6 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType6.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 0.0f + "'", float15 == 0.0f);
    }

    @Test
    void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        float[] floatArray4 = tiffRasterDataInt2.getData();
        int[] intArray5 = tiffRasterDataInt2.getIntData();
        int int6 = tiffRasterDataInt2.getWidth();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(65000, 34713, (float) 65535);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (65000, 34713)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
    }

    @Test
    void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(65000, "E");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n}\r\n", 34661, 24, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]", (int) (byte) 0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeByte4, 16, tiffDirectoryType10, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getOrCreateRootDirectory();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getRootDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory91 = tiffOutputSet85.addGpsDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
        org.junit.Assert.assertNotNull(tiffOutputDirectory91);
    }

    @Test
    void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips4 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 0);
        int int5 = strips4.getImageDataLength();
        int int6 = strips4.rowsPerStrip;
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray67 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips69 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray67, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles72 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray67, (int) (short) 1, 14);
        boolean boolean73 = tiles72.stripsNotTiles();
        int int74 = tiles72.getTileWidth();
        tiffDirectory66.setTiffImageData((org.apache.commons.imaging.formats.tiff.AbstractTiffImageData) tiles72);
        tiffDirectory66.dump();
        boolean boolean77 = tiffDirectory66.hasTiffRasterData();
        java.nio.ByteOrder byteOrder78 = tiffDirectory66.getByteOrder();
        boolean boolean79 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType84 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory85 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("Unknown Tag (0x8003)", (int) (short) -1, tiffDirectoryType84);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("32771 (0x8003: Unknown Tag): ", 42, tiffDirectoryType84);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = tiffDirectory66.getFieldValue(tagInfoSLong86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"32771 (0x8003: Unknown Tag): \" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(dataElementArray67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType84 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType84.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 6, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("hi!", (-65281), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort6, 95);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble((int) (byte) 0, "M");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort28 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort33 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort33 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList35 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, abstractFieldTypeArray34);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType37 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList35, tiffDirectoryType37);
        java.nio.ByteOrder byteOrder39 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray41 = tagInfoByte38.encodeValue(byteOrder39, (byte) 0);
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray51 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray46, 34713, (int) (byte) 0, false, (-65281));
        short short52 = tagInfoShort28.getValue(byteOrder39, byteArray51);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray66 = tagInfoSRationals27.getValue(byteOrder39, byteArray65);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless67 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray65);
        java.nio.ByteOrder byteOrder68 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField70 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_24, (long) 34676, (long) 7, byteArray65, byteOrder68, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType71 = tiffField70.getFieldType();
        byte[] byteArray72 = tiffField70.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType73 = tiffField70.getFieldType();
        java.lang.Object obj74 = fieldTypeDouble19.getValue(tiffField70);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo75 = tiffField70.getTagInfo();
        java.lang.Object obj76 = fieldTypeShort6.getValue(tiffField70);
        long[] longArray77 = tiffField70.getLongArrayValue();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals27);
        org.junit.Assert.assertNotNull(tagInfoShort28);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short52 + "' != '" + (short) 4096 + "'", short52 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray66);
        org.junit.Assert.assertNotNull(abstractFieldType71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(tagInfo75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[]");
    }

    @Test
    void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        java.io.PrintWriter printWriter52 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField50.dump(printWriter52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
    }

    @Test
    void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        java.awt.Color color1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue paletteEntryForValue2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PaletteEntryForValue((float) (short) -1, color1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null colors not allowed");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList4 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.ASCII_OR_BYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort12, 5, tiffDirectoryType14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType26 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("N", (-2), 89, tiffDirectoryType26, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Tiff-Custom", 19, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort12, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("tif", 22, abstractFieldTypeList4, 34892, tiffDirectoryType26, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText("M", (int) (short) -30875, tiffDirectoryType26);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat((int) (short) 100, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte39 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless87 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray85);
        java.nio.ByteOrder byteOrder88 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField90 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_44, (long) 34676, (long) 7, byteArray85, byteOrder88, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType91 = tiffField90.getFieldType();
        boolean boolean92 = tiffField90.isLocalValue();
        java.lang.Object obj93 = fieldTypeByte39.getValue(tiffField90);
        java.lang.Object obj94 = fieldTypeFloat38.getValue(tiffField90);
        int int95 = tiffField90.getTag();
        long[] longArray96 = tiffField90.getLongArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = tagInfoGpsText35.getValue(tiffField90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: GPS text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(abstractFieldTypeList4);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType14 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType14.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType26 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType26.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(fieldTypeByte39);
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(abstractFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32771 + "'", int95 == 32771);
        org.junit.Assert.assertNotNull(longArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray96), "[]");
    }

    @Test
    void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SHORT_OR_LONG_OR_RATIONAL;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType22);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("N", (-2), 89, tiffDirectoryType22, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 64, abstractFieldTypeList10, 32, tiffDirectoryType22, false);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList34 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort46, 5, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType48);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: 37, length: 12, last: 49", 65536, abstractFieldTypeList34, 80, tiffDirectoryType48, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType58);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) 'a', abstractFieldTypeList34, 14, tiffDirectoryType58);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Exif", (-6316129), abstractFieldTypeList10, tiffDirectoryType58);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("A", 12, (int) (byte) 1, tiffDirectoryType58);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]", (int) (short) -30875, 1751720192, tiffDirectoryType58);
        org.junit.Assert.assertNotNull(abstractFieldTypeList10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType22 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType22.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList34);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType48 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType48.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType58 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType58.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort15 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList17 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, abstractFieldTypeArray16);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder21 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray23 = tagInfoByte20.encodeValue(byteOrder21, (byte) 0);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray33 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray28, 34713, (int) (byte) 0, false, (-65281));
        short short34 = tagInfoShort10.getValue(byteOrder21, byteArray33);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray48 = tagInfoSRationals9.getValue(byteOrder21, byteArray47);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless49 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray47);
        java.nio.ByteOrder byteOrder50 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField52 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, (long) 34676, (long) 7, byteArray47, byteOrder50, 9);
        long[] longArray53 = tiffField52.getLongArrayValue();
        long long54 = tiffField52.getCount();
        java.lang.String str55 = tiffField52.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem56 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField52);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField57 = tiffMetadataItem56.getTiffField();
        byte[] byteArray58 = tiffField57.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData59 = new org.apache.commons.imaging.formats.tiff.JpegImageData((long) 32908, 32771, byteArray58);
        java.lang.String str60 = jpegImageData59.getElementDescription();
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short34 + "' != '" + (short) 4096 + "'", short34 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray48);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 34676L + "'", long54 == 34676L);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(tiffField57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "JPEG image data: 1 bytes" + "'", str60, "JPEG image data: 1 bytes");
    }

    @Test
    void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        boolean boolean3 = tiffImagingParameters0.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType7);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList9 = tagInfoByteOrShort8.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort18 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts19 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        short[] shortArray34 = new short[] {};
        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational36 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        short[] shortArray50 = new short[] {};
        byte[] byteArray51 = tagInfoShortOrLongOrRational36.encodeValue(byteOrder47, shortArray50);
        byte[] byteArray52 = tagInfoShorts19.encodeValue(byteOrder31, shortArray50);
        byte[] byteArray54 = tagInfoShort18.encodeValue(byteOrder31, (short) (byte) 10);
        byte[] byteArray61 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int62 = tagInfoDirectory17.getValue(byteOrder31, byteArray61);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort63 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort68 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray69 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort68 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList70 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList70, abstractFieldTypeArray69);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList70, tiffDirectoryType72);
        java.nio.ByteOrder byteOrder74 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray76 = tagInfoByte73.encodeValue(byteOrder74, (byte) 0);
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray86 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray81, 34713, (int) (byte) 0, false, (-65281));
        short short87 = tagInfoShort63.getValue(byteOrder74, byteArray86);
        byte[] byteArray88 = tagInfoByteOrShort8.encodeValue(byteOrder31, byteArray86);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet89 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder31);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor90 = tiffOutputSet89.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii91 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField92 = tiffOutputSet89.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii91);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory93 = tiffOutputSet89.getInteroperabilityDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = tiffOutputSet89.addRootDirectory();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters95 = tiffImagingParameters0.setOutputSet(tiffOutputSet89);
        java.nio.ByteOrder byteOrder96 = tiffOutputSet89.byteOrder;
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort18);
        org.junit.Assert.assertNotNull(tagInfoShorts19);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational36);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1678379530 + "'", int62 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort63);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short87 + "' != '" + (short) 4096 + "'", short87 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor90);
        org.junit.Assert.assertNotNull(tagInfoAscii91);
        org.junit.Assert.assertNull(tiffOutputField92);
        org.junit.Assert.assertNull(tiffOutputDirectory93);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertNotNull(tiffImagingParameters95);
        org.junit.Assert.assertNotNull(byteOrder96);
    }

    @Test
    void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType15, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort11, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("S", 34661, (int) ' ', tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown tagInfoUnknown20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknown("AUnknown Tag (0x8003): ", 69, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("Tiff-Custom", 88, tiffDirectoryType15);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList10 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 14, abstractFieldTypeList10, tiffDirectoryType17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        boolean boolean22 = tiffDirectoryType21.isImageDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n}\r\n", 19, abstractFieldTypeList10, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("JPEG image data: 2 bytes", 6, 32845, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ", 21, (int) ' ', tiffDirectoryType21);
        org.junit.Assert.assertNotNull(abstractFieldTypeList10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType17 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType17.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii fieldTypeAscii2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii((int) (short) 4096, "SLong");
        org.apache.commons.imaging.formats.tiff.TiffField tiffField3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = fieldTypeAscii2.getValue(tiffField3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffField.getByteArrayValue()\" because \"entry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType80 = tiffOutputField74.abstractFieldType;
        byte[] byteArray81 = tiffOutputField74.getData();
        tiffOutputField74.setSortHint(277408);
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertNotNull(abstractFieldType80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 16]");
    }

    @Test
    void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setFileName("hi!");
        boolean boolean8 = tiffImagingParameters7.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setXmpXml("A");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters7.setSubImage(4, 64, 32895, 34712);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters17 = tiffImagingParameters7.setXmpXml("");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters19 = tiffImagingParameters17.setT4Options((java.lang.Integer) 64);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter20 = tiffImagingParameters17.getCustomPhotometricInterpreter();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertNotNull(tiffImagingParameters17);
        org.junit.Assert.assertNotNull(tiffImagingParameters19);
        org.junit.Assert.assertNull(photometricInterpreter20);
    }

    @Test
    void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong86 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_AFCP_IPTC;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLong86);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryList88 = tiffOutputSet85.getDirectories();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoLong86);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryList88);
    }

    @Test
    void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        int int77 = tiffOutputField74.tag;
        byte[] byteArray78 = tiffOutputField74.getData();
        int int79 = tiffOutputField74.count;
        java.lang.String str81 = tiffOutputField74.toString("Directory: Exif IFD (-2)");
        byte[] byteArray82 = tiffOutputField74.getData();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 258 + "'", int77 == 258);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32769 + "'", int79 == 32769);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
    }

    @Test
    void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("E", 34661, 34713, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("ImageLayer", 34661, 34676, tiffDirectoryType8, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("ImageLayer", 0, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort13 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts14 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        short[] shortArray29 = new short[] {};
        byte[] byteArray30 = tagInfoShortOrLongOrRational15.encodeValue(byteOrder26, shortArray29);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational31 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        short[] shortArray45 = new short[] {};
        byte[] byteArray46 = tagInfoShortOrLongOrRational31.encodeValue(byteOrder42, shortArray45);
        byte[] byteArray47 = tagInfoShorts14.encodeValue(byteOrder26, shortArray45);
        byte[] byteArray49 = tagInfoShort13.encodeValue(byteOrder26, (short) (byte) 10);
        byte[] byteArray51 = tagInfoSLong12.encodeValue(byteOrder26, 24);
        byte[] byteArray54 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressModifiedHuffman(byteArray51, 9006, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray58 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_2D(byteArray51, 2189672, 255, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort13);
        org.junit.Assert.assertNotNull(tagInfoShorts14);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational31);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[24, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
    }

    @Test
    void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getOrCreateRootDirectory();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getExifDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory91 = tiffOutputSet85.addRootDirectory();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Output set already contains a directory of that type.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
        org.junit.Assert.assertNull(tiffOutputDirectory90);
    }

    @Test
    void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        int int6 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray7 = tiles5.tiles;
        int int8 = tiles5.getTileWidth();
        int int9 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray10 = tiles5.getImageData();
        java.lang.Class<?> wildcardClass11 = tiles5.getClass();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(dataElementArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(dataElementArray10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(32898, (int) (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat2.getSimpleStatistics((float) 3);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataFloat2.getSimpleStatistics();
        float float6 = tiffRasterStatistics5.getMinValue();
        float float7 = tiffRasterStatistics5.getMinValue();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7 == 0.0f);
    }

    @Test
    void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(30, "262 (0x106: PhotometricInterpretation): ");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList9 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CONTRAST_1;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = tagInfoShort11.directoryType;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("W", 0, abstractFieldTypeList9, 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("OversizeValueElement, tag: Unknown Tag, fieldType: hi!", (int) (short) 0, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Unknown Tag (0x8003): ", 12, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat4, tiffDirectoryType12);
        org.junit.Assert.assertNotNull(abstractFieldTypeList9);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.Object obj53 = tiffField50.getValue();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement54 = tiffField50.getOversizeValueElement();
        java.lang.String str55 = tiffField50.toString();
        java.lang.Object obj56 = tiffField50.getValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(abstractTiffElement54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str55, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips4 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 0);
        int int5 = strips4.getImageDataLength();
        int int6 = strips4.getImageDataLength();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData93 = tiffDirectory89.getJpegImageData();
        boolean boolean94 = tiffDirectory89.hasTiffImageData();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(jpegImageData93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(11, "ImageLayer");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble fieldTypeDouble5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble(4, "N");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField56.getFieldType();
        boolean boolean58 = tiffField56.isLocalValue();
        java.lang.String str59 = tiffField56.getValueDescription();
        java.lang.Object obj60 = fieldTypeDouble5.getValue(tiffField56);
        java.lang.Object obj61 = fieldTypeRational2.getValue(tiffField56);
        java.lang.String str62 = fieldTypeRational2.getName();
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ImageLayer" + "'", str62, "ImageLayer");
    }

    @Test
    void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort12 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort17 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList19 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, abstractFieldTypeArray18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList19, tiffDirectoryType21);
        java.nio.ByteOrder byteOrder23 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray25 = tagInfoByte22.encodeValue(byteOrder23, (byte) 0);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray35 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray30, 34713, (int) (byte) 0, false, (-65281));
        short short36 = tagInfoShort12.getValue(byteOrder23, byteArray35);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort41 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList43 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, abstractFieldTypeArray42);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList43, tiffDirectoryType45);
        java.nio.ByteOrder byteOrder47 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray49 = tagInfoByte46.encodeValue(byteOrder47, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray50 = tagInfoSRationals11.getValue(byteOrder23, byteArray49);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless51 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray49);
        java.nio.ByteOrder byteOrder52 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField54 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_8, (long) 34676, (long) 7, byteArray49, byteOrder52, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField54.getFieldType();
        boolean boolean56 = tiffField54.isLocalValue();
        java.lang.Object obj57 = fieldTypeByte3.getValue(tiffField54);
        int[] intArray58 = tiffField54.getIntArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt59 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt((-6316129), 35, 1751720192, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte3);
        org.junit.Assert.assertNotNull(tagInfoSRationals11);
        org.junit.Assert.assertNotNull(tagInfoShort12);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short36 + "' != '" + (short) 4096 + "'", short36 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray50);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
    }

    @Test
    void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        boolean boolean87 = tiffDirectory70.hasJpegImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong88 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_ACTIVE_AREA;
        int[] intArray90 = tiffDirectory70.getFieldValue(tagInfoShortOrLong88, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals91 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_WHITE_XY;
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray93 = tiffDirectory70.getFieldValue(tagInfoRationals91, false);
        boolean boolean94 = tiffDirectory70.hasTiffImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList95 = tiffDirectory70.getDirectoryEntries();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts96 = null;
        short[] shortArray98 = tiffDirectory70.getFieldValue(tagInfoSShorts96, false);
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tagInfoShortOrLong88);
        org.junit.Assert.assertNull(intArray90);
        org.junit.Assert.assertNotNull(tagInfoRationals91);
        org.junit.Assert.assertNull(rationalNumberArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(tiffFieldList95);
        org.junit.Assert.assertNull(shortArray98);
    }

    @Test
    void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) (short) 16, 10);
    }

    @Test
    void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.String str54 = tiffField51.getValueDescription();
        int[] intArray55 = tiffField51.getIntArrayValue();
        java.lang.String str56 = tiffField51.getFieldTypeName();
        java.lang.Object obj57 = fieldTypeRational0.getValue(tiffField51);
        int[] intArray58 = tiffField51.getIntArrayValue();
        java.lang.Object obj59 = tiffField51.getValue();
        org.junit.Assert.assertNotNull(fieldTypeRational0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips7 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) '4');
        int int8 = strips7.rowsPerStrip;
        boolean boolean9 = strips7.stripsNotTiles();
        int int10 = strips7.rowsPerStrip;
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = tiffImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        java.lang.String str4 = tiffImagingParameters2.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.asThis();
        int int6 = tiffImagingParameters5.getSubImageWidth();
        int int7 = tiffImagingParameters5.getSubImageY();
        tiffImagingParameters5.clearSubImage();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        float[] floatArray6 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics((float) (-2));
        float[] floatArray9 = tiffRasterDataInt2.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataInt2.getSimpleStatistics();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) (short) -30875, (int) 'a');
    }

    @Test
    void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = tiffImageParser0.canAcceptType(imageFormat1);
        java.awt.image.BufferedImage bufferedImage3 = null;
        java.io.OutputStream outputStream4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        int int8 = tiffImagingParameters7.getSubImageY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setLzwCompressionBlockSize((java.lang.Integer) 12);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters7.setReadThumbnails(false);
        // The following exception was thrown during execution in test generation
        try {
            tiffImageParser0.writeImage(bufferedImage3, outputStream4, tiffImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getWidth()\" because \"src\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
    }

    @Test
    void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy3 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder2);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader5 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray6 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, tiffDirectoryArray6);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray9 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10, tiffFieldArray9);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents12 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader5, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList7, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList10);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList13 = tiffContents12.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator14 = tiffFieldList13.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        byte[] byteArray69 = tagInfoSByte27.encodeValue(byteOrder40, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory70 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList13, (long) 34712, (long) 9, byteOrder40);
        java.awt.image.BufferedImage bufferedImage71 = tiffDirectory70.getTiffImage();
        java.lang.String str72 = tiffDirectory70.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity74 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters75 = tiffImagingParameters73.setPixelDensity(pixelDensity74);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = tiffImagingParameters75.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage78 = tiffDirectory70.getTiffImage(tiffImagingParameters75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType82 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType82);
        float[] floatArray85 = tiffDirectory70.getFieldValue(tagInfoFloats83, false);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory86 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder2, tiffDirectory70);
        boolean boolean87 = tiffDirectory70.hasJpegImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor88 = tiffDirectory70.iterator();
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(tiffDirectoryArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tiffFieldList13);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator14);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNull(bufferedImage71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters75);
        org.junit.Assert.assertNotNull(tiffImagingParameters77);
        org.junit.Assert.assertNull(bufferedImage78);
        org.junit.Assert.assertNull(floatArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(tiffFieldItor88);
    }

    @Test
    void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4358");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        int int3 = tiffRasterDataInt2.getHeight();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics5 = tiffRasterDataInt2.getSimpleStatistics(79.0f);
        int int6 = tiffRasterStatistics5.getCountOfNulls();
        float float7 = tiffRasterStatistics5.getMaxValue();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(tiffRasterStatistics5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7 == 0.0f);
    }

    @Test
    void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4359");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 29, (float) 21);
        int int4 = photometricInterpreterFloat2.mapValueToArgb((float) 69);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

//    @Test
//    void test4360() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4360");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        tiffOutputSet85.removeField(32768);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getExifDirectory();
//        tiffOutputSet85.setGpsInDegrees((double) Float.NEGATIVE_INFINITY, (double) 32803);
//        java.lang.String str92 = tiffOutputSet85.toString();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNull(tiffOutputDirectory88);
//        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Gps (-3)\r\n\t\tfield 2: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 2: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 2: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 2: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 2: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n" + "'", str92, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Gps (-3)\r\n\t\tfield 2: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\r\n\t\tfield 2: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\r\n\t\tfield 2: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\r\n\t\tfield 2: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\r\n\t\tfield 2: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\r\n}\r\n");
//    }

    @Test
    void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4361");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int[] intArray55 = tiffField51.getIntArrayValue();
        tiffField51.dump();
        int int57 = tiffField51.getOffset();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement60 = tiffField51.new OversizeValueElement(32809, 79);
        int int61 = tiffField51.getBytesLength();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 277408 + "'", int61 == 277408);
    }

    @Test
    void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4362");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort2 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray8 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort7 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList9 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList9, abstractFieldTypeArray8);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList9, tiffDirectoryType11);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoByte12.encodeValue(byteOrder13, (byte) 0);
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray25 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray20, 34713, (int) (byte) 0, false, (-65281));
        short short26 = tagInfoShort2.getValue(byteOrder13, byteArray25);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray40 = tagInfoSRationals1.getValue(byteOrder13, byteArray39);
        java.nio.ByteOrder byteOrder41 = null;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals49 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort50 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray73 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray68, 34713, (int) (byte) 0, false, (-65281));
        short short74 = tagInfoShort50.getValue(byteOrder61, byteArray73);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort79 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray80 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort79 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList81 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList81, abstractFieldTypeArray80);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType83 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte84 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList81, tiffDirectoryType83);
        java.nio.ByteOrder byteOrder85 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray87 = tagInfoByte84.encodeValue(byteOrder85, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray88 = tagInfoSRationals49.getValue(byteOrder61, byteArray87);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless89 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray87);
        java.nio.ByteOrder byteOrder90 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField92 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_46, (long) 34676, (long) 7, byteArray87, byteOrder90, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem93 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField92);
        java.lang.String str94 = tiffField92.getFieldTypeName();
        int[] intArray95 = tiffField92.getIntArrayValue();
        byte[] byteArray96 = tiffField92.getByteArrayValue();
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray97 = tagInfoSRationals1.getValue(byteOrder41, byteArray96);
        org.apache.commons.imaging.internal.Debug.debug("TIFF image data: 8 bytes", (java.lang.Object) rationalNumberArray97);
        org.junit.Assert.assertNotNull(tagInfoSRationals1);
        org.junit.Assert.assertNotNull(tagInfoShort2);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short26 + "' != '" + (short) 4096 + "'", short26 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray40);
        org.junit.Assert.assertNotNull(tagInfoSRationals49);
        org.junit.Assert.assertNotNull(tagInfoShort50);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short74 + "' != '" + (short) 4096 + "'", short74 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray88);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray97);
    }

    @Test
    void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4363");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        java.lang.String str55 = tiffMetadataItem54.getKeyword();
        java.lang.String str57 = tiffMetadataItem54.toString("Bad Type");
        java.lang.String str59 = tiffMetadataItem54.toString("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        java.lang.String str60 = tiffMetadataItem54.getKeyword();
        java.lang.String str61 = tiffMetadataItem54.toString();
        java.lang.String str62 = tiffMetadataItem54.toString();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Unknown Tag (0x8003)" + "'", str55, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Bad TypeUnknown Tag (0x8003): " + "'", str57, "Bad TypeUnknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): " + "'", str59, "[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]Unknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Unknown Tag (0x8003)" + "'", str60, "Unknown Tag (0x8003)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Unknown Tag (0x8003): " + "'", str61, "Unknown Tag (0x8003): ");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Unknown Tag (0x8003): " + "'", str62, "Unknown Tag (0x8003): ");
    }

    @Test
    void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4364");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList11 = tiffContents9.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DIMS;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader16 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder17 = tiffReader16.getByteOrder();
        int[] intArray21 = new int[] { (byte) 1, 14, 22 };
        int int22 = org.apache.commons.imaging.internal.SafeOperations.add(intArray21);
        byte[] byteArray23 = tagInfoLongs14.encodeValue(byteOrder17, intArray21);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory24 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) ' ', tiffFieldList11, (long) 34905, (long) 255, byteOrder17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong27 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_XCLIP_PATH_UNITS;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader37 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder38 = tiffReader37.getByteOrder();
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy39 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder38);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational40 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort41 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts42 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational43 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort48 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList50 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, abstractFieldTypeArray49);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, tiffDirectoryType52);
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray56 = tagInfoByte53.encodeValue(byteOrder54, (byte) 0);
        short[] shortArray57 = new short[] {};
        byte[] byteArray58 = tagInfoShortOrLongOrRational43.encodeValue(byteOrder54, shortArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational59 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        short[] shortArray73 = new short[] {};
        byte[] byteArray74 = tagInfoShortOrLongOrRational59.encodeValue(byteOrder70, shortArray73);
        byte[] byteArray75 = tagInfoShorts42.encodeValue(byteOrder54, shortArray73);
        byte[] byteArray77 = tagInfoShort41.encodeValue(byteOrder54, (short) (byte) 10);
        short[] shortArray79 = new short[] { (byte) 0 };
        byte[] byteArray80 = tagInfoShortOrRational40.encodeValue(byteOrder54, shortArray79);
        byte[] byteArray81 = tagInfoByteOrShort35.encodeValue(byteOrder38, shortArray79);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy82 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder38);
        byte[] byteArray84 = tagInfoLong27.encodeValue(byteOrder38, (-4));
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy85 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder38);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy86 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder38);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory87 = new org.apache.commons.imaging.formats.tiff.TiffDirectory((int) (byte) -1, tiffFieldList11, (long) '4', (long) 32946, byteOrder38);
        java.lang.String str88 = tiffDirectory87.getElementDescription();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData89 = tiffDirectory87.getTiffImageData();
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldList11);
        org.junit.Assert.assertNotNull(tagInfoLongs14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 37 + "'", int22 == 37);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 22]");
        org.junit.Assert.assertNotNull(tagInfoLong27);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType33 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType33.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational40);
        org.junit.Assert.assertNotNull(tagInfoShort41);
        org.junit.Assert.assertNotNull(tagInfoShorts42);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational43);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-1, -1, -1, -4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(abstractTiffImageData89);
    }

    @Test
    void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4365");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.addRootDirectory();
        boolean boolean88 = tiffOutputSet85.isEmpty();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.getOrCreateRootDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
    }

    @Test
    void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4366");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        int int19 = tiffOutputDirectory16.getItemLength();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField21 = tiffOutputDirectory16.findField(4);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText tagInfoGpsText23 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_AREA_INFORMATION;
        tiffOutputDirectory16.add(tagInfoGpsText23, "280 (0x118: MinSampleValue): ");
        tiffOutputDirectory16.removeField(80);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
        org.junit.Assert.assertNull(tiffOutputField21);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertNotNull(tagInfoGpsText23);
    }

    @Test
    void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4367");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.getOrCreateExifDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory91 = tiffOutputSet85.findDirectory((int) (short) 0);
        tiffOutputSet85.dump();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory91);
    }

    @Test
    void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4368");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem54 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField50);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField55 = tiffMetadataItem54.getTiffField();
        java.lang.String str57 = tiffMetadataItem54.toString("15 (0xf: Unknown Tag (0x8003): ): ");
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(tiffField55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "15 (0xf: Unknown Tag (0x8003): ): Unknown Tag (0x8003): " + "'", str57, "15 (0xf: Unknown Tag (0x8003): ): Unknown Tag (0x8003): ");
    }

    @Test
    void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4369");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        long[] longArray51 = tiffField50.getLongArrayValue();
        long long52 = tiffField50.getCount();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        tiffField50.dump();
        int int55 = tiffField50.getBytesLength();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 34676L + "'", long52 == 34676L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 277408 + "'", int55 == 277408);
    }

    @Test
    void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4370");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo4 = tiffImageParser0.getImageInfo(byteSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
    }

    @Test
    void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4371");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort2 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort9 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, abstractFieldTypeArray10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder15 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray17 = tagInfoByte14.encodeValue(byteOrder15, (byte) 0);
        short[] shortArray18 = new short[] {};
        byte[] byteArray19 = tagInfoShortOrLongOrRational4.encodeValue(byteOrder15, shortArray18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational20 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        short[] shortArray34 = new short[] {};
        byte[] byteArray35 = tagInfoShortOrLongOrRational20.encodeValue(byteOrder31, shortArray34);
        byte[] byteArray36 = tagInfoShorts3.encodeValue(byteOrder15, shortArray34);
        byte[] byteArray38 = tagInfoShort2.encodeValue(byteOrder15, (short) (byte) 10);
        short[] shortArray40 = new short[] { (byte) 0 };
        byte[] byteArray41 = tagInfoShortOrRational1.encodeValue(byteOrder15, shortArray40);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals42 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort43 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort48 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList50 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, abstractFieldTypeArray49);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList50, tiffDirectoryType52);
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray56 = tagInfoByte53.encodeValue(byteOrder54, (byte) 0);
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray66 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray61, 34713, (int) (byte) 0, false, (-65281));
        short short67 = tagInfoShort43.getValue(byteOrder54, byteArray66);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray73 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort72 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList74 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, abstractFieldTypeArray73);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType76 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte77 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList74, tiffDirectoryType76);
        java.nio.ByteOrder byteOrder78 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray80 = tagInfoByte77.encodeValue(byteOrder78, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray81 = tagInfoSRationals42.getValue(byteOrder54, byteArray80);
        byte[] byteArray82 = tagInfoSRationals0.encodeValue(byteOrder15, rationalNumberArray81);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy83 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder15);
        org.junit.Assert.assertNotNull(tagInfoSRationals0);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational1);
        org.junit.Assert.assertNotNull(tagInfoShort2);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational4);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals42);
        org.junit.Assert.assertNotNull(tagInfoShort43);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short67 + "' != '" + (short) 4096 + "'", short67 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
    }

//    @Test
//    void test4372() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4372");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        tiffOutputSet85.removeField(32768);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory89 = tiffOutputSet85.addInteroperabilityDirectory();
//        tiffOutputSet85.removeField(6);
//        java.lang.String str92 = tiffOutputSet85.toString();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
//        org.junit.Assert.assertNotNull(tiffOutputDirectory89);
//        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Gps (-3)\r\n\tdirectory 1: Root (0)\r\n\tdirectory 2: Exif (-2)\r\n\tdirectory 3: Interoperability (-4)\r\n}\r\n" + "'", str92, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Gps (-3)\r\n\tdirectory 1: Root (0)\r\n\tdirectory 2: Exif (-2)\r\n\tdirectory 3: Interoperability (-4)\r\n}\r\n");
//    }

    @Test
    void test4373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4373");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setFileName("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]");
        org.apache.commons.imaging.PixelDensity pixelDensity9 = tiffImagingParameters6.getPixelDensity();
        int[] intArray14 = new int[] { (byte) 1, 14, 22 };
        int int15 = org.apache.commons.imaging.internal.SafeOperations.add(intArray14);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab19 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray14, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters20 = tiffImagingParameters6.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterCieLab19);
        boolean boolean21 = tiffImagingParameters6.isStrict();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNull(pixelDensity9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 37 + "'", int15 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    void test4374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4374");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        java.lang.String str4 = tiffImageParser0.getName();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImageParser0.getDefaultParameters();
        java.lang.String str6 = tiffImageParser0.getDefaultExtension();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = tiffImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tif" + "'", str6, "tif");
    }

    @Test
    void test4375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4375");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_CALIBRATION_ILLUMINANT_1;
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory1 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter2 = null;
        int[] intArray8 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration15 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader17 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder18 = tiffReader17.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles19 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled20 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory1, photometricInterpreter2, 10, (int) (byte) 10, (-65281), intArray8, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration15, byteOrder18, tiles19);
        byte[] byteArray22 = tagInfoShort0.encodeValue(byteOrder18, (short) 4096);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader24 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray25 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, tiffDirectoryArray25);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray28 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList29 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29, tiffFieldArray28);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents31 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader24, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList26, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList29);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList32 = tiffContents31.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator33 = tiffFieldList32.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals47 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort48 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort53 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList55 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, abstractFieldTypeArray54);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType57 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList55, tiffDirectoryType57);
        java.nio.ByteOrder byteOrder59 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray61 = tagInfoByte58.encodeValue(byteOrder59, (byte) 0);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray71 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray66, 34713, (int) (byte) 0, false, (-65281));
        short short72 = tagInfoShort48.getValue(byteOrder59, byteArray71);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort77 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray78 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort77 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList79 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, abstractFieldTypeArray78);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType81 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList79, tiffDirectoryType81);
        java.nio.ByteOrder byteOrder83 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray85 = tagInfoByte82.encodeValue(byteOrder83, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray86 = tagInfoSRationals47.getValue(byteOrder59, byteArray85);
        byte[] byteArray88 = tagInfoSByte46.encodeValue(byteOrder59, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory89 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList32, (long) 34712, (long) 9, byteOrder59);
        java.nio.ByteOrder byteOrder90 = tiffDirectory89.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory directory91 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.Directory(byteOrder18, tiffDirectory89);
        int int92 = tiffDirectory89.size();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData93 = tiffDirectory89.getTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int95 = tiffDirectory89.getFieldValue(tagInfoSLong94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"name\" because \"tag\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[16, 0]");
        org.junit.Assert.assertNotNull(tiffDirectoryArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tiffFieldList32);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator33);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals47);
        org.junit.Assert.assertNotNull(tagInfoShort48);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 4096 + "'", short72 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[100]");
        org.junit.Assert.assertNotNull(byteOrder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNull(abstractTiffImageData93);
    }

    @Test
    void test4376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4376");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(30, 32895, 1751720192);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.common.AllocationRequestException; message: Allocation limit 1,073,741,824 exceeded: -2,441,836,544");
        } catch (org.apache.commons.imaging.common.AllocationRequestException e) {
            // Expected exception.
        }
    }

    @Test
    void test4377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4377");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents7.tiffFields;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList11 = tiffContents7.getElements();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(abstractTiffElementList11);
    }

    @Test
    void test4378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4378");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.lang.String str5 = tiffImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = tiffImageParser0.getAllBufferedImages(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tif" + "'", str5, "tif");
    }

    @Test
    void test4379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4379");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals1 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_WHITE_XY;
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType2 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort4 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort9 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort9 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, abstractFieldTypeArray10);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList11, tiffDirectoryType13);
        java.nio.ByteOrder byteOrder15 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray17 = tagInfoByte14.encodeValue(byteOrder15, (byte) 0);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray27 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray22, 34713, (int) (byte) 0, false, (-65281));
        short short28 = tagInfoShort4.getValue(byteOrder15, byteArray27);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField29 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField(32768, (org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoRationals1, abstractFieldType2, 0, byteArray27);
        org.junit.Assert.assertNotNull(tagInfoRationals1);
        org.junit.Assert.assertNotNull(tagInfoShort4);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short28 + "' != '" + (short) 4096 + "'", short28 == (short) 4096);
    }

    @Test
    void test4380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4380");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.getOrCreateRootDirectory();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory90 = tiffOutputSet85.getRootDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory91 = tiffOutputSet85.getOrCreateRootDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory92 = tiffOutputSet85.addExifDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
        org.junit.Assert.assertNotNull(tiffOutputDirectory90);
        org.junit.Assert.assertNotNull(tiffOutputDirectory91);
        org.junit.Assert.assertNotNull(tiffOutputDirectory92);
    }

    @Test
    void test4381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4381");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        int int23 = tiffOutputDirectory16.getType();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_SHARPNESS_1;
        tiffOutputDirectory16.add(tagInfoShort24, (short) (byte) -1);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList27 = tiffOutputDirectory16.getFields();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tiffOutputFieldList27);
    }

    @Test
    void test4382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4382");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 8, (float) (short) 0);
        int[] intArray3 = photometricInterpreterFloat2.getMinXY();
        float float4 = photometricInterpreterFloat2.getMeanFound();
        float float5 = photometricInterpreterFloat2.getMaxFound();
        float float6 = photometricInterpreterFloat2.getMeanFound();
        org.apache.commons.imaging.common.ImageBuilder imageBuilder7 = null;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray39 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray34, 34713, (int) (byte) 0, false, (-65281));
        short short40 = tagInfoShort16.getValue(byteOrder27, byteArray39);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray54 = tagInfoSRationals15.getValue(byteOrder27, byteArray53);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless55 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray53);
        java.nio.ByteOrder byteOrder56 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField58 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_12, (long) 34676, (long) 7, byteArray53, byteOrder56, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffField58.getFieldType();
        boolean boolean60 = tiffField58.isLocalValue();
        java.lang.String str61 = tiffField58.getValueDescription();
        int[] intArray62 = tiffField58.getIntArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterFloat2.interpretPixel(imageBuilder7, intArray62, 34892, 32803);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0]");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + Float.NEGATIVE_INFINITY + "'", float5 == Float.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertNotNull(tagInfoSRationals15);
        org.junit.Assert.assertNotNull(tagInfoShort16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 4096 + "'", short40 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray54);
        org.junit.Assert.assertNotNull(abstractFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
    }

    @Test
    void test4383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4383");
        org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap dataParserBitmap0 = new org.apache.commons.imaging.formats.psd.dataparsers.DataParserBitmap();
        int int1 = dataParserBitmap0.getBasicChannelsCount();
        int int2 = dataParserBitmap0.getBasicChannelsCount();
        int int3 = dataParserBitmap0.getBasicChannelsCount();
        int int4 = dataParserBitmap0.getBasicChannelsCount();
        int int5 = dataParserBitmap0.getBasicChannelsCount();
        int[] intArray12 = new int[] { (-1), 32897, 79, (-65536), 21, 65000 };
        int[] intArray19 = new int[] { (-1), 32897, 79, (-65536), 21, 65000 };
        int[] intArray26 = new int[] { (-1), 32897, 79, (-65536), 21, 65000 };
        int[] intArray33 = new int[] { (-1), 32897, 79, (-65536), 21, 65000 };
        int[] intArray40 = new int[] { (-1), 32897, 79, (-65536), 21, 65000 };
        int[][] intArray41 = new int[][] { intArray12, intArray19, intArray26, intArray33, intArray40 };
        int[][][] intArray42 = new int[][][] { intArray41 };
        java.awt.image.BufferedImage bufferedImage43 = null;
        org.apache.commons.imaging.formats.psd.PsdImageContents psdImageContents44 = null;
        // The following exception was thrown during execution in test generation
        try {
            dataParserBitmap0.parseData(intArray42, bufferedImage43, psdImageContents44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.BufferedImage.getRaster()\" because \"bi\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 32897, 79, -65536, 21, 65000]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 32897, 79, -65536, 21, 65000]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 32897, 79, -65536, 21, 65000]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 32897, 79, -65536, 21, 65000]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 32897, 79, -65536, 21, 65000]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
    }

    @Test
    void test4384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4384");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MODEL;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.nio.ByteOrder byteOrder68 = tiffDirectory67.getByteOrder();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        int int72 = tiffImagingParameters71.getSubImageY();
        java.lang.String str73 = tiffImagingParameters71.getXmpXml();
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter74 = tiffImagingParameters71.getCustomPhotometricInterpreter();
        java.awt.image.BufferedImage bufferedImage75 = tiffDirectory67.getTiffImage(tiffImagingParameters71);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList76 = tiffDirectory67.getDirectoryEntries();
        java.nio.ByteOrder byteOrder77 = tiffDirectory67.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii78 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder79 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray87 = tagInfoAscii78.encodeValue(byteOrder79, strArray86);
        byte[] byteArray88 = tagInfoAscii0.encodeValue(byteOrder77, strArray86);
        org.junit.Assert.assertNotNull(tagInfoAscii0);
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(photometricInterpreter74);
        org.junit.Assert.assertNull(bufferedImage75);
        org.junit.Assert.assertNotNull(tiffFieldList76);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(tagInfoAscii78);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
    }

    @Test
    void test4385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4385");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("SLong");
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = tiffImageParser0.canAcceptExtension(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    void test4386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4386");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType11, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort7, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd("ImageColorIndicator", 15, (-4), tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational("N", 19, 32909, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("M", 34892, tiffDirectoryType24);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser28 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder29 = tiffImageParser28.getByteOrder();
        byte[] byteArray31 = tagInfoDouble27.encodeValue(byteOrder29, (double) 32771);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong32 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_JPG_FROM_RAW_START_SUB_IFD;
        java.nio.ByteOrder byteOrder33 = null;
        byte[] byteArray35 = tagInfoLong32.encodeValue(byteOrder33, 65536);
        int[] intArray36 = tagInfoLongOrIfd15.getValue(byteOrder29, byteArray35);
        org.apache.commons.imaging.formats.tiff.TiffField tiffField37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = tagInfoLongOrIfd15.getValue(tiffField37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.TiffField.getFieldType()\" because \"entry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType24 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType24.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[64, -32, 0, 96, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoLong32);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, 1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[256]");
    }

    @Test
    void test4387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4387");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData36 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData36);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField39 = tiffOutputDirectory16.findField(29);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator40 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData41 = tiffOutputDirectory16.getRawTiffImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList42 = tiffOutputDirectory16.getFields();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertNull(tiffOutputField39);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator40);
        org.junit.Assert.assertNull(abstractTiffImageData41);
        org.junit.Assert.assertNotNull(tiffOutputFieldList42);
    }

    @Test
    void test4388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4388");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata8 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType15 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType15);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 34892, 20, tiffDirectoryType15);
        byte[] byteArray18 = tiffImageMetadata8.getFieldValue(tagInfoSBytes17);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString19 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftTagConstants.EXIF_TAG_XPKEYWORDS;
        java.lang.String str20 = tiffImageMetadata8.getFieldValue(tagInfoXpString19);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals28 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort29 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray52 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray47, 34713, (int) (byte) 0, false, (-65281));
        short short53 = tagInfoShort29.getValue(byteOrder40, byteArray52);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray59 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort58 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList60 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, abstractFieldTypeArray59);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList60, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray66 = tagInfoByte63.encodeValue(byteOrder64, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray67 = tagInfoSRationals28.getValue(byteOrder40, byteArray66);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless68 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray66);
        java.nio.ByteOrder byteOrder69 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField71 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_25, (long) 34676, (long) 7, byteArray66, byteOrder69, 9);
        long[] longArray72 = tiffField71.getLongArrayValue();
        long long73 = tiffField71.getCount();
        java.lang.String str74 = tiffField71.getFieldTypeName();
        long[] longArray75 = tiffField71.getLongArrayValue();
        int int76 = tiffField71.getDirectoryType();
        java.lang.String str77 = tiffField71.getTagName();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement80 = tiffField71.new OversizeValueElement(3, 14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = tagInfoXpString19.getValue(tiffField71);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Text field not encoded as bytes.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType15 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType15.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(tagInfoXpString19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(tagInfoSRationals28);
        org.junit.Assert.assertNotNull(tagInfoShort29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) 4096 + "'", short53 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray67);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[]");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 34676L + "'", long73 == 34676L);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 31 + "'", int76 == 31);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Unknown Tag (0x8003)" + "'", str77, "Unknown Tag (0x8003)");
    }

    @Test
    void test4389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4389");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType8 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("ImageColorIndicator", 34713, 32771, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n", 25, tiffDirectoryType8);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort20 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray26 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort25 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList27 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, abstractFieldTypeArray26);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType29 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList27, tiffDirectoryType29);
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray33 = tagInfoByte30.encodeValue(byteOrder31, (byte) 0);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray43 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray38, 34713, (int) (byte) 0, false, (-65281));
        short short44 = tagInfoShort20.getValue(byteOrder31, byteArray43);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort49 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort49 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList51 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList51, abstractFieldTypeArray50);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType53 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList51, tiffDirectoryType53);
        java.nio.ByteOrder byteOrder55 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray57 = tagInfoByte54.encodeValue(byteOrder55, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray58 = tagInfoSRationals19.getValue(byteOrder31, byteArray57);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless59 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray57);
        java.nio.ByteOrder byteOrder60 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField62 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_16, (long) 34676, (long) 7, byteArray57, byteOrder60, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType63 = tiffField62.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType64 = tiffField62.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement65 = tiffField62.getOversizeValueElement();
        int int66 = tiffField62.getOffset();
        java.lang.String str67 = tiffField62.getValueDescription();
        java.lang.Object obj68 = tagInfoSRational11.getValue(tiffField62);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType8 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType8.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoSRationals19);
        org.junit.Assert.assertNotNull(tagInfoShort20);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short44 + "' != '" + (short) 4096 + "'", short44 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray58);
        org.junit.Assert.assertNotNull(abstractFieldType63);
        org.junit.Assert.assertNotNull(abstractFieldType64);
        org.junit.Assert.assertNotNull(abstractTiffElement65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    void test4390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4390");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList11 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.BYTE_OR_SHORT;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort23 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("", 7, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort23, 5, tiffDirectoryType25);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs27 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (-4), (int) (byte) 1, tiffDirectoryType25);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs28 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 5, (int) (short) -1, tiffDirectoryType25);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Element, offset: 37, length: 12, last: 49", 65536, abstractFieldTypeList11, 80, tiffDirectoryType25, true);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("TIFF image data: 0 bytes", 25, 69, tiffDirectoryType35);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo38 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("Unknown Tag (0x8003): ", 15, abstractFieldTypeList11, 3, tiffDirectoryType35, false);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("TIFF image data: 0 bytesBad Type: \n\n", 258, 4, tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("10 (0xa: hi!): ", (-3), abstractFieldTypeList11, (int) '#', tiffDirectoryType43);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType55 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType55, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("N", 6, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("N", 100, 79, tiffDirectoryType55);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo61 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("10 (0xa: hi!): ", 32845, abstractFieldTypeList11, 277408, tiffDirectoryType55, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("[TagInfo. tag: 10 (0xa, name: GPSMeasureMode]", 48, 32844, tiffDirectoryType55);
        org.junit.Assert.assertNotNull(abstractFieldTypeList11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType25 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType25.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType35 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType35.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType43 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3 + "'", tiffDirectoryType43.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD3));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType55 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType55.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4391");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        tiffImagingParameters5.clearSubImage();
        java.lang.String str7 = tiffImagingParameters5.getXmpXml();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "V" + "'", str7, "V");
    }

    @Test
    void test4392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4392");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        java.lang.Integer int8 = tiffImagingParameters7.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters7.setReadThumbnails(false);
        int int11 = tiffImagingParameters10.getSubImageWidth();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    void test4393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4393");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(34712, (int) (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataFloat2.getDataType();
        int int7 = tiffRasterDataFloat2.getIntValue(0, (int) ' ', 89);
        int int8 = tiffRasterDataFloat2.getWidth();
        // The following exception was thrown during execution in test generation
        try {
            float float11 = tiffRasterDataFloat2.getValue(2189672, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (2189672, -3)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 34712 + "'", int8 == 34712);
    }

    @Test
    void test4394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4394");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(9006, "VBad Type: \n\nBad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(32769, "32771 (0x8003: Unknown Tag): ");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        long[] longArray57 = tiffField56.getLongArrayValue();
        long long58 = tiffField56.getCount();
        java.lang.String str59 = tiffField56.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem60 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField56);
        java.lang.Object obj61 = tiffField56.getValue();
        java.lang.Object obj62 = fieldTypeByte5.getValue(tiffField56);
        java.lang.Object obj63 = fieldTypeLong8_2.getValue(tiffField56);
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 34676L + "'", long58 == 34676L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    void test4395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4395");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(18, (int) (short) 10, 4);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType4 = tiffRasterDataFloat3.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(23, 73, (float) 1751720192);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (23, 73)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType4 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType4.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test4396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4396");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort13, 6, tiffDirectoryType18, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("Element, offset: 37, length: 12, last: 49", 10, 42, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("V", 32898, (int) '4', tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n", (int) (short) 100, 32947, tiffDirectoryType18);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4397");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = null;
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles3 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, 65, 32896);
        boolean boolean4 = tiles3.stripsNotTiles();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    void test4398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4398");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData21 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData21);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList23 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_EXIF_IMAGE_LENGTH;
        tiffOutputDirectory16.add(tagInfoShort24, (short) 0);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds27 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_OPCODE_LIST_3;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals30 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder31 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort33 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray56 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray51, 34713, (int) (byte) 0, false, (-65281));
        short short57 = tagInfoShort33.getValue(byteOrder44, byteArray56);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort62 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray63 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort62 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList64 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, abstractFieldTypeArray63);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType66 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte67 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList64, tiffDirectoryType66);
        java.nio.ByteOrder byteOrder68 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray70 = tagInfoByte67.encodeValue(byteOrder68, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray71 = tagInfoSRationals32.getValue(byteOrder44, byteArray70);
        byte[] byteArray72 = tagInfoRationals30.encodeValue(byteOrder31, rationalNumberArray71);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data73 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray72);
        byte[] byteArray74 = data73.getData();
        tiffOutputDirectory16.add((org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes) tagInfoUndefineds27, byteArray74);
        tiffOutputDirectory16.sortFields();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor77 = tiffOutputDirectory16.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField79 = tiffOutputDirectory16.findField((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = tiffOutputDirectory16.getItemDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"privateName\" because \"dirType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNotNull(tiffOutputFieldList23);
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoUndefineds27);
        org.junit.Assert.assertNotNull(tagInfoRationals30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(tagInfoSRationals32);
        org.junit.Assert.assertNotNull(tagInfoShort33);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short57 + "' != '" + (short) 4096 + "'", short57 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(tiffOutputFieldItor77);
        org.junit.Assert.assertNull(tiffOutputField79);
    }

    @Test
    void test4399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4399");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("SByte", 22, 14, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("", 48, 30, tiffDirectoryType6);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD));
    }

    @Test
    void test4400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4400");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray3 = strips2.getImageData();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertNotNull(dataElementArray3);
    }

    @Test
    void test4401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4401");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat4 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int7 = tiffRasterDataFloat4.getIntValue(3, 0);
        float[] floatArray8 = tiffRasterDataFloat4.getData();
        int int9 = tiffRasterDataFloat4.getSamplesPerPixel();
        org.apache.commons.imaging.internal.Debug.debug("TIFF image data: 2 bytes", (java.lang.Object) tiffRasterDataFloat4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    void test4402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4402");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_APPLICATION_NOTES;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        long[] longArray52 = tiffField51.getLongArrayValue();
        long long53 = tiffField51.getCount();
        java.lang.String str54 = tiffField51.getFieldTypeName();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem55 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField51);
        java.lang.Object obj56 = tagInfoBytes0.getValue(tiffField51);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo57 = tiffField51.getTagInfo();
        org.apache.commons.imaging.formats.tiff.TiffField.OversizeValueElement oversizeValueElement60 = tiffField51.new OversizeValueElement(0, 88);
        java.io.PrintWriter printWriter61 = null;
        // The following exception was thrown during execution in test generation
        try {
            tiffField51.dump(printWriter61, "[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]Unknown Tag (0x8003): Bad Type: \n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"pw\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoBytes0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 34676L + "'", long53 == 34676L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(tagInfo57);
    }

    @Test
    void test4403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4403");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_CUSTOM_RENDERED;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField10 = tiffContents7.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShort9);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList11 = tiffContents7.directories;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader12 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList13 = tiffContents7.getElements();
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNull(tiffField10);
        org.junit.Assert.assertNotNull(tiffDirectoryList11);
        org.junit.Assert.assertNull(tiffHeader12);
        org.junit.Assert.assertNotNull(abstractTiffElementList13);
    }

    @Test
    void test4404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4404");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType6 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii7 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("TIFF image data: 0 bytes", 34676, 5, tiffDirectoryType6);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(22, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort(20, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", 34892, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort16, 6, tiffDirectoryType21, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray65 = fieldTypeLong8_11.writeData((java.lang.Object) 6, byteOrder37);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational66 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort71 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray72 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort71 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList73 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, abstractFieldTypeArray72);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType75 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte76 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList73, tiffDirectoryType75);
        java.nio.ByteOrder byteOrder77 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray79 = tagInfoByte76.encodeValue(byteOrder77, (byte) 0);
        short[] shortArray80 = new short[] {};
        byte[] byteArray81 = tagInfoShortOrLongOrRational66.encodeValue(byteOrder77, shortArray80);
        byte[] byteArray82 = tagInfoShortOrLongOrRational8.encodeValue(byteOrder37, shortArray80);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet83 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder37);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory85 = tiffOutputSet83.findDirectory(1678379530);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType6 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType6.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[6, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational66);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertNull(tiffOutputDirectory85);
    }

    @Test
    void test4405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4405");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory87 = tiffOutputSet85.getOrCreateRootDirectory();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory87);
    }

    @Test
    void test4406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4406");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_HUE_SAT_MAP_DATA2;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType12 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType12);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort17 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts18 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational19 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort24 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray25 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort24 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList26 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList26, abstractFieldTypeArray25);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList26, tiffDirectoryType28);
        java.nio.ByteOrder byteOrder30 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray32 = tagInfoByte29.encodeValue(byteOrder30, (byte) 0);
        short[] shortArray33 = new short[] {};
        byte[] byteArray34 = tagInfoShortOrLongOrRational19.encodeValue(byteOrder30, shortArray33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational35 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        short[] shortArray49 = new short[] {};
        byte[] byteArray50 = tagInfoShortOrLongOrRational35.encodeValue(byteOrder46, shortArray49);
        byte[] byteArray51 = tagInfoShorts18.encodeValue(byteOrder30, shortArray49);
        byte[] byteArray53 = tagInfoShort17.encodeValue(byteOrder30, (short) (byte) 10);
        short[] shortArray55 = new short[] { (byte) 0 };
        byte[] byteArray56 = tagInfoShortOrRational16.encodeValue(byteOrder30, shortArray55);
        byte[] byteArray58 = tagInfoSByte15.encodeValue(byteOrder30, (byte) 0);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType62 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats63 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType62);
        java.nio.ByteOrder byteOrder64 = null;
        float[] floatArray68 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray69 = tagInfoFloats63.encodeValue(byteOrder64, floatArray68);
        byte[] byteArray70 = tagInfoFloats3.encodeValue(byteOrder30, floatArray68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat71 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat((int) (short) 16, 89, (int) (short) 0, floatArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster samples-per-pixel specification must be at least 1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoFloats3);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType12 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType12.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShortOrRational16);
        org.junit.Assert.assertNotNull(tagInfoShort17);
        org.junit.Assert.assertNotNull(tagInfoShorts18);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational19);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational35);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[0]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 65]");
    }

    @Test
    void test4407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4407");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        java.lang.String str6 = tiffImagingParameters5.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setT6Options((java.lang.Integer) 5);
        org.apache.commons.imaging.PixelDensity pixelDensity9 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters8.setPixelDensity(pixelDensity9);
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "V" + "'", str6, "V");
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
    }

    @Test
    void test4408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4408");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational4 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("TIFF Header", (int) (short) 100, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational4);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("T", 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational4);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte7 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals15 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort16 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray39 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray34, 34713, (int) (byte) 0, false, (-65281));
        short short40 = tagInfoShort16.getValue(byteOrder27, byteArray39);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray46 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort45 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList47 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, abstractFieldTypeArray46);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType49 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList47, tiffDirectoryType49);
        java.nio.ByteOrder byteOrder51 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray53 = tagInfoByte50.encodeValue(byteOrder51, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray54 = tagInfoSRationals15.getValue(byteOrder27, byteArray53);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless55 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray53);
        java.nio.ByteOrder byteOrder56 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField58 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_12, (long) 34676, (long) 7, byteArray53, byteOrder56, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffField58.getFieldType();
        boolean boolean60 = tiffField58.isLocalValue();
        java.lang.Object obj61 = fieldTypeByte7.getValue(tiffField58);
        int int62 = tiffField58.getBytesLength();
        java.lang.Object obj63 = fieldTypeRational4.getValue(tiffField58);
        int[] intArray64 = tiffField58.getIntArrayValue();
        org.junit.Assert.assertNotNull(fieldTypeRational4);
        org.junit.Assert.assertNotNull(fieldTypeByte7);
        org.junit.Assert.assertNotNull(tagInfoSRationals15);
        org.junit.Assert.assertNotNull(tagInfoShort16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 4096 + "'", short40 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray54);
        org.junit.Assert.assertNotNull(abstractFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 277408 + "'", int62 == 277408);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
    }

    @Test
    void test4409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4409");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte(23, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong("SByte", 22, 14, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("32771 (0x8003: Unknown Tag):  (34676 hi!)", (-2), (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeByte4, (-65536), tiffDirectoryType9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD));
    }

    @Test
    void test4410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4410");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        java.lang.String str86 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType93 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType93);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts tagInfoSShorts95 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts("TIFF image data: 0 bytes", (int) (byte) 1, 31, tiffDirectoryType93);
        short[] shortArray97 = tiffDirectory66.getFieldValue(tagInfoSShorts95, false);
        java.lang.String str98 = tiffDirectory66.description();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + tiffDirectoryType93 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType93.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(shortArray97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Bad Type" + "'", str98, "Bad Type");
    }

    @Test
    void test4411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4411");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.PixelDensity pixelDensity11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters5.setPixelDensity(pixelDensity11);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter13 = tiffImagingParameters12.getCustomPhotometricInterpreter();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters12.setCompression((java.lang.Integer) 93);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage16 = tiffImageParser0.getBufferedImage(file4, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNull(photometricInterpreter13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
    }

    @Test
    void test4412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4412");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        // The following exception was thrown during execution in test generation
        try {
            float float8 = tiffRasterDataInt2.getValue(32845, 22, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32845, 22)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test4413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4413");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        long long75 = tiffDirectory66.getNextDirectoryOffset();
        boolean boolean76 = tiffDirectory66.hasTiffRasterData();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters77 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity78 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters79 = tiffImagingParameters77.setPixelDensity(pixelDensity78);
        java.lang.Integer int80 = tiffImagingParameters77.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters82 = tiffImagingParameters77.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet83 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters84 = tiffImagingParameters82.setOutputSet(tiffOutputSet83);
        java.lang.Integer int85 = tiffImagingParameters82.getLzwCompressionBlockSize();
        java.awt.image.BufferedImage bufferedImage86 = tiffDirectory66.getTiffImage(tiffImagingParameters82);
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 9L + "'", long75 == 9L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(tiffImagingParameters82);
        org.junit.Assert.assertNotNull(tiffImagingParameters84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNull(bufferedImage86);
    }

    @Test
    void test4414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4414");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        boolean boolean86 = tiffDirectory66.hasTiffImageData();
        java.awt.image.BufferedImage bufferedImage87 = tiffDirectory66.getTiffImage();
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList88 = tiffDirectory66.getDirectoryEntries();
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(bufferedImage87);
        org.junit.Assert.assertNotNull(tiffFieldList88);
    }

    @Test
    void test4415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4415");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        boolean boolean84 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.lang.String str85 = tiffDirectory66.description();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData86 = tiffDirectory66.getTiffImageData();
        tiffDirectory66.dump();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffDirectory.ImageDataElement imageDataElement88 = tiffDirectory66.getJpegRawImageDataElement();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Couldn't find image data.");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Bad Type" + "'", str85, "Bad Type");
        org.junit.Assert.assertNull(abstractTiffImageData86);
    }

    @Test
    void test4416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4416");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        float[] floatArray8 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType9 = tiffRasterDataFloat3.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType11 = tiffRasterDataFloat3.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = tiffRasterDataFloat3.getIntValue(80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (80, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType9 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType9.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType11 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType11.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test4417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4417");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int1 = tiffImagingParameters0.getSubImageHeight();
        int int2 = tiffImagingParameters0.getSubImageHeight();
        boolean boolean3 = tiffImagingParameters0.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setFileName("TIFF image data: 0 bytesBad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter6 = tiffImagingParameters5.getCustomPhotometricInterpreter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNull(photometricInterpreter6);
    }

    @Test
    void test4418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4418");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat(0.0f, (float) 9L);
    }

    @Test
    void test4419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4419");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SRATIONAL;
        java.lang.String str1 = fieldTypeRational0.getName();
        org.junit.Assert.assertNotNull(fieldTypeRational0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "SRational" + "'", str1, "SRational");
    }

//    @Test
//    void test4420() throws Throwable {
//        if (debug)
//            System.out.format("%n%s%n", "RegressionTest8.test4420");
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
//        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
//        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
//        short[] shortArray30 = new short[] {};
//        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
//        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
//        short[] shortArray46 = new short[] {};
//        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
//        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
//        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
//        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
//        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
//        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
//        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
//        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
//        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
//        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
//        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
//        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
//        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
//        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
//        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
//        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor86 = tiffOutputSet85.iterator();
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii87 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_INK_NAMES;
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField88 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii87);
//        tiffOutputSet85.dump();
//        java.lang.String str90 = tiffOutputSet85.toString();
//        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType93 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
//        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational94 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType93);
//        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSRational94);
//        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory96 = tiffOutputSet85.getOrCreateGpsDirectory();
//        java.lang.String str97 = tiffOutputSet85.toString();
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
//        org.junit.Assert.assertNotNull(tagInfoShort14);
//        org.junit.Assert.assertNotNull(tagInfoShorts15);
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
//        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
//        org.junit.Assert.assertNotNull(byteOrder27);
//        org.junit.Assert.assertNotNull(byteArray29);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
//        org.junit.Assert.assertNotNull(shortArray30);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
//        org.junit.Assert.assertNotNull(byteArray31);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
//        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
//        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
//        org.junit.Assert.assertNotNull(byteOrder43);
//        org.junit.Assert.assertNotNull(byteArray45);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
//        org.junit.Assert.assertNotNull(shortArray46);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
//        org.junit.Assert.assertNotNull(byteArray47);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
//        org.junit.Assert.assertNotNull(byteArray48);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
//        org.junit.Assert.assertNotNull(byteArray50);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
//        org.junit.Assert.assertNotNull(byteArray57);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
//        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
//        org.junit.Assert.assertNotNull(tagInfoShort59);
//        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
//        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
//        org.junit.Assert.assertNotNull(byteOrder70);
//        org.junit.Assert.assertNotNull(byteArray72);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
//        org.junit.Assert.assertNotNull(byteArray77);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
//        org.junit.Assert.assertNotNull(byteArray82);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
//        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
//        org.junit.Assert.assertNotNull(byteArray84);
//        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
//        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor86);
//        org.junit.Assert.assertNotNull(tagInfoAscii87);
//        org.junit.Assert.assertNull(tiffOutputField88);
//        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n" + "'", str90, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
//        org.junit.Assert.assertTrue("'" + tiffDirectoryType93 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType93.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
//        org.junit.Assert.assertNotNull(tiffOutputDirectory96);
//        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Gps (-3)\r\n}\r\n" + "'", str97, "TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n\tdirectory 0: Root (0)\r\n\tdirectory 1: Exif (-2)\r\n\tdirectory 2: Gps (-3)\r\n}\r\n");
//    }

    @Test
    void test4421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4421");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder4 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = tiffImageParser0.getByteOrder();
        boolean boolean7 = tiffImageParser0.canAcceptExtension("ImageDataElement");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    void test4422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4422");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational(11, "E");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        byte[] byteArray55 = tiffField53.getByteArrayValue();
        int int56 = tiffField53.getSortHint();
        java.lang.Object obj57 = fieldTypeRational2.getValue(tiffField53);
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9 + "'", int56 == 9);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    void test4423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4423");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        int int3 = tiffImagingParameters2.getSubImageY();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters2.setLzwCompressionBlockSize((java.lang.Integer) 12);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters2.setReadThumbnails(false);
        int int8 = tiffImagingParameters7.getSubImageHeight();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    void test4424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4424");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity7 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setPixelDensity(pixelDensity7);
        int int9 = tiffImagingParameters8.getSubImageY();
        java.lang.String str10 = tiffImagingParameters8.getXmpXml();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.asThis();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setFileName("hi!");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters15 = tiffImagingParameters8.setFileName("Unknown Tag (0x8003)");
        int int16 = tiffImagingParameters15.getSubImageX();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage17 = tiffImageParser0.getBufferedImage(file5, tiffImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNotNull(tiffImagingParameters15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    void test4425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4425");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.awt.image.BufferedImage bufferedImage67 = tiffDirectory66.getTiffImage();
        java.lang.String str68 = tiffDirectory66.getElementDescription();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters69 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity70 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters71 = tiffImagingParameters69.setPixelDensity(pixelDensity70);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters73 = tiffImagingParameters71.setXmpXml("Bad Type");
        java.awt.image.BufferedImage bufferedImage74 = tiffDirectory66.getTiffImage(tiffImagingParameters71);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat75 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_WIDTH_RESOLUTION;
        // The following exception was thrown during execution in test generation
        try {
            float float76 = tiffDirectory66.getFieldValue(tagInfoFloat75);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"WidthResolution\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNull(bufferedImage67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(tiffImagingParameters71);
        org.junit.Assert.assertNotNull(tiffImagingParameters73);
        org.junit.Assert.assertNull(bufferedImage74);
        org.junit.Assert.assertNotNull(tagInfoFloat75);
    }

    @Test
    void test4426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4426");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder4 = tiffImageParser0.getByteOrder();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = tiffImageParser0.getMetadata(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    void test4427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4427");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals0 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        int int1 = tagInfoRationals0.tag;
        java.lang.String str2 = tagInfoRationals0.toString();
        java.nio.ByteOrder byteOrder3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong4 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_IMAGE_LAYER;
        java.lang.String str5 = tagInfoShortOrLong4.name;
        java.nio.ByteOrder byteOrder6 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder8 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray14 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray15 = tagInfoShortOrLong7.encodeValue(byteOrder8, intArray14);
        byte[] byteArray16 = tagInfoShortOrLong4.encodeValue(byteOrder6, intArray14);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray17 = tagInfoRationals0.getValue(byteOrder3, byteArray16);
        java.lang.String str18 = tagInfoRationals0.toString();
        org.junit.Assert.assertNotNull(tagInfoRationals0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 22 + "'", int1 == 22);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]" + "'", str2, "[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ImageLayer" + "'", str5, "ImageLayer");
        org.junit.Assert.assertNotNull(tagInfoShortOrLong7);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(rationalNumberArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]" + "'", str18, "[TagInfo. tag: 22 (0x16, name: GPSDestLongitude]");
    }

    @Test
    void test4428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4428");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, (int) (short) 1, 14);
        boolean boolean6 = tiles5.stripsNotTiles();
        int int7 = tiles5.getTileWidth();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray8 = tiles5.tiles;
        boolean boolean9 = tiles5.stripsNotTiles();
        boolean boolean10 = tiles5.stripsNotTiles();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(dataElementArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    void test4429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4429");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk photometricInterpreterCmyk5 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk(24, intArray1, 5056, (int) '#', 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: bitsPerSample");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    void test4430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4430");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics7 = tiffRasterDataFloat3.getSimpleStatistics((float) 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(tiffRasterStatistics7);
    }

    @Test
    void test4431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4431");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals2 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray28 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray23, 34713, (int) (byte) 0, false, (-65281));
        short short29 = tagInfoShort5.getValue(byteOrder16, byteArray28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray43 = tagInfoSRationals4.getValue(byteOrder16, byteArray42);
        byte[] byteArray44 = tagInfoRationals2.encodeValue(byteOrder3, rationalNumberArray43);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data45 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray44);
        byte[] byteArray46 = data45.getData();
        byte[] byteArray47 = data45.getData();
        int int48 = data45.getDataLength();
        org.junit.Assert.assertNotNull(tagInfoRationals2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tagInfoSRationals4);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short29 + "' != '" + (short) 4096 + "'", short29 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    void test4432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4432");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes0 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_PIXEL_INTENSITY_RANGE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem52 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField51);
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem tiffMetadataItem53 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata.TiffMetadataItem(tiffField51);
        int int54 = tiffField51.getOffset();
        java.lang.Object obj55 = tagInfoBytes0.getValue(tiffField51);
        long[] longArray56 = tiffField51.getLongArrayValue();
        org.junit.Assert.assertNotNull(tagInfoBytes0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[]");
    }

    @Test
    void test4433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4433");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(50725, "ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n");
        java.lang.String str3 = fieldTypeFloat2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n" + "'", str3, "ETiffOutputSet {\r\nEbyteOrder: LITTLE_ENDIAN\r\nE\tdirectory 0: Root (0)\r\nE}\r\n");
    }

    @Test
    void test4434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4434");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean1 = tiffImagingParameters0.isSubImageSet();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImagingParameters0.setFileName("ImageDataElement");
        java.lang.Integer int4 = tiffImagingParameters3.getLzwCompressionBlockSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNull(int4);
    }

    @Test
    void test4435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4435");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics((float) 13);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(5056, (-2), (float) 71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (5056, -2)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
    }

    @Test
    void test4436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4436");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        int int55 = tiffField50.getDirectoryType();
        byte[] byteArray56 = tiffField50.getByteArrayValue();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement58 = tiffField50.getOversizeValueElement();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = tiffField50.getIntValueOrArraySum();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Unknown value: [J@453587c3 for: -1 (0xffffffff: Unknown Tag): ");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertNotNull(abstractTiffElement58);
    }

    @Test
    void test4437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4437");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType46 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType46, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (int) (short) 10, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, tiffDirectoryType46);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble50 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("", 0, tiffDirectoryType46);
        tiffOutputDirectory16.add(tagInfoDouble50, (double) 80);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong tagInfoShortOrLong53 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_WHITE_LEVEL;
        java.nio.ByteOrder byteOrder54 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        int[] intArray60 = new int[] { 34661, 64, (-1), 10, 9 };
        byte[] byteArray61 = tagInfoShortOrLong53.encodeValue(byteOrder54, intArray60);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat fieldTypeFloat64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat(32844, "Bad Type");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType69 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats70 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType69);
        java.nio.ByteOrder byteOrder71 = null;
        float[] floatArray75 = new float[] { (short) 0, 0L, (short) 10 };
        byte[] byteArray76 = tagInfoFloats70.encodeValue(byteOrder71, floatArray75);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField77 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShortOrLong53, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat64, 32844, byteArray76);
        tiffOutputDirectory16.add(tiffOutputField77);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData79 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong80 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_IMAGE_HEIGHT;
        tiffOutputDirectory16.add(tagInfoLong80, 34677);
        int int83 = tagInfoLong80.tag;
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType46 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType46.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShortOrLong53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[34661, 64, -1, 10, 9]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[101, -121, 0, 0, 64, 0, 0, 0, -1, -1, -1, -1, 10, 0, 0, 0, 9, 0, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 0, 0, 0, 0, 0, 0, 65, 32, 0, 0]");
        org.junit.Assert.assertNull(abstractTiffImageData79);
        org.junit.Assert.assertNotNull(tagInfoLong80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 48257 + "'", int83 == 48257);
    }

    @Test
    void test4438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4438");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory9 = null;
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter10 = null;
        int[] intArray16 = new int[] { 13, 34892 };
        org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration tiffPlanarConfiguration23 = org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY;
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader25 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder26 = tiffReader25.getByteOrder();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles27 = null;
        org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled dataReaderTiled28 = new org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled(tiffDirectory9, photometricInterpreter10, 10, (int) (byte) 10, (-65281), intArray16, 69, (int) (short) 4096, 3, 100, 17, 32897, tiffPlanarConfiguration23, byteOrder26, tiles27);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab32 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(71, intArray16, (int) (short) 100, 77, 5);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel37 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((-2), intArray16, (int) (short) -1, 64, 12, false);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel42 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel(0, intArray16, 9, 13, 13, false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters43 = tiffImagingParameters0.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterBiLevel42);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters45 = tiffImagingParameters0.setXmpXml("Element, offset: 37, length: 12, last: 49Bad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters47 = tiffImagingParameters45.setStrict(false);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters49 = tiffImagingParameters45.setT4Options((java.lang.Integer) 32844);
        java.lang.Integer int50 = tiffImagingParameters49.getLzwCompressionBlockSize();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[13, 34892]");
        org.junit.Assert.assertTrue("'" + tiffPlanarConfiguration23 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY + "'", tiffPlanarConfiguration23.equals(org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration.CHUNKY));
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(tiffImagingParameters43);
        org.junit.Assert.assertNotNull(tiffImagingParameters45);
        org.junit.Assert.assertNotNull(tiffImagingParameters47);
        org.junit.Assert.assertNotNull(tiffImagingParameters49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    void test4439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4439");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(9006, 8);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics((float) 95);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue((int) (short) 1, 22, 34892);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (1, 22)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test4440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4440");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField50.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement53 = tiffField50.getOversizeValueElement();
        int int54 = tiffField50.getOffset();
        int int55 = tiffField50.getDirectoryType();
        int int56 = tiffField50.getSortHint();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement57 = tiffField50.getOversizeValueElement();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertNotNull(abstractTiffElement53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9 + "'", int56 == 9);
        org.junit.Assert.assertNotNull(abstractTiffElement57);
    }

    @Test
    void test4441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4441");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        java.lang.String str4 = tiffImageParser0.getName();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int7 = tiffImagingParameters6.getSubImageHeight();
        int int8 = tiffImagingParameters6.getSubImageHeight();
        boolean boolean9 = tiffImagingParameters6.isReadThumbnails();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters6.setFileName("TIFF image data: 0 bytesBad Type: \n\n");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter photometricInterpreter12 = tiffImagingParameters6.getCustomPhotometricInterpreter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = tiffImageParser0.getMetadata(file5, tiffImagingParameters6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tiff-Custom" + "'", str4, "Tiff-Custom");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNull(photometricInterpreter12);
    }

    @Test
    void test4442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4442");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int int55 = tiffField51.getBytesLength();
        byte[] byteArray56 = tiffField51.getByteArrayValue();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray60 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray56, 32769, 13, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Error reading image to compress");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 277408 + "'", int55 == 277408);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
    }

    @Test
    void test4443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4443");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.IFD;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_6 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort10 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort15 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList17 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, abstractFieldTypeArray16);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType19 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList17, tiffDirectoryType19);
        java.nio.ByteOrder byteOrder21 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray23 = tagInfoByte20.encodeValue(byteOrder21, (byte) 0);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray33 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray28, 34713, (int) (byte) 0, false, (-65281));
        short short34 = tagInfoShort10.getValue(byteOrder21, byteArray33);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort39 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList41 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, abstractFieldTypeArray40);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType43 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte44 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList41, tiffDirectoryType43);
        java.nio.ByteOrder byteOrder45 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray47 = tagInfoByte44.encodeValue(byteOrder45, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray48 = tagInfoSRationals9.getValue(byteOrder21, byteArray47);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless49 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray47);
        java.nio.ByteOrder byteOrder50 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField52 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_6, (long) 34676, (long) 7, byteArray47, byteOrder50, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType53 = tiffField52.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField52.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement55 = tiffField52.getOversizeValueElement();
        int int56 = tiffField52.getOffset();
        int int57 = tiffField52.getDirectoryType();
        java.lang.Object obj58 = fieldTypeLong1.getValue(tiffField52);
        int int59 = tiffField52.getBytesLength();
        org.apache.commons.imaging.internal.Debug.debug("tif", (java.lang.Object) int59);
        org.junit.Assert.assertNotNull(fieldTypeLong1);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShort10);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short34 + "' != '" + (short) 4096 + "'", short34 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray48);
        org.junit.Assert.assertNotNull(abstractFieldType53);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractTiffElement55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 31 + "'", int57 == 31);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 277408 + "'", int59 == 277408);
    }

    @Test
    void test4444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4444");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        boolean boolean2 = tiffImageParser0.canAcceptExtension("N");
        boolean boolean4 = tiffImageParser0.canAcceptExtension("K");
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList6 = tiffImageParser0.getAllBufferedImages(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    void test4445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4445");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType5 = tiffRasterDataInt2.getDataType();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setIntValue(32895, 0, 34712, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (32895, 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType5 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType5.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
    }

    @Test
    void test4446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4446");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray87 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT6(byteArray84, 14, 15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: I/O error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
    }

    @Test
    void test4447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4447");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat((-2), 1678379530, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Raster dimensions less than or equal to zero are not supported");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4448");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder2 = tiffImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage5 = tiffImageParser0.getBufferedImage(byteSource3, tiffImagingParameters4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertNotNull(byteOrder2);
    }

    @Test
    void test4449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4449");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance3 = tiffImageParser0.getFormatCompliance(byteSource2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
    }

    @Test
    void test4450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4450");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters3 = tiffImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImageParser0.getDefaultParameters();
        java.lang.String str5 = tiffImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = tiffImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(tiffImagingParameters3);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tif" + "'", str5, "tif");
    }

    @Test
    void test4451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4451");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals("V", (int) (short) -1, 9, tiffDirectoryType3);
        java.nio.ByteOrder byteOrder5 = null;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort19 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, abstractFieldTypeArray20);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList21, tiffDirectoryType23);
        java.nio.ByteOrder byteOrder25 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray27 = tagInfoByte24.encodeValue(byteOrder25, (byte) 0);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray37 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray32, 34713, (int) (byte) 0, false, (-65281));
        short short38 = tagInfoShort14.getValue(byteOrder25, byteArray37);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort43 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort43 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList45 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, abstractFieldTypeArray44);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList45, tiffDirectoryType47);
        java.nio.ByteOrder byteOrder49 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray51 = tagInfoByte48.encodeValue(byteOrder49, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray52 = tagInfoSRationals13.getValue(byteOrder25, byteArray51);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless53 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray51);
        java.nio.ByteOrder byteOrder54 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField56 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_10, (long) 34676, (long) 7, byteArray51, byteOrder54, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType57 = tiffField56.getFieldType();
        boolean boolean58 = tiffField56.isLocalValue();
        int int59 = tiffField56.getTag();
        byte[] byteArray60 = tiffField56.getByteArrayValue();
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray61 = tagInfoRationals4.getValue(byteOrder5, byteArray60);
        org.junit.Assert.assertNotNull(tagInfoSRationals13);
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 4096 + "'", short38 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray52);
        org.junit.Assert.assertNotNull(abstractFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32771 + "'", int59 == 32771);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray61);
    }

    @Test
    void test4452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4452");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(50725, "Root");
    }

    @Test
    void test4453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4453");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList9 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG_OR_IFD;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds20 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("T", 34661, (-1), tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("TIFF Header", 42, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("[TagInfo. tag: 255 (0xff, name: TIFF Header]", 13, abstractFieldTypeList9, tiffDirectoryType18);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort42 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType47 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", 4, (int) (byte) 0, tiffDirectoryType47, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo51 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("", (int) '4', (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeShort42, 65536, tiffDirectoryType47, true);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("", 8, 22, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("E", 7, (int) (short) 100, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("Unknown Tag (0x8003): ", 25, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte tagInfoAsciiOrByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte("", 17, 4, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles56 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("[TagInfo. tag: 41487 (0xa20f, name: FocalPlaneYResolution]", 34677, 32766, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("VBad Type: \n\nBad Type: \n\n", (-65536), abstractFieldTypeList9, 32845, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort58 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("tif", 22, tiffDirectoryType47);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational("280 (0x118: MinSampleValue): ", 15, 32908, tiffDirectoryType47);
        org.junit.Assert.assertNotNull(abstractFieldTypeList9);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType18 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType18.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType47 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType47.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
    }

    @Test
    void test4454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4454");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.MicrosoftHdPhotoTagConstants.EXIF_TAG_ALPHA_DATA_DISCARD;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField19 = tiffOutputDirectory16.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoByte18);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType23 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes tagInfoSBytes24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes("ImageColorIndicator", 48, (int) (short) 0, tiffDirectoryType23);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType33 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType33);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType33);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoSByte36.encodeValue(byteOrder37, (byte) 0);
        tiffOutputDirectory16.add(tagInfoSBytes24, byteArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = tagInfoSBytes24.directoryType;
        java.lang.String str42 = tagInfoSBytes24.toString();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField19);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType33 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType33.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNull(tiffDirectoryType41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[TagInfo. tag: 48 (0x30, name: ImageColorIndicator]" + "'", str42, "[TagInfo. tag: 48 (0x30, name: ImageColorIndicator]");
    }

    @Test
    void test4455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4455");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(34712, (int) (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat2.getSimpleStatistics((float) 73);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType5 = tiffRasterDataFloat2.getDataType();
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertTrue("'" + tiffRasterDataType5 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT + "'", tiffRasterDataType5.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.FLOAT));
    }

    @Test
    void test4456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4456");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        java.lang.String str78 = tiffOutputField74.toString("TiffOutputSet {\r\nbyteOrder: LITTLE_ENDIAN\r\n}\r\n");
        tiffOutputField74.setSortHint(24);
        byte[] byteArray81 = tiffOutputField74.getData();
        byte[] byteArray82 = tiffOutputField74.getData();
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 16]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
    }

    @Test
    void test4457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4457");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray0 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] {};
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips strips2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Strips(dataElementArray0, 32844);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles tiles5 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Tiles(dataElementArray0, 6, 0);
        int int6 = tiles5.getTileWidth();
        int int7 = tiles5.getTileHeight();
        boolean boolean8 = tiles5.stripsNotTiles();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.DataElement[] dataElementArray9 = tiles5.getImageData();
        java.lang.Class<?> wildcardClass10 = dataElementArray9.getClass();
        org.junit.Assert.assertNotNull(dataElementArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 6 + "'", int6 == 6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(dataElementArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    void test4458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4458");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectorySpliterator86 = tiffOutputSet85.spliterator();
        java.nio.ByteOrder byteOrder87 = tiffOutputSet85.byteOrder;
        boolean boolean88 = tiffOutputSet85.isEmpty();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor89 = tiffOutputSet85.iterator();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectorySpliterator86);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor89);
    }

    @Test
    void test4459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4459");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(16, 2);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
    }

    @Test
    void test4460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4460");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        java.lang.String str54 = tiffField50.getValueDescription();
        java.lang.String str55 = tiffField50.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField50.getFieldType();
        java.nio.ByteOrder byteOrder57 = tiffField50.getByteOrder();
        byte[] byteArray58 = tiffField50.getByteArrayValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertNull(byteOrder57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
    }

    @Test
    void test4461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4461");
        int int3 = org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr.convertYCbCrtoRGB(3, 1678379530, 32909);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-65281) + "'", int3 == (-65281));
    }

    @Test
    void test4462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4462");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts0 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_BITS_PER_SAMPLE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational fieldTypeRational1 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.RATIONAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts3 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals4 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder5 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals6 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort7 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort12 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort12 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList14 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, abstractFieldTypeArray13);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType16 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList14, tiffDirectoryType16);
        java.nio.ByteOrder byteOrder18 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray20 = tagInfoByte17.encodeValue(byteOrder18, (byte) 0);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray30 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray25, 34713, (int) (byte) 0, false, (-65281));
        short short31 = tagInfoShort7.getValue(byteOrder18, byteArray30);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort36 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort36 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList38 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, abstractFieldTypeArray37);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType40 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte41 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList38, tiffDirectoryType40);
        java.nio.ByteOrder byteOrder42 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray44 = tagInfoByte41.encodeValue(byteOrder42, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray45 = tagInfoSRationals6.getValue(byteOrder18, byteArray44);
        byte[] byteArray46 = tagInfoRationals4.encodeValue(byteOrder5, rationalNumberArray45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort52 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray53 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort52 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList54 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, abstractFieldTypeArray53);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType56 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte57 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList54, tiffDirectoryType56);
        java.nio.ByteOrder byteOrder58 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray60 = tagInfoByte57.encodeValue(byteOrder58, (byte) 0);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray70 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray65, 34713, (int) (byte) 0, false, (-65281));
        short short71 = tagInfoShort47.getValue(byteOrder58, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless72 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray70);
        short[] shortArray73 = tagInfoShorts3.getValue(byteOrder5, byteArray70);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField74 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoShorts0, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeRational1, 32769, byteArray70);
        java.lang.String str76 = tiffOutputField74.toString("N");
        tiffOutputField74.setSortHint(16);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo79 = tiffOutputField74.tagInfo;
        org.junit.Assert.assertNotNull(tagInfoShorts0);
        org.junit.Assert.assertNotNull(fieldTypeRational1);
        org.junit.Assert.assertNotNull(tagInfoShorts3);
        org.junit.Assert.assertNotNull(tagInfoRationals4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(tagInfoSRationals6);
        org.junit.Assert.assertNotNull(tagInfoShort7);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short31 + "' != '" + (short) 4096 + "'", short31 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort47);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short71 + "' != '" + (short) 4096 + "'", short71 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[4096]");
        org.junit.Assert.assertNotNull(tagInfo79);
    }

    @Test
    void test4463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4463");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(29, (int) (short) 4096);
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataInt2.setValue(19, (int) (byte) -1, (-65281), 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (19, -1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    void test4464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4464");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType10 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType10);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("Element, offset: 37, length: 12, last: 49Bad Type: \n\n", (-5), 34676, tiffDirectoryType10);
        boolean boolean15 = tagInfoAscii14.isText();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType10 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType10.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    void test4465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4465");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader0 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray1 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList2 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, tiffDirectoryArray1);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray4 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList5 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5, tiffFieldArray4);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents7 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader0, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList5);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList8 = tiffContents7.tiffFields;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader9 = tiffContents7.header;
        java.util.List<org.apache.commons.imaging.formats.tiff.AbstractTiffElement> abstractTiffElementList10 = tiffContents7.getElements();
        org.apache.commons.imaging.formats.tiff.TiffImageMetadata tiffImageMetadata11 = new org.apache.commons.imaging.formats.tiff.TiffImageMetadata(tiffContents7);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader12 = tiffContents7.header;
        org.junit.Assert.assertNotNull(tiffDirectoryArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tiffFieldList8);
        org.junit.Assert.assertNull(tiffHeader9);
        org.junit.Assert.assertNotNull(abstractTiffElementList10);
        org.junit.Assert.assertNull(tiffHeader12);
    }

    @Test
    void test4466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4466");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        int int21 = tiffOutputDirectory16.getType();
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldSpliterator22 = tiffOutputDirectory16.spliterator();
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData23 = tiffOutputDirectory16.getRawTiffImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList24 = tiffOutputDirectory16.getFields();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertNotNull(tiffOutputFieldSpliterator22);
        org.junit.Assert.assertNull(abstractTiffImageData23);
        org.junit.Assert.assertNotNull(tiffOutputFieldList24);
    }

    @Test
    void test4467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4467");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType3 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.getFieldType(13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo5 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("32771 (0x8003: Unknown Tag):  (34676 hi!)", 37, abstractFieldType3, 1191191296);
        org.junit.Assert.assertNotNull(abstractFieldType3);
    }

    @Test
    void test4468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4468");
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList8 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.LONG_OR_IFD;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("M", 9, 32844, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong16 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong("A", 79, abstractFieldTypeList8, (int) (short) 10, tiffDirectoryType13, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny17 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("S", 18, 32766, tiffDirectoryType13);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny tagInfoAny18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAny("SLong", 65535, 21, tiffDirectoryType13);
        org.junit.Assert.assertNotNull(abstractFieldTypeList8);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
    }

    @Test
    void test4469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4469");
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader1 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder2 = tiffReader1.getByteOrder();
        java.nio.ByteOrder byteOrder3 = tiffReader1.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setPixelDensity(pixelDensity6);
        java.lang.Integer int8 = tiffImagingParameters5.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters10 = tiffImagingParameters5.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet11 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters12 = tiffImagingParameters10.setOutputSet(tiffOutputSet11);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters10.asThis();
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffContents tiffContents15 = tiffReader1.readContents(byteSource4, tiffImagingParameters13, formatCompliance14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.bytesource.ByteSource.getInputStream()\" because \"byteSource\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(tiffImagingParameters10);
        org.junit.Assert.assertNotNull(tiffImagingParameters12);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
    }

    @Test
    void test4470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4470");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader20 = new org.apache.commons.imaging.formats.tiff.TiffHeader(byteOrder13, (int) (short) 0, (long) 22, false);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
    }

    @Test
    void test4471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4471");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType5 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats tagInfoFloats6 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats("", (int) (byte) 1, (int) (byte) 0, tiffDirectoryType5);
        java.nio.ByteOrder byteOrder7 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_EMBED_POLICY;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals9 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_REDUCTION_MATRIX_1;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational tagInfoShortOrRational10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_AS_SHOT_NEUTRAL;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts12 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational13 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort18 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray19 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort18 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList20 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, abstractFieldTypeArray19);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType22 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList20, tiffDirectoryType22);
        java.nio.ByteOrder byteOrder24 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray26 = tagInfoByte23.encodeValue(byteOrder24, (byte) 0);
        short[] shortArray27 = new short[] {};
        byte[] byteArray28 = tagInfoShortOrLongOrRational13.encodeValue(byteOrder24, shortArray27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational29 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        short[] shortArray43 = new short[] {};
        byte[] byteArray44 = tagInfoShortOrLongOrRational29.encodeValue(byteOrder40, shortArray43);
        byte[] byteArray45 = tagInfoShorts12.encodeValue(byteOrder24, shortArray43);
        byte[] byteArray47 = tagInfoShort11.encodeValue(byteOrder24, (short) (byte) 10);
        short[] shortArray49 = new short[] { (byte) 0 };
        byte[] byteArray50 = tagInfoShortOrRational10.encodeValue(byteOrder24, shortArray49);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals51 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort52 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort57 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray58 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort57 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList59 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, abstractFieldTypeArray58);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType61 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte62 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList59, tiffDirectoryType61);
        java.nio.ByteOrder byteOrder63 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray65 = tagInfoByte62.encodeValue(byteOrder63, (byte) 0);
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray75 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray70, 34713, (int) (byte) 0, false, (-65281));
        short short76 = tagInfoShort52.getValue(byteOrder63, byteArray75);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort81 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray82 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort81 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList83 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList83, abstractFieldTypeArray82);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType85 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte86 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList83, tiffDirectoryType85);
        java.nio.ByteOrder byteOrder87 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray89 = tagInfoByte86.encodeValue(byteOrder87, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray90 = tagInfoSRationals51.getValue(byteOrder63, byteArray89);
        byte[] byteArray91 = tagInfoSRationals9.encodeValue(byteOrder24, rationalNumberArray90);
        byte[] byteArray93 = tagInfoLong8.encodeValue(byteOrder24, 34676);
        float[] floatArray94 = tagInfoFloats6.getValue(byteOrder7, byteArray93);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data95 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 258, byteArray93);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(tagInfoLong8);
        org.junit.Assert.assertNotNull(tagInfoSRationals9);
        org.junit.Assert.assertNotNull(tagInfoShortOrRational10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(tagInfoShorts12);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational13);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational29);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(tagInfoSRationals51);
        org.junit.Assert.assertNotNull(tagInfoShort52);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short76 + "' != '" + (short) 4096 + "'", short76 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[116, -121, 0, 0]");
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[4.8591E-41]");
    }

    @Test
    void test4472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4472");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        tiffOutputSet85.removeField(32768);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addGpsDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii89 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_DATE_TIME;
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField90 = tiffOutputSet85.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoAscii89);
        tiffOutputSet85.removeField((int) 'a');
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryList93 = tiffOutputSet85.getDirectories();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory94 = tiffOutputSet85.getOrCreateGpsDirectory();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField96 = tiffOutputDirectory94.findField((-16714752));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tagInfoAscii89);
        org.junit.Assert.assertNull(tiffOutputField90);
        org.junit.Assert.assertNotNull(tiffOutputDirectoryList93);
        org.junit.Assert.assertNotNull(tiffOutputDirectory94);
        org.junit.Assert.assertNull(tiffOutputField96);
    }

    @Test
    void test4473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4473");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters1 = tiffImageParser0.getDefaultParameters();
        boolean boolean3 = tiffImageParser0.canAcceptExtension("ColorSpace");
        boolean boolean5 = tiffImageParser0.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder6 = tiffImageParser0.getByteOrder();
        java.lang.String str7 = tiffImageParser0.getName();
        org.junit.Assert.assertNotNull(tiffImagingParameters1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Tiff-Custom" + "'", str7, "Tiff-Custom");
    }

    @Test
    void test4474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4474");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters4 = tiffImagingParameters0.setT4Options((java.lang.Integer) (-1));
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = tiffImagingParameters0.setBufferedImageFactory(bufferedImageFactory5);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.setReadThumbnails(false);
        int int9 = tiffImagingParameters6.getSubImageX();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType13 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort14 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType13);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = tagInfoByteOrShort14.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort24 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts25 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational26 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        short[] shortArray40 = new short[] {};
        byte[] byteArray41 = tagInfoShortOrLongOrRational26.encodeValue(byteOrder37, shortArray40);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational42 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort47 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray48 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort47 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList49 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList49, abstractFieldTypeArray48);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType51 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte52 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList49, tiffDirectoryType51);
        java.nio.ByteOrder byteOrder53 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray55 = tagInfoByte52.encodeValue(byteOrder53, (byte) 0);
        short[] shortArray56 = new short[] {};
        byte[] byteArray57 = tagInfoShortOrLongOrRational42.encodeValue(byteOrder53, shortArray56);
        byte[] byteArray58 = tagInfoShorts25.encodeValue(byteOrder37, shortArray56);
        byte[] byteArray60 = tagInfoShort24.encodeValue(byteOrder37, (short) (byte) 10);
        byte[] byteArray67 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int68 = tagInfoDirectory23.getValue(byteOrder37, byteArray67);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort69 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray75 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort74 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList76 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, abstractFieldTypeArray75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, tiffDirectoryType78);
        java.nio.ByteOrder byteOrder80 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray82 = tagInfoByte79.encodeValue(byteOrder80, (byte) 0);
        byte[] byteArray87 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray92 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray87, 34713, (int) (byte) 0, false, (-65281));
        short short93 = tagInfoShort69.getValue(byteOrder80, byteArray92);
        byte[] byteArray94 = tagInfoByteOrShort14.encodeValue(byteOrder37, byteArray92);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet95 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder37);
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory> tiffOutputDirectoryItor96 = tiffOutputSet95.iterator();
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory97 = tiffOutputSet95.addRootDirectory();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters98 = tiffImagingParameters6.setOutputSet(tiffOutputSet95);
        tiffImagingParameters6.clearSubImage();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNotNull(tiffImagingParameters4);
        org.junit.Assert.assertNotNull(tiffImagingParameters6);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType13 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType13.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList15);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort24);
        org.junit.Assert.assertNotNull(tagInfoShorts25);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational42);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1678379530 + "'", int68 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort69);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short93 + "' != '" + (short) 4096 + "'", short93 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[0, 16]");
        org.junit.Assert.assertNotNull(tiffOutputDirectoryItor96);
        org.junit.Assert.assertNotNull(tiffOutputDirectory97);
        org.junit.Assert.assertNotNull(tiffImagingParameters98);
    }

    @Test
    void test4475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4475");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        boolean boolean7 = tiffImagingParameters6.isSubImageSet();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters6.asThis();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension9 = tiffImageParser0.getImageSize(file5, tiffImagingParameters8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
    }

    @Test
    void test4476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4476");
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub stub2 = new org.apache.commons.imaging.formats.tiff.AbstractTiffElement.Stub((long) 32898, 19);
    }

    @Test
    void test4477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4477");
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser0 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder1 = tiffImageParser0.getByteOrder();
        java.lang.String str2 = tiffImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder3 = tiffImageParser0.getByteOrder();
        java.lang.String str4 = tiffImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters6 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        int int7 = tiffImagingParameters6.getSubImageHeight();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters9 = tiffImagingParameters6.setReadThumbnails(false);
        int[] intArray14 = new int[] { (byte) 1, 14, 22 };
        int int15 = org.apache.commons.imaging.internal.SafeOperations.add(intArray14);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab photometricInterpreterCieLab19 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab(34892, intArray14, 20, 9, (-4));
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters20 = tiffImagingParameters9.setCustomPhotometricInterpreter((org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter) photometricInterpreterCieLab19);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = tiffImageParser0.getIccProfileBytes(file5, tiffImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.File.getName()\" because \"file\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tif" + "'", str2, "tif");
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tif" + "'", str4, "tif");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(tiffImagingParameters9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 37 + "'", int15 == 37);
        org.junit.Assert.assertNotNull(tiffImagingParameters20);
    }

    @Test
    void test4478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4478");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong fieldTypeLong2 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong(8, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_7 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals10 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort11 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort16 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray17 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort16 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList18 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, abstractFieldTypeArray17);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList18, tiffDirectoryType20);
        java.nio.ByteOrder byteOrder22 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray24 = tagInfoByte21.encodeValue(byteOrder22, (byte) 0);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray34 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray29, 34713, (int) (byte) 0, false, (-65281));
        short short35 = tagInfoShort11.getValue(byteOrder22, byteArray34);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort40 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray41 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort40 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList42 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, abstractFieldTypeArray41);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType44 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte45 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList42, tiffDirectoryType44);
        java.nio.ByteOrder byteOrder46 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray48 = tagInfoByte45.encodeValue(byteOrder46, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray49 = tagInfoSRationals10.getValue(byteOrder22, byteArray48);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless50 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray48);
        java.nio.ByteOrder byteOrder51 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField53 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_7, (long) 34676, (long) 7, byteArray48, byteOrder51, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType54 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType55 = tiffField53.getFieldType();
        org.apache.commons.imaging.formats.tiff.AbstractTiffElement abstractTiffElement56 = tiffField53.getOversizeValueElement();
        java.lang.String str57 = tiffField53.toString();
        java.lang.Object obj58 = fieldTypeLong2.getValue(tiffField53);
        int int59 = tiffField53.getDirectoryType();
        java.lang.String str60 = tiffField53.getDescriptionWithoutValue();
        org.junit.Assert.assertNotNull(tagInfoSRationals10);
        org.junit.Assert.assertNotNull(tagInfoShort11);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 4096 + "'", short35 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray49);
        org.junit.Assert.assertNotNull(abstractFieldType54);
        org.junit.Assert.assertNotNull(abstractFieldType55);
        org.junit.Assert.assertNotNull(abstractTiffElement56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "32771 (0x8003: Unknown Tag):  (34676 hi!)" + "'", str57, "32771 (0x8003: Unknown Tag):  (34676 hi!)");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 31 + "'", int59 == 31);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "32771 (0x8003: Unknown Tag): " + "'", str60, "32771 (0x8003: Unknown Tag): ");
    }

    @Test
    void test4479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4479");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData18 = tiffOutputDirectory16.getRawJpegImageData();
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList21 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SHORT_OR_LONG;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs tagInfoLongs32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs("hi!", (int) (short) -1, (-4), tiffDirectoryType30, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("M", 95, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts34 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts("M", 20, 65536, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 3, abstractFieldTypeList21, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoByte35, (byte) 1);
        java.util.List<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldList38 = tiffOutputDirectory16.getFields();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational tagInfoAsciiOrRational39 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii40 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_INTEROPERABILITY_INDEX;
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser41 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder42 = tiffImageParser41.getByteOrder();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType52 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte53 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals54 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType52);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType52);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoSByte55.encodeValue(byteOrder56, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory59 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder56);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData60 = tiffOutputDirectory59.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData61 = tiffOutputDirectory59.getRawJpegImageData();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.write.TiffOutputField> tiffOutputFieldItor62 = tiffOutputDirectory59.iterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType72 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte73 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals74 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType72);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte75 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType72);
        java.nio.ByteOrder byteOrder76 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray78 = tagInfoSByte75.encodeValue(byteOrder76, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory79 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder76);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData80 = tiffOutputDirectory79.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii81 = org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants.EXIF_TAG_MD_PREP_TIME;
        java.lang.String[] strArray82 = new java.lang.String[] {};
        tiffOutputDirectory79.add(tagInfoAscii81, strArray82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii84 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_PROFILE_NAME;
        java.nio.ByteOrder byteOrder85 = null;
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "E", "", "S", "V", "ImageColorIndicator" };
        byte[] byteArray93 = tagInfoAscii84.encodeValue(byteOrder85, strArray92);
        tiffOutputDirectory59.add(tagInfoAscii81, strArray92);
        byte[] byteArray95 = tagInfoAscii40.encodeValue(byteOrder42, strArray92);
        // The following exception was thrown during execution in test generation
        try {
            tiffOutputDirectory16.add(tagInfoAsciiOrRational39, strArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational.encodeValue(org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType, Object, java.nio.ByteOrder)\" because \"tagInfo\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNull(jpegImageData18);
        org.junit.Assert.assertNotNull(abstractFieldTypeList21);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tiffOutputFieldList38);
        org.junit.Assert.assertNotNull(tagInfoAscii40);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType52 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType52.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData60);
        org.junit.Assert.assertNull(jpegImageData61);
        org.junit.Assert.assertNotNull(tiffOutputFieldItor62);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType72 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType72.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData80);
        org.junit.Assert.assertNotNull(tagInfoAscii81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(tagInfoAscii84);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[104, 105, 33, 0, 69, 0, 0, 83, 0, 86, 0, 73, 109, 97, 103, 101, 67, 111, 108, 111, 114, 73, 110, 100, 105, 99, 97, 116, 111, 114, 0]");
    }

    @Test
    void test4480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4480");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(64, 71, (int) (byte) 1);
        tiffRasterDataFloat3.setIntValue(30, 3, 51041, 32947);
    }

    @Test
    void test4481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4481");
        int[] intArray6 = new int[] { (byte) 1, 14, 22 };
        int int7 = org.apache.commons.imaging.internal.SafeOperations.add(intArray6);
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel photometricInterpreterBiLevel12 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel((int) '4', intArray6, 1, 11, 7, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt13 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(34905, 20, intArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Specified data does not contain sufficient elements");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 14, 22]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 37 + "'", int7 == 37);
    }

    @Test
    void test4482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4482");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DIFFERENTIAL;
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader2 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray3 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList4 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, tiffDirectoryArray3);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray6 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList7 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7, tiffFieldArray6);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents9 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader2, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList4, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList7);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList10 = tiffContents9.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator11 = tiffFieldList10.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType21 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte24 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType21);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals25 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort26 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray32 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort31 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList33 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, abstractFieldTypeArray32);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType35 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte36 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList33, tiffDirectoryType35);
        java.nio.ByteOrder byteOrder37 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray39 = tagInfoByte36.encodeValue(byteOrder37, (byte) 0);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray44, 34713, (int) (byte) 0, false, (-65281));
        short short50 = tagInfoShort26.getValue(byteOrder37, byteArray49);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray56 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort55 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList57 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, abstractFieldTypeArray56);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType59 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte60 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList57, tiffDirectoryType59);
        java.nio.ByteOrder byteOrder61 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray63 = tagInfoByte60.encodeValue(byteOrder61, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray64 = tagInfoSRationals25.getValue(byteOrder37, byteArray63);
        byte[] byteArray66 = tagInfoSByte24.encodeValue(byteOrder37, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory67 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList10, (long) 34712, (long) 9, byteOrder37);
        java.nio.ByteOrder byteOrder68 = tiffDirectory67.getByteOrder();
        java.awt.image.BufferedImage bufferedImage69 = tiffDirectory67.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType79 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType79);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType79);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType79);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong83 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType79);
        java.lang.Object obj84 = tiffDirectory67.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong83);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser85 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters86 = tiffImageParser85.getDefaultParameters();
        boolean boolean88 = tiffImageParser85.canAcceptExtension("ColorSpace");
        boolean boolean90 = tiffImageParser85.canAcceptExtension("TIFF image data: 0 bytes");
        java.nio.ByteOrder byteOrder91 = tiffImageParser85.getByteOrder();
        byte[] byteArray93 = tagInfoSLong83.encodeValue(byteOrder91, 89);
        byte[] byteArray95 = tagInfoShort0.encodeValue(byteOrder91, (short) 100);
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(tiffDirectoryArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tiffFieldList10);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator11);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType21 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType21.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals25);
        org.junit.Assert.assertNotNull(tagInfoShort26);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short50 + "' != '" + (short) 4096 + "'", short50 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(bufferedImage69);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType79 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType79.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(tiffImagingParameters86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(byteOrder91);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[0, 0, 0, 89]");
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[0, 100]");
    }

    @Test
    void test4483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4483");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataInt tiffRasterDataInt2 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataInt(10, (int) (short) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterDataType tiffRasterDataType3 = tiffRasterDataInt2.getDataType();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataInt2.getSimpleStatistics();
        float[] floatArray5 = tiffRasterDataInt2.getData();
        int int6 = tiffRasterDataInt2.getSamplesPerPixel();
        int[] intArray7 = tiffRasterDataInt2.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataInt2.getSimpleStatistics();
        int int9 = tiffRasterDataInt2.getSamplesPerPixel();
        int int10 = tiffRasterDataInt2.getSamplesPerPixel();
        org.junit.Assert.assertTrue("'" + tiffRasterDataType3 + "' != '" + org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER + "'", tiffRasterDataType3.equals(org.apache.commons.imaging.formats.tiff.TiffRasterDataType.INTEGER));
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    void test4484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4484");
        org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat photometricInterpreterFloat2 = new org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint.PhotometricInterpreterFloat((float) 65536, (float) 32896);
        org.apache.commons.imaging.common.ImageBuilder imageBuilder3 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongOrIfd tagInfoLongOrIfd4 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_SUB_IFD;
        java.nio.ByteOrder byteOrder5 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts11 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_BLACK_LEVEL_REPEAT_DIM;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals12 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals14 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort15 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort20 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort20 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList22 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, abstractFieldTypeArray21);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType24 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte25 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList22, tiffDirectoryType24);
        java.nio.ByteOrder byteOrder26 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray28 = tagInfoByte25.encodeValue(byteOrder26, (byte) 0);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray38 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray33, 34713, (int) (byte) 0, false, (-65281));
        short short39 = tagInfoShort15.getValue(byteOrder26, byteArray38);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort44 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray45 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort44 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList46 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, abstractFieldTypeArray45);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType48 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte49 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList46, tiffDirectoryType48);
        java.nio.ByteOrder byteOrder50 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray52 = tagInfoByte49.encodeValue(byteOrder50, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray53 = tagInfoSRationals14.getValue(byteOrder26, byteArray52);
        byte[] byteArray54 = tagInfoRationals12.encodeValue(byteOrder13, rationalNumberArray53);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort55 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort60 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray61 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort60 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList62 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, abstractFieldTypeArray61);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType64 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte65 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList62, tiffDirectoryType64);
        java.nio.ByteOrder byteOrder66 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray68 = tagInfoByte65.encodeValue(byteOrder66, (byte) 0);
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray78 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray73, 34713, (int) (byte) 0, false, (-65281));
        short short79 = tagInfoShort55.getValue(byteOrder66, byteArray78);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless80 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray78);
        short[] shortArray81 = tagInfoShorts11.getValue(byteOrder13, byteArray78);
        int[] intArray82 = new int[] {};
        byte[] byteArray83 = tagInfoShortOrLongOrRational10.encodeValue(byteOrder13, intArray82);
        byte[] byteArray84 = tagInfoLongOrIfd4.encodeValue(byteOrder5, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            photometricInterpreterFloat2.interpretPixel(imageBuilder3, intArray82, 4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoLongOrIfd4);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoShorts11);
        org.junit.Assert.assertNotNull(tagInfoRationals12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(tagInfoSRationals14);
        org.junit.Assert.assertNotNull(tagInfoShort15);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short39 + "' != '" + (short) 4096 + "'", short39 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(tagInfoShort55);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short79 + "' != '" + (short) 4096 + "'", short79 == (short) 4096);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[4096]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
    }

    @Test
    void test4485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4485");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int int6 = tiffRasterDataFloat3.getIntValue(3, 0);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics((float) 64L);
        int int9 = tiffRasterDataFloat3.getSamplesPerPixel();
        float[] floatArray10 = tiffRasterDataFloat3.getData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics11 = tiffRasterDataFloat3.getSimpleStatistics();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertNotNull(tiffRasterStatistics11);
    }

    @Test
    void test4486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4486");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        tiffImagingParameters5.clearSubImage();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.setFileName("M");
        int int9 = tiffImagingParameters8.getSubImageHeight();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    void test4487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4487");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType2 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte3 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("", 34743, tiffDirectoryType2);
    }

    @Test
    void test4488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4488");
        java.nio.ByteOrder byteOrder0 = null;
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy tiffImageWriterLossy1 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy(byteOrder0);
    }

    @Test
    void test4489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4489");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals("E", (int) (byte) 0, (int) (byte) 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("M", (int) (byte) 1, tiffDirectoryType9);
        java.nio.ByteOrder byteOrder13 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray15 = tagInfoSByte12.encodeValue(byteOrder13, (byte) 0);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory16 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory(31, byteOrder13);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData abstractTiffImageData17 = tiffOutputDirectory16.getRawTiffImageData();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = org.apache.commons.imaging.formats.tiff.constants.Rfc2301TagConstants.TIFF_TAG_FAX_PROFILE;
        tiffOutputDirectory16.add(tagInfoByte18, (byte) 1);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputField tiffOutputField22 = tiffOutputDirectory16.findField(71);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType30 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii31 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType30);
        tiffOutputDirectory16.add(tagInfoFloat33, (float) 32803);
        org.apache.commons.imaging.formats.tiff.JpegImageData jpegImageData36 = null;
        tiffOutputDirectory16.setJpegImageData(jpegImageData36);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType45 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii tagInfoAscii46 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii("M", 0, 65000, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort47 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort("", (int) (short) 0, tiffDirectoryType45);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat tagInfoFloat48 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat("", 17, tiffDirectoryType45);
        tiffOutputDirectory16.add(tagInfoFloat48, (float) 34712);
        tiffOutputDirectory16.sortFields();
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0]");
        org.junit.Assert.assertNull(abstractTiffImageData17);
        org.junit.Assert.assertNotNull(tagInfoByte18);
        org.junit.Assert.assertNull(tiffOutputField22);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType30 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType30.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
        org.junit.Assert.assertTrue("'" + tiffDirectoryType45 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES + "'", tiffDirectoryType45.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES));
    }

    @Test
    void test4490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4490");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        int[] intArray4 = tiffRasterDataFloat3.getIntData();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics6 = tiffRasterDataFloat3.getSimpleStatistics((float) 34892);
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics8 = tiffRasterDataFloat3.getSimpleStatistics();
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics10 = tiffRasterDataFloat3.getSimpleStatistics((float) 13);
        int int11 = tiffRasterDataFloat3.getWidth();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(tiffRasterStatistics6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(tiffRasterStatistics8);
        org.junit.Assert.assertNotNull(tiffRasterStatistics10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 16 + "'", int11 == 16);
    }

    @Test
    void test4491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4491");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType9 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes tagInfoBytes11 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes("N", 0, 34661, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles tagInfoDoubles12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles("", 5, 0, tiffDirectoryType9);
        org.apache.commons.imaging.formats.tiff.TiffReader tiffReader14 = new org.apache.commons.imaging.formats.tiff.TiffReader(true);
        java.nio.ByteOrder byteOrder15 = tiffReader14.getByteOrder();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType21 = null;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType28 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte29 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("", 34713, tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined tagInfoUndefined30 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined("K", (int) (short) 1, tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfo tagInfo32 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfo("hi!", 11, abstractFieldType21, 34677, tiffDirectoryType28, false);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns33 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns("262 (0x106: PhotometricInterpretation): Bad Type: \n\n", (-4), (int) '#', tiffDirectoryType28);
        org.apache.commons.imaging.formats.tiff.TiffImageParser tiffImageParser34 = new org.apache.commons.imaging.formats.tiff.TiffImageParser();
        java.nio.ByteOrder byteOrder35 = tiffImageParser34.getByteOrder();
        java.lang.String str36 = tiffImageParser34.getDefaultExtension();
        java.nio.ByteOrder byteOrder37 = tiffImageParser34.getByteOrder();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals42 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals44 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort45 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort50 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray51 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort50 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList52 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, abstractFieldTypeArray51);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType54 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte55 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList52, tiffDirectoryType54);
        java.nio.ByteOrder byteOrder56 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray58 = tagInfoByte55.encodeValue(byteOrder56, (byte) 0);
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray68 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray63, 34713, (int) (byte) 0, false, (-65281));
        short short69 = tagInfoShort45.getValue(byteOrder56, byteArray68);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort74 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray75 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort74 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList76 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, abstractFieldTypeArray75);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList76, tiffDirectoryType78);
        java.nio.ByteOrder byteOrder80 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray82 = tagInfoByte79.encodeValue(byteOrder80, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray83 = tagInfoSRationals44.getValue(byteOrder56, byteArray82);
        byte[] byteArray84 = tagInfoRationals42.encodeValue(byteOrder43, rationalNumberArray83);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data85 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray84);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data86 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) ' ', 32809, byteArray84);
        byte[] byteArray87 = tagInfoUnknowns33.encodeValue(byteOrder37, byteArray84);
        double[] doubleArray88 = tagInfoDoubles12.getValue(byteOrder15, byteArray87);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType9 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType9.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType28 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType28.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tif" + "'", str36, "tif");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(tagInfoRationals42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(tagInfoSRationals44);
        org.junit.Assert.assertNotNull(tagInfoShort45);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short69 + "' != '" + (short) 4096 + "'", short69 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
    }

    @Test
    void test4492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4492");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType3 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort4 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("", 16, 21, tiffDirectoryType3);
        java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList5 = tagInfoByteOrShort4.dataTypes;
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType11 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.getExifDirectoryType(1);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble tagInfoDouble12 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble("S", (int) (short) 100, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory tagInfoDirectory13 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory("", 69, tiffDirectoryType11);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort14 = org.apache.commons.imaging.formats.tiff.constants.TiffEpTagConstants.EXIF_TAG_INTERLACE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts15 = org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants.TIFF_TAG_MIN_SAMPLE_VALUE;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational16 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort21 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray22 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort21 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList23 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, abstractFieldTypeArray22);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType25 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte26 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList23, tiffDirectoryType25);
        java.nio.ByteOrder byteOrder27 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray29 = tagInfoByte26.encodeValue(byteOrder27, (byte) 0);
        short[] shortArray30 = new short[] {};
        byte[] byteArray31 = tagInfoShortOrLongOrRational16.encodeValue(byteOrder27, shortArray30);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational32 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_DEFAULT_CROP_ORIGIN;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        short[] shortArray46 = new short[] {};
        byte[] byteArray47 = tagInfoShortOrLongOrRational32.encodeValue(byteOrder43, shortArray46);
        byte[] byteArray48 = tagInfoShorts15.encodeValue(byteOrder27, shortArray46);
        byte[] byteArray50 = tagInfoShort14.encodeValue(byteOrder27, (short) (byte) 10);
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 100, (byte) 10, (byte) 1 };
        int int58 = tagInfoDirectory13.getValue(byteOrder27, byteArray57);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort59 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort64 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray65 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort64 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList66 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, abstractFieldTypeArray65);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType68 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte69 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList66, tiffDirectoryType68);
        java.nio.ByteOrder byteOrder70 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray72 = tagInfoByte69.encodeValue(byteOrder70, (byte) 0);
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray82 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray77, 34713, (int) (byte) 0, false, (-65281));
        short short83 = tagInfoShort59.getValue(byteOrder70, byteArray82);
        byte[] byteArray84 = tagInfoByteOrShort4.encodeValue(byteOrder27, byteArray82);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet85 = new org.apache.commons.imaging.formats.tiff.write.TiffOutputSet(byteOrder27);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong tagInfoLong86 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_AFCP_IPTC;
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoLong86);
        org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory tiffOutputDirectory88 = tiffOutputSet85.addExifDirectory();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals89 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_TIME_STAMP;
        java.lang.String str90 = tagInfoRationals89.toString();
        tiffOutputSet85.removeField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoRationals89);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType3 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType3.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(abstractFieldTypeList5);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType11 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1 + "'", tiffDirectoryType11.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.TIFF_DIRECTORY_IFD1));
        org.junit.Assert.assertNotNull(tagInfoShort14);
        org.junit.Assert.assertNotNull(tagInfoShorts15);
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational16);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(tagInfoShortOrLongOrRational32);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 10, 10, 100, 10, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1678379530 + "'", int58 == 1678379530);
        org.junit.Assert.assertNotNull(tagInfoShort59);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) 4096 + "'", short83 == (short) 4096);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 16]");
        org.junit.Assert.assertNotNull(tagInfoLong86);
        org.junit.Assert.assertNotNull(tiffOutputDirectory88);
        org.junit.Assert.assertNotNull(tagInfoRationals89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]" + "'", str90, "[TagInfo. tag: 7 (0x7, name: GPSTimeStamp]");
    }

    @Test
    void test4493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4493");
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType7 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort tagInfoSShort8 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort("W", 34905, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString tagInfoXpString9 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString("280 (0x118: MinSampleValue): ", 34661, tiffDirectoryType7);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds tagInfoUndefineds10 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefineds("Element, offset: -65281, length: 2, last: -65279", 19, 32809, tiffDirectoryType7);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType7 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS + "'", tiffDirectoryType7.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_GPS));
    }

    @Test
    void test4494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4494");
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters0 = new org.apache.commons.imaging.formats.tiff.TiffImagingParameters();
        org.apache.commons.imaging.PixelDensity pixelDensity1 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters2 = tiffImagingParameters0.setPixelDensity(pixelDensity1);
        java.lang.Integer int3 = tiffImagingParameters0.getT4Options();
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters5 = tiffImagingParameters0.setXmpXml("V");
        org.apache.commons.imaging.formats.tiff.write.TiffOutputSet tiffOutputSet6 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters7 = tiffImagingParameters5.setOutputSet(tiffOutputSet6);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters8 = tiffImagingParameters5.asThis();
        tiffImagingParameters8.clearSubImage();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory10 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters11 = tiffImagingParameters8.setBufferedImageFactory(bufferedImageFactory10);
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters13 = tiffImagingParameters8.setCompression((java.lang.Integer) 80);
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory14 = tiffImagingParameters8.getBufferedImageFactory();
        org.apache.commons.imaging.common.BufferedImageFactory bufferedImageFactory15 = null;
        org.apache.commons.imaging.formats.tiff.TiffImagingParameters tiffImagingParameters16 = tiffImagingParameters8.setBufferedImageFactory(bufferedImageFactory15);
        org.apache.commons.imaging.PixelDensity pixelDensity17 = tiffImagingParameters16.getPixelDensity();
        org.junit.Assert.assertNotNull(tiffImagingParameters2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(tiffImagingParameters5);
        org.junit.Assert.assertNotNull(tiffImagingParameters7);
        org.junit.Assert.assertNotNull(tiffImagingParameters8);
        org.junit.Assert.assertNotNull(tiffImagingParameters11);
        org.junit.Assert.assertNotNull(tiffImagingParameters13);
        org.junit.Assert.assertNull(bufferedImageFactory14);
        org.junit.Assert.assertNotNull(tiffImagingParameters16);
        org.junit.Assert.assertNull(pixelDensity17);
    }

    @Test
    void test4495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4495");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals tagInfoRationals2 = org.apache.commons.imaging.formats.tiff.constants.GpsTagConstants.GPS_TAG_GPS_DEST_LONGITUDE;
        java.nio.ByteOrder byteOrder3 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals4 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort5 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort10 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray11 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort10 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList12 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, abstractFieldTypeArray11);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType14 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte15 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList12, tiffDirectoryType14);
        java.nio.ByteOrder byteOrder16 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray18 = tagInfoByte15.encodeValue(byteOrder16, (byte) 0);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray28 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray23, 34713, (int) (byte) 0, false, (-65281));
        short short29 = tagInfoShort5.getValue(byteOrder16, byteArray28);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort34 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray35 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort34 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList36 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, abstractFieldTypeArray35);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType38 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte39 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList36, tiffDirectoryType38);
        java.nio.ByteOrder byteOrder40 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray42 = tagInfoByte39.encodeValue(byteOrder40, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray43 = tagInfoSRationals4.getValue(byteOrder16, byteArray42);
        byte[] byteArray44 = tagInfoRationals2.encodeValue(byteOrder3, rationalNumberArray43);
        org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data data45 = new org.apache.commons.imaging.formats.tiff.AbstractTiffImageData.Data((long) 64, 34712, byteArray44);
        byte[] byteArray49 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_1D(byteArray44, (-1), 89, false);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray53 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.decompressT4_1D(byteArray44, 29, 11, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Decompression error");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tagInfoRationals2);
        org.junit.Assert.assertNotNull(byteOrder3);
        org.junit.Assert.assertNotNull(tagInfoSRationals4);
        org.junit.Assert.assertNotNull(tagInfoShort5);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short29 + "' != '" + (short) 4096 + "'", short29 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1, 53, 0, 19, 80, 1]");
    }

    @Test
    void test4496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4496");
        org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat tiffRasterDataFloat3 = new org.apache.commons.imaging.formats.tiff.TiffRasterDataFloat(16, 21, (int) (byte) 1);
        org.apache.commons.imaging.formats.tiff.TiffRasterStatistics tiffRasterStatistics4 = tiffRasterDataFloat3.getSimpleStatistics();
        int[] intArray5 = tiffRasterDataFloat3.getIntData();
        int[] intArray6 = tiffRasterDataFloat3.getIntData();
        int int7 = tiffRasterDataFloat3.getSamplesPerPixel();
        // The following exception was thrown during execution in test generation
        try {
            tiffRasterDataFloat3.setValue(15, 48257, (-16751104), (float) 7L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Coordinates out of range (15, 48257)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffRasterStatistics4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    void test4497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4497");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_4 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals7 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort8 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort13 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort13 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList15 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, abstractFieldTypeArray14);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType17 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte18 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList15, tiffDirectoryType17);
        java.nio.ByteOrder byteOrder19 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray21 = tagInfoByte18.encodeValue(byteOrder19, (byte) 0);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray31 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray26, 34713, (int) (byte) 0, false, (-65281));
        short short32 = tagInfoShort8.getValue(byteOrder19, byteArray31);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort37 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort37 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList39 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, abstractFieldTypeArray38);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType41 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte42 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList39, tiffDirectoryType41);
        java.nio.ByteOrder byteOrder43 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray45 = tagInfoByte42.encodeValue(byteOrder43, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray46 = tagInfoSRationals7.getValue(byteOrder19, byteArray45);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless47 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray45);
        java.nio.ByteOrder byteOrder48 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField50 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_4, (long) 34676, (long) 7, byteArray45, byteOrder48, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType51 = tiffField50.getFieldType();
        boolean boolean52 = tiffField50.isLocalValue();
        java.lang.String str53 = tiffField50.getFieldTypeName();
        java.lang.String str54 = tiffField50.getValueDescription();
        java.lang.String str55 = tiffField50.getValueDescription();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType56 = tiffField50.getFieldType();
        int int57 = abstractFieldType56.getType();
        org.junit.Assert.assertNotNull(tagInfoSRationals7);
        org.junit.Assert.assertNotNull(tagInfoShort8);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short32 + "' != '" + (short) 4096 + "'", short32 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray46);
        org.junit.Assert.assertNotNull(abstractFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(abstractFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 34712 + "'", int57 == 34712);
    }

    @Test
    void test4498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4498");
        org.apache.commons.imaging.formats.tiff.TiffHeader tiffHeader1 = null;
        org.apache.commons.imaging.formats.tiff.TiffDirectory[] tiffDirectoryArray2 = new org.apache.commons.imaging.formats.tiff.TiffDirectory[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory> tiffDirectoryList3 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffDirectory>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, tiffDirectoryArray2);
        org.apache.commons.imaging.formats.tiff.TiffField[] tiffFieldArray5 = new org.apache.commons.imaging.formats.tiff.TiffField[] {};
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList6 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.TiffField>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6, tiffFieldArray5);
        org.apache.commons.imaging.formats.tiff.TiffContents tiffContents8 = new org.apache.commons.imaging.formats.tiff.TiffContents(tiffHeader1, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffDirectory>) tiffDirectoryList3, (java.util.List<org.apache.commons.imaging.formats.tiff.TiffField>) tiffFieldList6);
        java.util.List<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldList9 = tiffContents8.tiffFields;
        java.util.Spliterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldSpliterator10 = tiffFieldList9.spliterator();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType20 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational tagInfoSRational21 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational("", (int) (byte) 1, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort tagInfoByteOrShort22 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByteOrShort("ImageColorIndicator", 8, (int) '#', tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte tagInfoSByte23 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte("E", 32897, tiffDirectoryType20);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals24 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort25 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort30 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray31 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort30 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList32 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, abstractFieldTypeArray31);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType34 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte35 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList32, tiffDirectoryType34);
        java.nio.ByteOrder byteOrder36 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray38 = tagInfoByte35.encodeValue(byteOrder36, (byte) 0);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray48 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray43, 34713, (int) (byte) 0, false, (-65281));
        short short49 = tagInfoShort25.getValue(byteOrder36, byteArray48);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort54 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray55 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort54 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList56 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, abstractFieldTypeArray55);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType58 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte59 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList56, tiffDirectoryType58);
        java.nio.ByteOrder byteOrder60 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray62 = tagInfoByte59.encodeValue(byteOrder60, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray63 = tagInfoSRationals24.getValue(byteOrder36, byteArray62);
        byte[] byteArray65 = tagInfoSByte23.encodeValue(byteOrder36, (byte) 100);
        org.apache.commons.imaging.formats.tiff.TiffDirectory tiffDirectory66 = new org.apache.commons.imaging.formats.tiff.TiffDirectory(88, tiffFieldList9, (long) 34712, (long) 9, byteOrder36);
        java.nio.ByteOrder byteOrder67 = tiffDirectory66.getByteOrder();
        java.awt.image.BufferedImage bufferedImage68 = tiffDirectory66.getTiffImage();
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType78 = org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational tagInfoShortOrLongOrRational79 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLongOrRational("hi!", 255, 34712, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte80 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("hi!", 5, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational tagInfoRational81 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational("", 22, tiffDirectoryType78);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong tagInfoSLong82 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong("hi!", 5, tiffDirectoryType78);
        java.lang.Object obj83 = tiffDirectory66.getFieldValue((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoSLong82);
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUnknowns tagInfoUnknowns84 = org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants.EXIF_TAG_ANNOTATIONS;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField86 = tiffDirectory66.findField((org.apache.commons.imaging.formats.tiff.taginfos.TagInfo) tagInfoUnknowns84, false);
        boolean boolean87 = tiffDirectory66.hasTiffFloatingPointRasterData();
        java.nio.ByteOrder byteOrder88 = tiffDirectory66.getByteOrder();
        java.util.Iterator<org.apache.commons.imaging.formats.tiff.TiffField> tiffFieldItor89 = tiffDirectory66.iterator();
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts tagInfoShorts90 = org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants.EXIF_TAG_GEO_KEY_DIRECTORY_TAG;
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray92 = tiffDirectory66.getFieldValue(tagInfoShorts90, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.imaging.ImagingException; message: Required field \"GeoKeyDirectoryTag\" is missing");
        } catch (org.apache.commons.imaging.ImagingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(tiffDirectoryArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tiffFieldArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tiffFieldList9);
        org.junit.Assert.assertNotNull(tiffFieldSpliterator10);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType20 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType20.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNotNull(tagInfoSRationals24);
        org.junit.Assert.assertNotNull(tagInfoShort25);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 4096 + "'", short49 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(bufferedImage68);
        org.junit.Assert.assertTrue("'" + tiffDirectoryType78 + "' != '" + org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD + "'", tiffDirectoryType78.equals(org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(tagInfoUnknowns84);
        org.junit.Assert.assertNull(tiffField86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(tiffFieldItor89);
        org.junit.Assert.assertNotNull(tagInfoShorts90);
    }

    @Test
    void test4499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4499");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort0 = org.apache.commons.imaging.formats.tiff.constants.AdobePageMaker6TagConstants.TIFF_TAG_OPIPROXY;
        java.lang.Class<?> wildcardClass1 = tagInfoShort0.getClass();
        org.junit.Assert.assertNotNull(tagInfoShort0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    void test4500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4500");
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte fieldTypeByte0 = org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType.SBYTE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8 fieldTypeLong8_5 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8(34712, "hi!");
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals tagInfoSRationals8 = org.apache.commons.imaging.formats.tiff.constants.DngTagConstants.EXIF_TAG_FORWARD_MATRIX2;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort tagInfoShort9 = org.apache.commons.imaging.formats.tiff.constants.DcfTagConstants.EXIF_TAG_COLOR_SPACE;
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort14 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray15 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort14 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList16 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, abstractFieldTypeArray15);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType18 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte19 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList16, tiffDirectoryType18);
        java.nio.ByteOrder byteOrder20 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray22 = tagInfoByte19.encodeValue(byteOrder20, (byte) 0);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) -1, (byte) 10, (byte) -1 };
        byte[] byteArray32 = org.apache.commons.imaging.formats.tiff.itu_t4.T4AndT6Compression.compressT4_2D(byteArray27, 34713, (int) (byte) 0, false, (-65281));
        short short33 = tagInfoShort9.getValue(byteOrder20, byteArray32);
        org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort fieldTypeShort38 = new org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort((int) (short) -1, "");
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] abstractFieldTypeArray39 = new org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType[] { fieldTypeShort38 };
        java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType> abstractFieldTypeList40 = new java.util.ArrayList<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, abstractFieldTypeArray39);
        org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType tiffDirectoryType42 = null;
        org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte tagInfoByte43 = new org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte("S", (-1), (java.util.List<org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType>) abstractFieldTypeList40, tiffDirectoryType42);
        java.nio.ByteOrder byteOrder44 = org.apache.commons.imaging.formats.tiff.constants.TiffConstants.DEFAULT_TIFF_BYTE_ORDER;
        byte[] byteArray46 = tagInfoByte43.encodeValue(byteOrder44, (byte) 0);
        org.apache.commons.imaging.common.RationalNumber[] rationalNumberArray47 = tagInfoSRationals8.getValue(byteOrder20, byteArray46);
        org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless tiffImageWriterLossless48 = new org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless(byteArray46);
        java.nio.ByteOrder byteOrder49 = null;
        org.apache.commons.imaging.formats.tiff.TiffField tiffField51 = new org.apache.commons.imaging.formats.tiff.TiffField(32771, 31, (org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_5, (long) 34676, (long) 7, byteArray46, byteOrder49, 9);
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType52 = tiffField51.getFieldType();
        boolean boolean53 = tiffField51.isLocalValue();
        java.lang.Object obj54 = fieldTypeByte0.getValue(tiffField51);
        int int55 = tiffField51.getBytesLength();
        byte[] byteArray56 = tiffField51.getByteArrayValue();
        int int57 = tiffField51.getDirectoryType();
        java.lang.String str58 = tiffField51.getTagName();
        org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType abstractFieldType59 = tiffField51.getFieldType();
        org.junit.Assert.assertNotNull(fieldTypeByte0);
        org.junit.Assert.assertNotNull(tagInfoSRationals8);
        org.junit.Assert.assertNotNull(tagInfoShort9);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 16]");
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 4096 + "'", short33 == (short) 4096);
        org.junit.Assert.assertNotNull(abstractFieldTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0]");
        org.junit.Assert.assertNotNull(rationalNumberArray47);
        org.junit.Assert.assertNotNull(abstractFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 277408 + "'", int55 == 277408);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 31 + "'", int57 == 31);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Unknown Tag (0x8003)" + "'", str58, "Unknown Tag (0x8003)");
        org.junit.Assert.assertNotNull(abstractFieldType59);
    }
}

